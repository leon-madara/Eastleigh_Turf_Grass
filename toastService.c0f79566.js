class a{constructor(){this.toastContainer=null,this.toastQueue=[],this.isProcessing=!1,this.defaultDuration=3e3,this.init()}init(){document.getElementById("toast-container")||this.createToastContainer(),this.toastContainer=document.getElementById("toast-container")}createToastContainer(){const t=document.createElement("div");t.id="toast-container",t.className="toast-container",document.body.appendChild(t)}show(t,s="info",e=this.defaultDuration){const i=this.createToast(t,s);this.toastQueue.push({toast:i,duration:e}),this.isProcessing||this.processQueue()}createToast(t,s){const e=document.createElement("div");e.className=`toast-notification ${s}`;const i=this.getIconForType(s);return e.innerHTML=`
            <div class="toast-header">
                <i class="${i}"></i>
                <span class="toast-title">${this.getTitleForType(s)}</span>
                <button class="toast-close" aria-label="Close notification">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="toast-message">${t}</div>
        `,e.querySelector(".toast-close").addEventListener("click",()=>{this.hideToast(e)}),e}getIconForType(t){const s={success:"fas fa-check-circle",error:"fas fa-exclamation-circle",warning:"fas fa-exclamation-triangle",info:"fas fa-info-circle"};return s[t]||s.info}getTitleForType(t){const s={success:"Success",error:"Error",warning:"Warning",info:"Information"};return s[t]||s.info}processQueue(){if(this.toastQueue.length===0){this.isProcessing=!1;return}this.isProcessing=!0;const{toast:t,duration:s}=this.toastQueue.shift();this.toastContainer.appendChild(t),requestAnimationFrame(()=>{t.classList.add("show")}),setTimeout(()=>{this.hideToast(t)},s)}hideToast(t){t.classList.add("hiding"),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),this.processQueue()},300)}success(t,s){this.show(t,"success",s)}error(t,s){this.show(t,"error",s)}warning(t,s){this.show(t,"warning",s)}info(t,s){this.show(t,"info",s)}clear(){this.toastContainer&&(this.toastContainer.innerHTML=""),this.toastQueue=[],this.isProcessing=!1}}const n=new a;window.ToastService=n;window.showToast=(o,t,s="info")=>{n.show(t||o,s)};
//# sourceMappingURL=toastService.c0f79566.js.map
