{"version":3,"file":"toast.f81f0a6b.js","sources":["../src/js/components/header.js","../src/js/components/toast.js"],"sourcesContent":["// Header Component\r\n(() => {\r\n    let hamburgerMenu, mobileNav;\r\n\r\n    function init() {\r\n        // Prevent duplicate initialization\r\n        if (document.querySelector('.header')?.dataset.headerInitialized) {\r\n            return;\r\n        }\r\n\r\n        hamburgerMenu = document.getElementById('hamburgerMenu');\r\n        mobileNav = document.getElementById('mobileNav');\r\n\r\n        if (hamburgerMenu && mobileNav) {\r\n            bindEvents();\r\n            // Mark as initialized\r\n            document.querySelector('.header').dataset.headerInitialized = 'true';\r\n        }\r\n    }\r\n\r\n    function bindEvents() {\r\n        // Hamburger menu toggle\r\n        hamburgerMenu.addEventListener('click', toggleMobileMenu);\r\n\r\n        // Close mobile menu when clicking on a link\r\n        const mobileNavLinks = mobileNav.querySelectorAll('.nav-link');\r\n        mobileNavLinks.forEach(link => {\r\n            link.addEventListener('click', closeMobileMenu);\r\n        });\r\n\r\n        // Close mobile menu when clicking outside\r\n        document.addEventListener('click', (e) => {\r\n            if (!hamburgerMenu.contains(e.target) && !mobileNav.contains(e.target)) {\r\n                closeMobileMenu();\r\n            }\r\n        });\r\n\r\n        // Close mobile menu on escape key\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.key === 'Escape') {\r\n                closeMobileMenu();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function toggleMobileMenu() {\r\n        hamburgerMenu.classList.toggle('active');\r\n        mobileNav.classList.toggle('active');\r\n\r\n        // Prevent body scroll when menu is open\r\n        if (mobileNav.classList.contains('active')) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = '';\r\n        }\r\n    }\r\n\r\n    function closeMobileMenu() {\r\n        hamburgerMenu.classList.remove('active');\r\n        mobileNav.classList.remove('active');\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    // Initialize when DOM is ready\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', init);\r\n    } else {\r\n        init();\r\n    }\r\n})();","// Toast Notification System\r\nclass ToastSystem {\r\n    constructor() {\r\n        this.toastContainer = null;\r\n        this.toasts = [];\r\n        this.init();\r\n    }\r\n\r\n    // Initialize toast system\r\n    init() {\r\n        this.createToastContainer();\r\n        this.makeGlobal();\r\n    }\r\n\r\n    // Create toast container\r\n    createToastContainer() {\r\n        // Check if container already exists\r\n        this.toastContainer = document.getElementById('toast-container');\r\n\r\n        if (!this.toastContainer) {\r\n            this.toastContainer = document.createElement('div');\r\n            this.toastContainer.id = 'toast-container';\r\n            this.toastContainer.className = 'toast-container';\r\n            document.body.appendChild(this.toastContainer);\r\n        }\r\n    }\r\n\r\n    // Make toast system globally available\r\n    makeGlobal() {\r\n        window.showToast = (title, message, type = 'info') => {\r\n            this.show(title, message, type);\r\n        };\r\n    }\r\n\r\n    // Show toast notification\r\n    show(title, message, type = 'info', duration = 4000) {\r\n        const toast = this.createToast(title, message, type);\r\n        this.toastContainer.appendChild(toast);\r\n        this.toasts.push(toast);\r\n\r\n        // Trigger animation\r\n        setTimeout(() => {\r\n            toast.classList.add('show');\r\n        }, 10);\r\n\r\n        // Auto remove after duration\r\n        setTimeout(() => {\r\n            this.remove(toast);\r\n        }, duration);\r\n\r\n        return toast;\r\n    }\r\n\r\n    // Create toast element\r\n    createToast(title, message, type) {\r\n        const toast = document.createElement('div');\r\n        toast.className = `toast-notification ${type}`;\r\n\r\n        const icon = this.getIconForType(type);\r\n\r\n        toast.innerHTML = `\r\n            <div class=\"toast-header\">\r\n                <i class=\"${icon}\"></i>\r\n                <span class=\"toast-title\">${title}</span>\r\n                <button class=\"toast-close\" aria-label=\"Close notification\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"toast-message\">${message}</div>\r\n        `;\r\n\r\n        // Add close button functionality\r\n        const closeBtn = toast.querySelector('.toast-close');\r\n        closeBtn.addEventListener('click', () => {\r\n            this.remove(toast);\r\n        });\r\n\r\n        return toast;\r\n    }\r\n\r\n    // Get icon for toast type\r\n    getIconForType(type) {\r\n        switch (type) {\r\n            case 'success':\r\n                return 'fas fa-check-circle';\r\n            case 'error':\r\n                return 'fas fa-exclamation-circle';\r\n            case 'warning':\r\n                return 'fas fa-exclamation-triangle';\r\n            case 'info':\r\n            default:\r\n                return 'fas fa-info-circle';\r\n        }\r\n    }\r\n\r\n    // Remove toast\r\n    remove(toast) {\r\n        if (!toast || !toast.parentNode) return;\r\n\r\n        toast.classList.remove('show');\r\n        toast.classList.add('hiding');\r\n\r\n        setTimeout(() => {\r\n            if (toast.parentNode) {\r\n                toast.parentNode.removeChild(toast);\r\n            }\r\n\r\n            // Remove from toasts array\r\n            const index = this.toasts.indexOf(toast);\r\n            if (index > -1) {\r\n                this.toasts.splice(index, 1);\r\n            }\r\n        }, 300);\r\n    }\r\n\r\n    // Clear all toasts\r\n    clear() {\r\n        this.toasts.forEach(toast => {\r\n            this.remove(toast);\r\n        });\r\n    }\r\n\r\n    // Show success toast\r\n    success(title, message, duration) {\r\n        return this.show(title, message, 'success', duration);\r\n    }\r\n\r\n    // Show error toast\r\n    error(title, message, duration) {\r\n        return this.show(title, message, 'error', duration);\r\n    }\r\n\r\n    // Show warning toast\r\n    warning(title, message, duration) {\r\n        return this.show(title, message, 'warning', duration);\r\n    }\r\n\r\n    // Show info toast\r\n    info(title, message, duration) {\r\n        return this.show(title, message, 'info', duration);\r\n    }\r\n}\r\n\r\n// Initialize toast system\r\nconst toastSystem = new ToastSystem();\r\n\r\n// Export for use in other modules\r\nexport default toastSystem;"],"names":["hamburgerMenu","mobileNav","init","_a","querySelector","dataset","headerInitialized","document","getElementById","addEventListener","toggleMobileMenu","querySelectorAll","forEach","link","closeMobileMenu","e","contains","target","key","classList","toggle","body","style","overflow","remove","readyState","constructor","this","toastContainer","toasts","createToastContainer","makeGlobal","createElement","id","className","appendChild","window","showToast","title","message","type","show","duration","toast","createToast","push","setTimeout","add","concat","icon","getIconForType","innerHTML","parentNode","removeChild","index","indexOf","splice","clear","success","error","warning","info"],"mappings":"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"}