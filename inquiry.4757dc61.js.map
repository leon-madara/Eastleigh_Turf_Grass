{"version":3,"file":"inquiry.4757dc61.js","sources":["../src/js/broker/modules/inquiry.js"],"sourcesContent":["// Inquiry Module - Enhanced functionality for price inquiries\r\n(() => {\r\n    let products = [];\r\n    let inquiryItems = [];\r\n    let nextInquiryId = 1;\r\n\r\n    // Initialize the inquiry module\r\n    function init() {\r\n        loadProducts();\r\n        updateUI();\r\n    }\r\n\r\n    // Load products from the main site's JSON\r\n    async function loadProducts() {\r\n        try {\r\n            const response = await fetch('/src/data/products.json');\r\n            products = await response.json();\r\n        } catch (error) {\r\n            console.error('Failed to load products:', error);\r\n            showToast('Failed to load products', 'error');\r\n        }\r\n    }\r\n\r\n    // Add a new inquiry\r\n    function addInquiry() {\r\n        const inquiry = {\r\n            id: nextInquiryId++,\r\n            productId: '',\r\n            product: null,\r\n            originalPrice: 0,\r\n            bargainPrice: 0,\r\n            difference: 0\r\n        };\r\n\r\n        inquiryItems.push(inquiry);\r\n        updateUI();\r\n        showToast('Inquiry added', 'success');\r\n\r\n        // Update cart count\r\n        if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n            window.BrokerDashboard.updateCartCount();\r\n        }\r\n    }\r\n\r\n    // Remove an inquiry\r\n    function removeInquiry(inquiryId) {\r\n        inquiryItems = inquiryItems.filter(inquiry => inquiry.id !== inquiryId);\r\n        updateUI();\r\n        showToast('Inquiry removed', 'success');\r\n\r\n        // Update cart count\r\n        if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n            window.BrokerDashboard.updateCartCount();\r\n        }\r\n    }\r\n\r\n    // Update inquiry details\r\n    function updateInquiry(inquiryId, field, value) {\r\n        const inquiry = inquiryItems.find(inquiry => inquiry.id === inquiryId);\r\n        if (!inquiry) return;\r\n\r\n        if (field === 'productId') {\r\n            const product = products.find(p => p.id === value);\r\n            inquiry.productId = value;\r\n            inquiry.product = product;\r\n            inquiry.originalPrice = product ? product.price : 0;\r\n            inquiry.difference = inquiry.bargainPrice - inquiry.originalPrice;\r\n        } else if (field === 'bargainPrice') {\r\n            inquiry.bargainPrice = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(value) : parseFloat(value) || 0;\r\n            inquiry.difference = inquiry.bargainPrice - inquiry.originalPrice;\r\n        }\r\n\r\n        updateUI();\r\n    }\r\n\r\n    // Get price difference class\r\n    function getPriceDifferenceClass(difference) {\r\n        if (difference < 0) return 'negative';\r\n        if (difference > 0) return 'positive';\r\n        return 'neutral';\r\n    }\r\n\r\n    // Format price difference\r\n    function formatPriceDifference(difference) {\r\n        const absDiff = Math.abs(difference);\r\n        const sign = difference < 0 ? '-' : difference > 0 ? '+' : '';\r\n        return `${sign}KES ${absDiff.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}`;\r\n    }\r\n\r\n    // Update the UI\r\n    function updateUI() {\r\n        const tableBody = document.getElementById('inquiryTableBody');\r\n        const emptyState = document.getElementById('emptyInquiryState');\r\n        const submitBtn = document.getElementById('submitInquiriesBtn');\r\n\r\n        if (!tableBody || !emptyState || !submitBtn) return;\r\n\r\n        // Show/hide empty state\r\n        if (inquiryItems.length === 0) {\r\n            tableBody.innerHTML = '';\r\n            emptyState.style.display = 'block';\r\n            submitBtn.disabled = true;\r\n        } else {\r\n            emptyState.style.display = 'none';\r\n            submitBtn.disabled = false;\r\n\r\n            // Render table rows\r\n            tableBody.innerHTML = inquiryItems.map(inquiry => createInquiryRow(inquiry)).join('');\r\n\r\n            // Add event listeners to new elements\r\n            inquiryItems.forEach(inquiry => {\r\n                const productSelect = document.getElementById(`inquiry-product-${inquiry.id}`);\r\n                const bargainInput = document.getElementById(`bargain-${inquiry.id}`);\r\n                const deleteBtn = document.getElementById(`delete-inquiry-${inquiry.id}`);\r\n\r\n                if (productSelect) {\r\n                    productSelect.addEventListener('change', (e) => {\r\n                        updateInquiry(inquiry.id, 'productId', e.target.value);\r\n                    });\r\n                }\r\n\r\n                if (bargainInput) {\r\n                    bargainInput.addEventListener('input', (e) => {\r\n                        updateInquiry(inquiry.id, 'bargainPrice', e.target.value);\r\n                    });\r\n\r\n                    // Add number formatting for bargain price input\r\n                    if (window.numberFormatter) {\r\n                        window.numberFormatter.initInputFormatting(bargainInput, {\r\n                            allowDecimals: true,\r\n                            decimalPlaces: 2,\r\n                            currency: 'KES'\r\n                        });\r\n                    } else {\r\n                        // Fallback: wait for formatter to be available\r\n                        const checkFormatter = setInterval(() => {\r\n                            if (window.numberFormatter) {\r\n                                window.numberFormatter.initInputFormatting(bargainInput, {\r\n                                    allowDecimals: true,\r\n                                    decimalPlaces: 2,\r\n                                    currency: 'KES'\r\n                                });\r\n                                clearInterval(checkFormatter);\r\n                            }\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                if (deleteBtn) {\r\n                    deleteBtn.addEventListener('click', () => {\r\n                        removeInquiry(inquiry.id);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Create inquiry row HTML\r\n    function createInquiryRow(inquiry) {\r\n        const productOptions = products.map(product =>\r\n            `<option value=\"${product.id}\" ${inquiry.productId === product.id ? 'selected' : ''}>\r\n                ${product.name} (${product.thickness})\r\n            </option>`\r\n        ).join('');\r\n\r\n        const differenceClass = getPriceDifferenceClass(inquiry.difference);\r\n        const differenceText = formatPriceDifference(inquiry.difference);\r\n\r\n        return `\r\n            <tr>\r\n                <td>\r\n                  <div class=\"order-field\">\r\n                    <label for=\"inquiry-product-${inquiry.id}\">Product Name</label>\r\n                    <select class=\"table-select\" id=\"inquiry-product-${inquiry.id}\">\r\n                        <option value=\"\">Select a product</option>\r\n                        ${productOptions}\r\n                    </select>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"order-field\">\r\n                    <label>Original Price (KES)</label>\r\n                    <input type=\"text\" class=\"table-input\" readonly \r\n                           value=\"${inquiry.originalPrice.toLocaleString('en-US')}\">\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"order-field\">\r\n                    <label for=\"bargain-${inquiry.id}\">Your Bargain Price (KES)</label>\r\n                    <input type=\"number\" inputmode=\"decimal\" class=\"table-input\" id=\"bargain-${inquiry.id}\" \r\n                           value=\"${inquiry.bargainPrice}\" min=\"0\" step=\"0.01\" placeholder=\"0\">\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"order-field\">\r\n                    <label>Price Difference</label>\r\n                    <span class=\"price-difference ${differenceClass}\">${differenceText}</span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"order-field\">\r\n                    <label>Action</label>\r\n                    <button class=\"delete-btn\" id=\"delete-inquiry-${inquiry.id}\">\r\n                        <i class=\"fas fa-trash\"></i> Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n            </tr>\r\n        `;\r\n    }\r\n\r\n    // Submit all inquiries\r\n    function submitInquiries() {\r\n        if (inquiryItems.length === 0) {\r\n            showToast('No inquiries to submit', 'error');\r\n            return;\r\n        }\r\n\r\n        // Validate all inquiries have products and bargain prices\r\n        const invalidInquiries = inquiryItems.filter(inquiry =>\r\n            !inquiry.productId || inquiry.bargainPrice <= 0\r\n        );\r\n\r\n        if (invalidInquiries.length > 0) {\r\n            showToast('Please complete all inquiries before submitting', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Prepare inquiry data for WhatsApp\r\n            const inquiryData = {\r\n                brokerName: 'Broker User', // You can make this dynamic\r\n                brokerEmail: 'broker@eastleighturf.com', // You can make this dynamic\r\n                items: inquiryItems.map(inquiry => ({\r\n                    product: inquiry.product,\r\n                    originalPrice: inquiry.originalPrice,\r\n                    bargainPrice: inquiry.bargainPrice\r\n                })),\r\n                totalOriginal: inquiryItems.reduce((sum, inquiry) => sum + inquiry.originalPrice, 0),\r\n                totalBargain: inquiryItems.reduce((sum, inquiry) => sum + inquiry.bargainPrice, 0)\r\n            };\r\n\r\n            // Send to WhatsApp with fallback\r\n            let success = false;\r\n\r\n            if (window.WhatsAppService && window.WhatsAppService.sendInquiryForm) {\r\n                success = window.WhatsAppService.sendInquiryForm(inquiryData);\r\n            } else {\r\n                // Fallback: open WhatsApp manually\r\n                const message = generateInquiryMessage(inquiryData);\r\n                const whatsappNumber = '254743375997';\r\n                const encodedMessage = encodeURIComponent(message);\r\n                const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodedMessage}`;\r\n                window.open(whatsappUrl, '_blank');\r\n                success = true;\r\n            }\r\n\r\n            if (success) {\r\n                showToast('Inquiries submitted successfully! WhatsApp will open with your inquiry details.', 'success');\r\n\r\n                // Clear inquiries\r\n                inquiryItems = [];\r\n                nextInquiryId = 1;\r\n                updateUI();\r\n\r\n                // Update cart count\r\n                if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n                    window.BrokerDashboard.updateCartCount();\r\n                }\r\n            } else {\r\n                showToast('Failed to send inquiries. Please try again.', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Inquiry submission error:', error);\r\n            showToast('An error occurred while submitting the inquiries.', 'error');\r\n        }\r\n    }\r\n\r\n    // Get item count for cart\r\n    function getItemCount() {\r\n        return inquiryItems.length;\r\n    }\r\n\r\n    // Generate inquiry message for WhatsApp\r\n    function generateInquiryMessage(inquiryData) {\r\n        const {\r\n            brokerName,\r\n            brokerEmail,\r\n            items,\r\n            totalOriginal,\r\n            totalBargain\r\n        } = inquiryData;\r\n\r\n        const itemsList = items.map(item => {\r\n            const difference = item.bargainPrice - item.originalPrice;\r\n            const differenceText = difference > 0 ? `+KES ${difference.toLocaleString()}` : `-KES ${Math.abs(difference).toLocaleString()}`;\r\n\r\n            return `• ${item.product.name} (${item.product.thickness})\r\n  Original Price: KES ${item.originalPrice.toLocaleString()}\r\n  Bargain Price: KES ${item.bargainPrice.toLocaleString()}\r\n  Difference: ${differenceText}`;\r\n        }).join('\\n\\n');\r\n\r\n        const totalDifference = totalBargain - totalOriginal;\r\n        const totalDifferenceText = totalDifference > 0 ? `+KES ${totalDifference.toLocaleString()}` : `-KES ${Math.abs(totalDifference).toLocaleString()}`;\r\n\r\n        return `*BROKER PRICE INQUIRY - Eastleigh Turf Grass*\r\n\r\n*Broker Details:*\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n\r\n*Price Inquiries:*\r\n${itemsList}\r\n\r\n*Inquiry Summary:*\r\n• Total Original Value: KES ${totalOriginal.toLocaleString()}\r\n• Total Bargain Value: KES ${totalBargain.toLocaleString()}\r\n• Total Difference: ${totalDifferenceText}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    // Expose module functions\r\n    window.InquiryModule = {\r\n        init,\r\n        addInquiry,\r\n        removeInquiry,\r\n        updateInquiry,\r\n        submitInquiries,\r\n        getItemCount\r\n    };\r\n\r\n    // Initialize when DOM is ready\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', init);\r\n    } else {\r\n        init();\r\n    }\r\n})();"],"names":["products","inquiryItems","nextInquiryId","init","loadProducts","updateUI","error","addInquiry","inquiry","removeInquiry","inquiryId","updateInquiry","field","value","product","p","getPriceDifferenceClass","difference","formatPriceDifference","absDiff","tableBody","emptyState","submitBtn","createInquiryRow","productSelect","bargainInput","deleteBtn","e","checkFormatter","productOptions","differenceClass","differenceText","submitInquiries","inquiryData","sum","success","message","generateInquiryMessage","whatsappNumber","encodedMessage","whatsappUrl","getItemCount","brokerName","brokerEmail","items","totalOriginal","totalBargain","itemsList","item","totalDifference","totalDifferenceText"],"mappings":"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"}