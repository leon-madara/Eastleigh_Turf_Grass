{"version":3,"mappings":"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","names":["updateCartCount","cartCount","document","getElementById","totalCount","window","OrdersModule","getItemCount","PreordersModule","InquiryModule","textContent","style","display","handleAddItem","addItem","handleSubmitOrder","submitOrder","handleAddPreorder","addPreorder","handleSubmitPreorders","submitPreorders","handleAddInquiry","addInquiry","handleSubmitInquiries","submitInquiries","handleLogout","localStorage","removeItem","showToast","basePath","location","pathname","includes","href","message","type","toast","toastMessage","querySelector","toastIcon","className","classList","remove","setTimeout","hideToast","add","numberFormatter","constructor","this","isFormatting","initInputFormatting","input","options","console","warn","log","id","name","config","__spreadValues","allowDecimals","decimalPlaces","currency","_numberFormatterConfig","addEventListener","event","handleInputFormatting","handleKeyDown","handleInputBlur","setAttribute","target","cursorPosition","selectionStart","oldValue","value","digitsBeforeCursor","countDigitsBeforePosition","cleanValue","replace","decimalIndex","indexOf","substring","formattedValue","formatNumberWithCommas","newCursorPosition","getPositionAfterDigits","setSelectionRange","key","preventDefault","blur","ensureProperDecimalFormatting","blurEvent","CustomEvent","detail","numericValue","parseFormattedNumber","dispatchEvent","position","digitCount","i","Math","min","length","test","digitsFound","parts","split","join","formatCurrency","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatCurrencyDisplay","formatted","concat","initNumberFormatting","tabs","querySelectorAll","tabContents","forEach","tab","targetTab","getAttribute","t","content","addItemBtn","submitOrderBtn","addPreorderBtn","submitPreordersBtn","addInquiryBtn","submitInquiriesBtn","logoutBtn","authState","getItem","user","JSON","parse","loggedIn","nameInput","emailInput","username","email","updateProfileDisplay","e","error","BrokerDashboard","contains","PaymentSummaryHandler","elements","orderTotalSpan","amountToPayInput","creditBalanceSpan","initialize","areElementsValid","setupEventListeners","updateCreditBalance","initializeNumberFormatting","checkFormatter","setInterval","clearInterval","orderTotal","amountToPay","credit","max","toFixed","initializePaymentSummary","paymentSummaryHandler","readyState","products","orderItems","nextItemId","currentBroker","availableDiscounts","availableCoupons","appliedDiscount","appliedCoupon","init","__async","response","fetch","json","loadProducts","data","promotions","filter","promo","active","loadDiscounts","coupons","coupon","usedCount","usageLimit","Date","validFrom","validTo","loadCoupons","brokerData","phone","showAddItemModal","existingModal","modalHTML","map","product","thickness","discount","description","body","insertAdjacentHTML","modal","closeBtn","cancelBtn","confirmBtn","productSelect","quantityInput","applyCouponBtn","closeAddItemModal","addItemToOrder","handleProductChange","handleQuantityChange","applyCoupon","unitPriceInput","subtotalInput","find","p","price","updateSubtotal","quantity","subtotal","checkEnableDiscountCoupon","hasProduct","hasQuantity","discountSelect","couponInput","disabled","updateDiscountSummary","disableDiscountCouponOptions","couponCode","trim","toUpperCase","c","code","getCurrentSubtotal","minOrder","discountSummary","summarySubtotal","discountRow","summaryDiscount","couponRow","summaryCoupon","summaryFinalTotal","finalTotal","discountAmount","couponAmount","d","maxDiscount","item","productId","unitPrice","calculateDiscountAmount","calculateCouponAmount","push","amount","itemId","calculateTotal","reduce","sum","updateUI","tableBody","emptyState","submitBtn","innerHTML","discountText","couponText","createOrderRow","deleteBtn","total","orderData","itemsList","items","itemText","brokerId","brokerName","brokerEmail","brokerPhone","totalDiscount","generateOrderMessage","WhatsAppService","sendToWhatsApp","whatsappNumber","encodedMessage","encodeURIComponent","whatsappUrl","open","sendOrderToWhatsApp","itemDiscount","orderDate","toISOString","exports","whatsappService","businessName","baseUrl","sendOrder","url","generateWhatsAppUrl","sendPreorder","preorderData","generatePreorderMessage","sendInquiry","inquiryData","generateInquiryMessage","sendContact","contactData","generateContactMessage","expectedDate","specialNotes","totalOriginal","totalBargain","difference","bargainPrice","originalPrice","differenceText","abs","totalDifference","totalDifferenceText","subject","sendOrderForm","sendPreorderForm","sendInquiryForm","sendContactForm","__vitePreload","import","getBasePath","brokerInfo","setItem","stringify"],"sources":["../src/js/broker/broker.js","../src/js/utils/numberFormatter.js","../src/js/broker/dashboard.js","../src/js/broker/modules/orders.js","../src/services/whatsappService.js","../src/pages/broker/main.js"],"sourcesContent":["// Broker Dashboard JavaScript\r\n\r\n// Initialize when DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    initializeDashboard();\r\n    showWelcomeToast();\r\n});\r\n\r\n// Dashboard Initialization\r\nfunction initializeDashboard() {\r\n    initializeTabs();\r\n    initializeButtons();\r\n    loadUserData();\r\n}\r\n\r\n// Tab Management\r\nfunction initializeTabs() {\r\n    const tabs = document.querySelectorAll('.nav-tab');\r\n    const tabContents = document.querySelectorAll('.tab-content');\r\n\r\n    tabs.forEach(tab => {\r\n        tab.addEventListener('click', () => {\r\n            const targetTab = tab.getAttribute('data-tab');\r\n\r\n            // Remove active class from all tabs and contents\r\n            tabs.forEach(t => t.classList.remove('active'));\r\n            tabContents.forEach(content => content.classList.remove('active'));\r\n\r\n            // Add active class to clicked tab and corresponding content\r\n            tab.classList.add('active');\r\n            document.getElementById(`${targetTab}-content`).classList.add('active');\r\n        });\r\n    });\r\n}\r\n\r\n// Button Initialization\r\nfunction initializeButtons() {\r\n    // Add Item Button\r\n    const addItemBtn = document.getElementById('addItemBtn');\r\n    if (addItemBtn) {\r\n        addItemBtn.addEventListener('click', handleAddItem);\r\n    }\r\n\r\n    // Submit Order Button\r\n    const submitOrderBtn = document.getElementById('submitOrderBtn');\r\n    if (submitOrderBtn) {\r\n        submitOrderBtn.addEventListener('click', handleSubmitOrder);\r\n    }\r\n\r\n    // Add Preorder Button\r\n    const addPreorderBtn = document.getElementById('addPreorderBtn');\r\n    if (addPreorderBtn) {\r\n        addPreorderBtn.addEventListener('click', handleAddPreorder);\r\n    }\r\n\r\n    // Submit Preorders Button\r\n    const submitPreordersBtn = document.getElementById('submitPreordersBtn');\r\n    if (submitPreordersBtn) {\r\n        submitPreordersBtn.addEventListener('click', handleSubmitPreorders);\r\n    }\r\n\r\n    // Add Inquiry Button\r\n    const addInquiryBtn = document.getElementById('addInquiryBtn');\r\n    if (addInquiryBtn) {\r\n        addInquiryBtn.addEventListener('click', handleAddInquiry);\r\n    }\r\n\r\n    // Submit Inquiries Button\r\n    const submitInquiriesBtn = document.getElementById('submitInquiriesBtn');\r\n    if (submitInquiriesBtn) {\r\n        submitInquiriesBtn.addEventListener('click', handleSubmitInquiries);\r\n    }\r\n\r\n    // Logout Button\r\n    const logoutBtn = document.getElementById('logoutBtn');\r\n    if (logoutBtn) {\r\n        logoutBtn.addEventListener('click', handleLogout);\r\n    }\r\n}\r\n\r\n// User Data Management\r\nfunction loadUserData() {\r\n    // Check if user is authenticated\r\n    const authState = localStorage.getItem('authState');\r\n    if (authState) {\r\n        try {\r\n            const user = JSON.parse(authState);\r\n            if (user.loggedIn && user.user) {\r\n                updateProfileDisplay(user.user);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error parsing auth state:', e);\r\n        }\r\n    }\r\n\r\n    // Update cart count\r\n    updateCartCount();\r\n}\r\n\r\n// Cart Count Management\r\nfunction updateCartCount() {\r\n    const cartCount = document.getElementById('cartCount');\r\n    if (!cartCount) return;\r\n\r\n    let totalCount = 0;\r\n\r\n    // Count orders\r\n    if (window.OrdersModule) {\r\n        totalCount += window.OrdersModule.getItemCount();\r\n    }\r\n\r\n    // Count preorders\r\n    if (window.PreordersModule) {\r\n        totalCount += window.PreordersModule.getItemCount();\r\n    }\r\n\r\n    // Count inquiries\r\n    if (window.InquiryModule) {\r\n        totalCount += window.InquiryModule.getItemCount();\r\n    }\r\n\r\n    cartCount.textContent = totalCount;\r\n\r\n    // Show/hide cart count badge\r\n    if (totalCount > 0) {\r\n        cartCount.style.display = 'block';\r\n    } else {\r\n        cartCount.style.display = 'none';\r\n    }\r\n}\r\n\r\nfunction updateProfileDisplay(user) {\r\n    const nameInput = document.getElementById('broker-name');\r\n    const emailInput = document.getElementById('broker-email');\r\n\r\n    if (nameInput) {\r\n        nameInput.value = user.username || 'Broker User';\r\n    }\r\n\r\n    if (emailInput) {\r\n        emailInput.value = user.email || 'broker@eastleighturf.com';\r\n    }\r\n}\r\n\r\n// Event Handlers\r\nfunction handleAddItem() {\r\n    if (window.OrdersModule) {\r\n        window.OrdersModule.addItem();\r\n    }\r\n}\r\n\r\nfunction handleSubmitOrder() {\r\n    if (window.OrdersModule) {\r\n        window.OrdersModule.submitOrder();\r\n    }\r\n}\r\n\r\nfunction handleAddPreorder() {\r\n    if (window.PreordersModule) {\r\n        window.PreordersModule.addPreorder();\r\n    }\r\n}\r\n\r\nfunction handleSubmitPreorders() {\r\n    if (window.PreordersModule) {\r\n        window.PreordersModule.submitPreorders();\r\n    }\r\n}\r\n\r\nfunction handleAddInquiry() {\r\n    if (window.InquiryModule) {\r\n        window.InquiryModule.addInquiry();\r\n    }\r\n}\r\n\r\nfunction handleSubmitInquiries() {\r\n    if (window.InquiryModule) {\r\n        window.InquiryModule.submitInquiries();\r\n    }\r\n}\r\n\r\nfunction handleLogout() {\r\n    // Clear authentication state\r\n    localStorage.removeItem('authState');\r\n    localStorage.removeItem('brokerInfo');\r\n\r\n    // Show logout message\r\n    showToast('Logging out...', 'success');\r\n\r\n    // Redirect to home page with dynamic base path\r\n    const basePath = getBasePath();\r\n    window.location.href = basePath + '/index.html';\r\n}\r\n\r\n// Get the base path for GitHub Pages deployment\r\nfunction getBasePath() {\r\n    // Check if we're on GitHub Pages (has base path)\r\n    const pathname = window.location.pathname;\r\n    if (pathname.includes('/Eastleigh_Turf_Grass/')) {\r\n        return '/Eastleigh_Turf_Grass';\r\n    }\r\n    // For local development or root deployment\r\n    return '';\r\n}\r\n\r\n// Toast Notification System\r\nfunction showToast(message, type = 'success') {\r\n    const toast = document.getElementById('toast');\r\n    const toastMessage = toast.querySelector('.toast-message');\r\n    const toastIcon = toast.querySelector('.toast-icon i');\r\n\r\n    // Set message\r\n    toastMessage.textContent = message;\r\n\r\n    // Set icon and styling based on type\r\n    if (type === 'success') {\r\n        toastIcon.className = 'fas fa-check-circle';\r\n        toast.className = 'toast success';\r\n    } else if (type === 'error') {\r\n        toastIcon.className = 'fas fa-exclamation-circle';\r\n        toast.className = 'toast error';\r\n    } else if (type === 'info') {\r\n        toastIcon.className = 'fas fa-info-circle';\r\n        toast.className = 'toast info';\r\n    }\r\n\r\n    // Show toast\r\n    toast.classList.remove('hidden');\r\n\r\n    // Auto-hide after 4 seconds\r\n    setTimeout(() => {\r\n        hideToast();\r\n    }, 4000);\r\n}\r\n\r\nfunction hideToast() {\r\n    const toast = document.getElementById('toast');\r\n    toast.classList.add('hidden');\r\n}\r\n\r\n// Welcome Toast\r\nfunction showWelcomeToast() {\r\n    setTimeout(() => {\r\n        showToast('Login Successful\\nWelcome to your broker dashboard.', 'success');\r\n    }, 500);\r\n}\r\n\r\n// Utility Functions\r\nfunction contains(text, searchText) {\r\n    return text.toLowerCase().includes(searchText.toLowerCase());\r\n}\r\n\r\n\r\n\r\n// Export functions for external use\r\nwindow.BrokerDashboard = {\r\n    showToast,\r\n    hideToast,\r\n    handleLogout,\r\n    updateCartCount\r\n};\r\n\r\n// Add click event for toast close button\r\ndocument.addEventListener('click', function(e) {\r\n    if (e.target.classList.contains('toast-close')) {\r\n        hideToast();\r\n    }\r\n});\r\n\r\n// Mobile Navigation is now handled by the unified header.js component","/**\r\n * Number Formatter Utility for Broker Dashboard\r\n * Provides consistent number formatting with commas across all inputs\r\n */\r\n\r\nclass NumberFormatter {\r\n    constructor() {\r\n        this.isFormatting = false;\r\n    }\r\n\r\n    /**\r\n     * Initialize number formatting for an input field\r\n     * @param {HTMLInputElement} input - The input element to format\r\n     * @param {Object} options - Configuration options\r\n     */\r\n    initInputFormatting(input, options = {}) {\r\n        if (!input) {\r\n            console.warn('NumberFormatter: No input element provided');\r\n            return;\r\n        }\r\n\r\n        console.log('NumberFormatter: Initializing formatting for input:', input.id || input.name);\r\n\r\n        const config = {\r\n            allowDecimals: true,\r\n            decimalPlaces: 2,\r\n            currency: 'KES',\r\n            ...options\r\n        };\r\n\r\n        // Store config on input element\r\n        input._numberFormatterConfig = config;\r\n\r\n        // Add event listeners\r\n        input.addEventListener('input', (event) => {\r\n            this.handleInputFormatting(event);\r\n        });\r\n\r\n        input.addEventListener('keydown', (event) => {\r\n            this.handleKeyDown(event);\r\n        });\r\n\r\n        input.addEventListener('blur', (event) => {\r\n            this.handleInputBlur(event);\r\n        });\r\n\r\n        // Add inputmode for better mobile experience\r\n        input.setAttribute('inputmode', 'decimal');\r\n\r\n        console.log('NumberFormatter: Formatting initialized successfully for:', input.id || input.name);\r\n    }\r\n\r\n    /**\r\n     * Handle input formatting while typing\r\n     * @param {Event} event - The input event\r\n     */\r\n    handleInputFormatting(event) {\r\n        if (this.isFormatting) return;\r\n\r\n        const input = event.target;\r\n        const config = input._numberFormatterConfig || {};\r\n        const cursorPosition = input.selectionStart || 0;\r\n        const oldValue = input.value;\r\n\r\n        console.log('NumberFormatter: Input event triggered for:', input.id || input.name, 'Value:', oldValue);\r\n\r\n        // Count digits before cursor position\r\n        const digitsBeforeCursor = this.countDigitsBeforePosition(oldValue, cursorPosition);\r\n\r\n        // Clean the value (remove non-numeric except decimal)\r\n        let cleanValue = oldValue.replace(/[^\\d.]/g, '');\r\n\r\n        // Handle decimal points\r\n        if (config.allowDecimals) {\r\n            const decimalIndex = cleanValue.indexOf('.');\r\n            if (decimalIndex !== -1) {\r\n                cleanValue = cleanValue.substring(0, decimalIndex + 1) +\r\n                    cleanValue.substring(decimalIndex + 1).replace(/\\./g, '');\r\n            }\r\n        } else {\r\n            cleanValue = cleanValue.replace(/\\./g, '');\r\n        }\r\n\r\n        // Format with commas\r\n        const formattedValue = this.formatNumberWithCommas(cleanValue, config);\r\n\r\n        // Update input value\r\n        this.isFormatting = true;\r\n        input.value = formattedValue;\r\n        this.isFormatting = false;\r\n\r\n        // Calculate new cursor position\r\n        const newCursorPosition = this.getPositionAfterDigits(formattedValue, digitsBeforeCursor);\r\n\r\n        // Set cursor position\r\n        setTimeout(() => {\r\n            input.setSelectionRange(newCursorPosition, newCursorPosition);\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * Handle keydown events\r\n     * @param {KeyboardEvent} event - The keyboard event\r\n     */\r\n    handleKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.target.blur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle input blur for final formatting\r\n     * @param {Event} event - The blur event\r\n     */\r\n    handleInputBlur(event) {\r\n        const input = event.target;\r\n        const config = input._numberFormatterConfig || {};\r\n\r\n        if (config.allowDecimals) {\r\n            this.ensureProperDecimalFormatting(input, config);\r\n        }\r\n\r\n        // Trigger a custom event for external listeners (like credit balance updates)\r\n        const blurEvent = new CustomEvent('numberFormatted', {\r\n            detail: {\r\n                input: input,\r\n                value: input.value,\r\n                numericValue: this.parseFormattedNumber(input.value)\r\n            }\r\n        });\r\n        input.dispatchEvent(blurEvent);\r\n    }\r\n\r\n    /**\r\n     * Count digits before a position in a string\r\n     * @param {string} value - The string to analyze\r\n     * @param {number} position - The position to count digits before\r\n     * @returns {number} Number of digits before the position\r\n     */\r\n    countDigitsBeforePosition(value, position) {\r\n        let digitCount = 0;\r\n        for (let i = 0; i < Math.min(position, value.length); i++) {\r\n            if (/\\d/.test(value[i])) {\r\n                digitCount++;\r\n            }\r\n        }\r\n        return digitCount;\r\n    }\r\n\r\n    /**\r\n     * Get cursor position after specific number of digits\r\n     * @param {string} formattedValue - The formatted string\r\n     * @param {number} digitCount - Number of digits after which to place cursor\r\n     * @returns {number} The cursor position\r\n     */\r\n    getPositionAfterDigits(formattedValue, digitCount) {\r\n        let digitsFound = 0;\r\n        let position = 0;\r\n\r\n        for (let i = 0; i < formattedValue.length; i++) {\r\n            if (/\\d/.test(formattedValue[i])) {\r\n                digitsFound++;\r\n                if (digitsFound === digitCount) {\r\n                    position = i + 1;\r\n                    break;\r\n                }\r\n            }\r\n            if (digitsFound < digitCount) {\r\n                position = i + 1;\r\n            }\r\n        }\r\n\r\n        return Math.min(position, formattedValue.length);\r\n    }\r\n\r\n    /**\r\n     * Format number with commas\r\n     * @param {string} value - The number string to format\r\n     * @param {Object} config - Configuration options\r\n     * @returns {string} Formatted number with commas\r\n     */\r\n    formatNumberWithCommas(value, config = {}) {\r\n        if (!value) return '';\r\n\r\n        const {\r\n            allowDecimals = true, decimalPlaces = 2\r\n        } = config;\r\n\r\n        if (allowDecimals) {\r\n            // Split by decimal point\r\n            const parts = value.split('.');\r\n\r\n            // Add commas to integer part\r\n            parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n            // Handle decimal part\r\n            if (parts.length > 1) {\r\n                parts[1] = parts[1].substring(0, decimalPlaces);\r\n            }\r\n\r\n            return parts.join('.');\r\n        } else {\r\n            // Integer only\r\n            return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure proper decimal formatting on blur\r\n     * @param {HTMLInputElement} input - The input element\r\n     * @param {Object} config - Configuration options\r\n     */\r\n    ensureProperDecimalFormatting(input, config = {}) {\r\n        const value = input.value;\r\n        const numericValue = this.parseFormattedNumber(value);\r\n\r\n        if (numericValue > 0) {\r\n            const formattedValue = this.formatCurrency(numericValue, config);\r\n            input.value = formattedValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse formatted number string to float\r\n     * @param {string} value - The formatted number string\r\n     * @returns {number} The parsed number\r\n     */\r\n    parseFormattedNumber(value) {\r\n        if (!value) return 0;\r\n        return parseFloat(value.replace(/,/g, '')) || 0;\r\n    }\r\n\r\n    /**\r\n     * Format number as currency\r\n     * @param {number} value - The number to format\r\n     * @param {Object} config - Configuration options\r\n     * @returns {string} Formatted currency string\r\n     */\r\n    formatCurrency(value, config = {}) {\r\n        const {\r\n            decimalPlaces = 2\r\n        } = config;\r\n\r\n        return value.toLocaleString('en-US', {\r\n            minimumFractionDigits: decimalPlaces,\r\n            maximumFractionDigits: decimalPlaces\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Format display value with currency prefix\r\n     * @param {number} value - The number to format\r\n     * @param {Object} config - Configuration options\r\n     * @returns {string} Formatted currency string with prefix\r\n     */\r\n    formatCurrencyDisplay(value, config = {}) {\r\n        const {\r\n            currency = 'KES'\r\n        } = config;\r\n        const formatted = this.formatCurrency(value, config);\r\n        return `${currency} ${formatted}`;\r\n    }\r\n}\r\n\r\n// Create global instance\r\nwindow.numberFormatter = new NumberFormatter();\r\n\r\n// Add error handling for when formatter is not available\r\nwindow.initNumberFormatting = function(input, options = {}) {\r\n    if (window.numberFormatter) {\r\n        window.numberFormatter.initInputFormatting(input, options);\r\n    } else {\r\n        console.warn('Number formatter not available');\r\n    }\r\n};\r\n\r\n// Export for module use\r\nexport default window.numberFormatter;","/**\r\n * Broker Dashboard Payment Summary Logic\r\n * Handles order total calculations and input formatting with improved user experience\r\n */\r\n\r\n/**\r\n * Payment Summary Handler Class\r\n * Manages all payment calculation and input formatting functionality\r\n */\r\nclass PaymentSummaryHandler {\r\n    constructor() {\r\n        // Store references to DOM elements\r\n        this.elements = {\r\n            orderTotalSpan: document.getElementById('orderTotal'),\r\n            amountToPayInput: document.getElementById('amount-to-pay-input'),\r\n            creditBalanceSpan: document.getElementById('credit-balance')\r\n        };\r\n\r\n\r\n\r\n        // Initialize the handler\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * Initialize event listeners and setup\r\n     */\r\n    initialize() {\r\n        console.log('PaymentSummaryHandler: Initializing...');\r\n\r\n        if (!this.areElementsValid()) {\r\n            console.warn('Payment summary elements not found');\r\n            return;\r\n        }\r\n\r\n        console.log('PaymentSummaryHandler: Elements found, setting up event listeners...');\r\n        this.setupEventListeners();\r\n        this.updateCreditBalance(); // Initial calculation\r\n        console.log('PaymentSummaryHandler: Initialization complete');\r\n    }\r\n\r\n    /**\r\n     * Validate that all required elements exist\r\n     * @returns {boolean} True if all elements are present\r\n     */\r\n    areElementsValid() {\r\n        const {\r\n            orderTotalSpan,\r\n            amountToPayInput,\r\n            creditBalanceSpan\r\n        } = this.elements;\r\n        return !!(orderTotalSpan && amountToPayInput && creditBalanceSpan);\r\n    }\r\n\r\n    /**\r\n     * Setup all event listeners for the payment input\r\n     */\r\n    setupEventListeners() {\r\n        const {\r\n            amountToPayInput\r\n        } = this.elements;\r\n\r\n        if (!amountToPayInput) return;\r\n\r\n        // Initialize number formatting with proper event handling\r\n        this.initializeNumberFormatting();\r\n\r\n        // Add event listener for credit balance update when number formatting is complete\r\n        amountToPayInput.addEventListener('numberFormatted', () => {\r\n            this.updateCreditBalance();\r\n        });\r\n\r\n        // Also add blur event listener as fallback\r\n        amountToPayInput.addEventListener('blur', () => {\r\n            this.updateCreditBalance();\r\n        });\r\n\r\n        // Add keydown event listener for Enter key\r\n        amountToPayInput.addEventListener('keydown', (event) => {\r\n            if (event.key === 'Enter') {\r\n                event.preventDefault();\r\n                amountToPayInput.blur();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize number formatting for the payment input\r\n     */\r\n    initializeNumberFormatting() {\r\n        const {\r\n            amountToPayInput\r\n        } = this.elements;\r\n\r\n        console.log('PaymentSummaryHandler: Initializing number formatting...');\r\n        console.log('PaymentSummaryHandler: numberFormatter available?', !!window.numberFormatter);\r\n\r\n        if (window.numberFormatter) {\r\n            console.log('PaymentSummaryHandler: Using number formatter');\r\n            window.numberFormatter.initInputFormatting(amountToPayInput, {\r\n                allowDecimals: true,\r\n                decimalPlaces: 2,\r\n                currency: 'KES'\r\n            });\r\n        } else {\r\n            console.log('PaymentSummaryHandler: Waiting for number formatter...');\r\n            // Fallback: wait for formatter to be available\r\n            const checkFormatter = setInterval(() => {\r\n                if (window.numberFormatter) {\r\n                    console.log('PaymentSummaryHandler: Number formatter now available, initializing...');\r\n                    window.numberFormatter.initInputFormatting(amountToPayInput, {\r\n                        allowDecimals: true,\r\n                        decimalPlaces: 2,\r\n                        currency: 'KES'\r\n                    });\r\n                    clearInterval(checkFormatter);\r\n                }\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Update the credit balance based on order total and amount to pay\r\n     */\r\n    updateCreditBalance() {\r\n        const {\r\n            orderTotalSpan,\r\n            amountToPayInput,\r\n            creditBalanceSpan\r\n        } = this.elements;\r\n\r\n        if (!orderTotalSpan || !amountToPayInput || !creditBalanceSpan) {\r\n            console.warn('Cannot update credit balance: missing elements');\r\n            return;\r\n        }\r\n\r\n        // Get order total (remove commas, parse as float)\r\n        const orderTotal = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(orderTotalSpan.textContent || '') : 0;\r\n\r\n        // Get input value (remove commas, parse as float)\r\n        const amountToPay = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(amountToPayInput.value) : 0;\r\n\r\n        // Calculate credit (cannot be negative)\r\n        const credit = Math.max(0, orderTotal - amountToPay);\r\n\r\n        // Update credit balance display\r\n        creditBalanceSpan.textContent = window.numberFormatter ? window.numberFormatter.formatCurrency(credit) : credit.toFixed(2);\r\n    }\r\n}\r\n\r\n/**\r\n * Initialize the Payment Summary Handler when DOM is fully loaded\r\n * This ensures all elements are available before trying to access them\r\n */\r\nfunction initializePaymentSummary() {\r\n    // Create new instance of the payment handler\r\n    window.paymentSummaryHandler = new PaymentSummaryHandler();\r\n}\r\n\r\n// Multiple ways to ensure DOM is loaded before initialization\r\nif (document.readyState === 'loading') {\r\n    // DOM is still loading, wait for DOMContentLoaded event\r\n    document.addEventListener('DOMContentLoaded', initializePaymentSummary);\r\n} else {\r\n    // DOM is already loaded, initialize immediately\r\n    initializePaymentSummary();\r\n}","// Orders Module - Enhanced functionality for order management\r\n(() => {\r\n    let products = [];\r\n    let orderItems = [];\r\n    let nextItemId = 1;\r\n    let currentBroker = null;\r\n    let availableDiscounts = [];\r\n    let availableCoupons = [];\r\n    let appliedDiscount = null;\r\n    let appliedCoupon = null;\r\n\r\n    // Initialize the orders module\r\n    async function init() {\r\n        await loadProducts();\r\n        await loadDiscounts();\r\n        await loadCoupons();\r\n        loadBrokerInfo();\r\n        updateUI();\r\n        bindEvents();\r\n    }\r\n\r\n    // Load products from the main site's JSON\r\n    async function loadProducts() {\r\n        try {\r\n            const response = await fetch('/src/data/products.json');\r\n            products = await response.json();\r\n            console.log('Products loaded:', products.length, 'products');\r\n        } catch (error) {\r\n            console.error('Failed to load products:', error);\r\n            showToast('Failed to load products', 'error');\r\n        }\r\n    }\r\n\r\n    // Load available discounts\r\n    async function loadDiscounts() {\r\n        try {\r\n            const response = await fetch('/src/data/discounts.json');\r\n            const data = await response.json();\r\n            availableDiscounts = data.promotions.filter(promo => promo.active);\r\n            console.log('Discounts loaded:', availableDiscounts.length, 'active discounts');\r\n        } catch (error) {\r\n            console.error('Failed to load discounts:', error);\r\n            availableDiscounts = [];\r\n        }\r\n    }\r\n\r\n    // Load available coupons\r\n    async function loadCoupons() {\r\n        try {\r\n            const response = await fetch('/src/data/coupons.json');\r\n            const data = await response.json();\r\n            availableCoupons = data.coupons.filter(coupon =>\r\n                coupon.usedCount < coupon.usageLimit &&\r\n                new Date() >= new Date(coupon.validFrom) &&\r\n                new Date() <= new Date(coupon.validTo)\r\n            );\r\n            console.log('Coupons loaded:', availableCoupons.length, 'available coupons');\r\n        } catch (error) {\r\n            console.error('Failed to load coupons:', error);\r\n            availableCoupons = [];\r\n        }\r\n    }\r\n\r\n    // Load broker information\r\n    function loadBrokerInfo() {\r\n        // Get broker info from localStorage or use defaults\r\n        const brokerData = localStorage.getItem('brokerInfo');\r\n        if (brokerData) {\r\n            currentBroker = JSON.parse(brokerData);\r\n        } else {\r\n            currentBroker = {\r\n                id: 'BROKER001',\r\n                name: 'Broker User',\r\n                email: 'broker@eastleighturf.com',\r\n                phone: '+254700000000'\r\n            };\r\n        }\r\n    }\r\n\r\n    // Bind event listeners\r\n    function bindEvents() {\r\n        const addItemBtn = document.getElementById('addItemBtn');\r\n        const submitOrderBtn = document.getElementById('submitOrderBtn');\r\n\r\n        if (addItemBtn) {\r\n            addItemBtn.addEventListener('click', showAddItemModal);\r\n        }\r\n\r\n        if (submitOrderBtn) {\r\n            submitOrderBtn.addEventListener('click', submitOrder);\r\n        }\r\n    }\r\n\r\n    // Show add item modal\r\n    function showAddItemModal() {\r\n        createAddItemModal();\r\n        const modal = document.getElementById('addItemModal');\r\n        if (modal) {\r\n            modal.style.display = 'flex';\r\n            // Initially disable discount and coupon options\r\n            disableDiscountCouponOptions();\r\n        }\r\n    }\r\n\r\n    // Create add item modal\r\n    function createAddItemModal() {\r\n        // Remove existing modal if any\r\n        const existingModal = document.getElementById('addItemModal');\r\n        if (existingModal) {\r\n            existingModal.remove();\r\n        }\r\n\r\n        const modalHTML = `\r\n            <div id=\"addItemModal\" class=\"modal-overlay\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h2>Add Order Item</h2>\r\n                        <button class=\"modal-close\" id=\"closeAddItemModal\" aria-label=\"Close modal\">\r\n                            <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form id=\"addItemForm\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"modalProduct\">Product *</label>\r\n                                <select id=\"modalProduct\" required>\r\n                                    <option value=\"\">Select a product</option>\r\n                                    ${products.map(product =>\r\n            `<option value=\"${product.id}\">${product.name} (${product.thickness})</option>`\r\n        ).join('')}\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <label for=\"modalQuantity\">Quantity (m²) *</label>\r\n                                <input type=\"number\" id=\"modalQuantity\" min=\"0.1\" step=\"0.1\" required placeholder=\"Enter quantity\">\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label>Unit Price (KES)</label>\r\n                                <input type=\"text\" id=\"modalUnitPrice\" readonly value=\"0\">\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label>Subtotal (KES)</label>\r\n                                <input type=\"text\" id=\"modalSubtotal\" readonly value=\"0\">\r\n                            </div>\r\n\r\n                            <div class=\"discount-section\">\r\n                                <h3>Discounts & Coupons</h3>\r\n                                \r\n                                <div class=\"form-group\">\r\n                                    <label for=\"modalDiscount\">Available Discounts</label>\r\n                                    <select id=\"modalDiscount\" disabled>\r\n                                        <option value=\"\">No discount</option>\r\n                                        ${availableDiscounts.map(discount =>\r\n            `<option value=\"${discount.id}\">${discount.name} - ${discount.description}</option>`\r\n        ).join('')}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"modalCoupon\">Coupon Code</label>\r\n                                    <div class=\"coupon-input-group\">\r\n                                        <input type=\"text\" id=\"modalCoupon\" placeholder=\"Enter coupon code\" disabled>\r\n                                        <button type=\"button\" id=\"applyCouponBtn\" disabled>Apply</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"discount-summary\" id=\"discountSummary\" style=\"display: none;\">\r\n                                    <div class=\"summary-row\">\r\n                                        <span>Subtotal:</span>\r\n                                        <span id=\"summarySubtotal\">KES 0</span>\r\n                                    </div>\r\n                                    <div class=\"summary-row discount-row\" id=\"discountRow\" style=\"display: none;\">\r\n                                        <span>Discount:</span>\r\n                                        <span id=\"summaryDiscount\">-KES 0</span>\r\n                                    </div>\r\n                                    <div class=\"summary-row coupon-row\" id=\"couponRow\" style=\"display: none;\">\r\n                                        <span>Coupon:</span>\r\n                                        <span id=\"summaryCoupon\">-KES 0</span>\r\n                                    </div>\r\n                                    <div class=\"summary-row final-total\">\r\n                                        <span>Final Total:</span>\r\n                                        <span id=\"summaryFinalTotal\">KES 0</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"cancelAddItem\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" id=\"confirmAddItem\" disabled>Add to Order</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        document.body.insertAdjacentHTML('beforeend', modalHTML);\r\n        bindModalEvents();\r\n    }\r\n\r\n    // Bind modal events\r\n    function bindModalEvents() {\r\n        const modal = document.getElementById('addItemModal');\r\n        const closeBtn = document.getElementById('closeAddItemModal');\r\n        const cancelBtn = document.getElementById('cancelAddItem');\r\n        const confirmBtn = document.getElementById('confirmAddItem');\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n\r\n        if (closeBtn) {\r\n            closeBtn.addEventListener('click', closeAddItemModal);\r\n        }\r\n\r\n        if (cancelBtn) {\r\n            cancelBtn.addEventListener('click', closeAddItemModal);\r\n        }\r\n\r\n        if (confirmBtn) {\r\n            confirmBtn.addEventListener('click', addItemToOrder);\r\n        }\r\n\r\n        if (productSelect) {\r\n            productSelect.addEventListener('change', handleProductChange);\r\n        }\r\n\r\n        if (quantityInput) {\r\n            quantityInput.addEventListener('input', handleQuantityChange);\r\n\r\n            // Add number formatting for quantity input\r\n            if (window.numberFormatter) {\r\n                window.numberFormatter.initInputFormatting(quantityInput, {\r\n                    allowDecimals: true,\r\n                    decimalPlaces: 1,\r\n                    currency: 'KES'\r\n                });\r\n            } else {\r\n                // Fallback: wait for formatter to be available\r\n                const checkFormatter = setInterval(() => {\r\n                    if (window.numberFormatter) {\r\n                        window.numberFormatter.initInputFormatting(quantityInput, {\r\n                            allowDecimals: true,\r\n                            decimalPlaces: 1,\r\n                            currency: 'KES'\r\n                        });\r\n                        clearInterval(checkFormatter);\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n\r\n        if (applyCouponBtn) {\r\n            applyCouponBtn.addEventListener('click', applyCoupon);\r\n        }\r\n\r\n        // Close modal on overlay click\r\n        if (modal) {\r\n            modal.addEventListener('click', (e) => {\r\n                if (e.target === modal) {\r\n                    closeAddItemModal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle product selection\r\n    function handleProductChange() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const unitPriceInput = document.getElementById('modalUnitPrice');\r\n        const subtotalInput = document.getElementById('modalSubtotal');\r\n\r\n        if (productSelect && productSelect.value) {\r\n            const product = products.find(p => p.id === productSelect.value);\r\n            if (product) {\r\n                unitPriceInput.value = product.price.toLocaleString('en-US');\r\n                updateSubtotal();\r\n                checkEnableDiscountCoupon();\r\n            }\r\n        } else {\r\n            unitPriceInput.value = '0';\r\n            subtotalInput.value = '0';\r\n            disableDiscountCouponOptions();\r\n        }\r\n    }\r\n\r\n    // Handle quantity change\r\n    function handleQuantityChange() {\r\n        updateSubtotal();\r\n        checkEnableDiscountCoupon();\r\n    }\r\n\r\n    // Update subtotal\r\n    function updateSubtotal() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const subtotalInput = document.getElementById('modalSubtotal');\r\n\r\n        if (productSelect && productSelect.value && quantityInput && quantityInput.value) {\r\n            const product = products.find(p => p.id === productSelect.value);\r\n            const quantity = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(quantityInput.value) : parseFloat(quantityInput.value) || 0;\r\n            const subtotal = product.price * quantity;\r\n\r\n            subtotalInput.value = window.numberFormatter ? window.numberFormatter.formatCurrency(subtotal) : subtotal.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            });\r\n\r\n            updateDiscountSummary();\r\n        } else {\r\n            subtotalInput.value = '0';\r\n        }\r\n    }\r\n\r\n    // Check if discount and coupon options should be enabled\r\n    function checkEnableDiscountCoupon() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n        const confirmBtn = document.getElementById('confirmAddItem');\r\n\r\n        const hasProduct = productSelect && productSelect.value;\r\n        const hasQuantity = quantityInput && quantityInput.value && (window.numberFormatter ? window.numberFormatter.parseFormattedNumber(quantityInput.value) : parseFloat(quantityInput.value)) > 0;\r\n\r\n        if (hasProduct && hasQuantity) {\r\n            enableDiscountCouponOptions();\r\n            if (confirmBtn) confirmBtn.disabled = false;\r\n        } else {\r\n            disableDiscountCouponOptions();\r\n            if (confirmBtn) confirmBtn.disabled = true;\r\n        }\r\n    }\r\n\r\n    // Enable discount and coupon options\r\n    function enableDiscountCouponOptions() {\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n\r\n        if (discountSelect) discountSelect.disabled = false;\r\n        if (couponInput) couponInput.disabled = false;\r\n        if (applyCouponBtn) applyCouponBtn.disabled = false;\r\n\r\n        // Add event listeners for discount changes\r\n        if (discountSelect) {\r\n            discountSelect.addEventListener('change', updateDiscountSummary);\r\n        }\r\n    }\r\n\r\n    // Disable discount and coupon options\r\n    function disableDiscountCouponOptions() {\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n\r\n        if (discountSelect) {\r\n            discountSelect.disabled = true;\r\n            discountSelect.value = '';\r\n        }\r\n        if (couponInput) {\r\n            couponInput.disabled = true;\r\n            couponInput.value = '';\r\n        }\r\n        if (applyCouponBtn) applyCouponBtn.disabled = true;\r\n\r\n        // Reset discount summary\r\n        appliedDiscount = null;\r\n        appliedCoupon = null;\r\n        updateDiscountSummary();\r\n    }\r\n\r\n    // Apply coupon\r\n    function applyCoupon() {\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const couponCode = couponInput.value.trim().toUpperCase();\r\n\r\n        if (!couponCode) {\r\n            showToast('Please enter a coupon code', 'error');\r\n            return;\r\n        }\r\n\r\n        const coupon = availableCoupons.find(c => c.code === couponCode);\r\n        if (!coupon) {\r\n            showToast('Invalid coupon code', 'error');\r\n            return;\r\n        }\r\n\r\n        const subtotal = getCurrentSubtotal();\r\n        if (subtotal < coupon.minOrder) {\r\n            showToast(`Minimum order amount for this coupon is KES ${coupon.minOrder.toLocaleString()}`, 'error');\r\n            return;\r\n        }\r\n\r\n        appliedCoupon = coupon;\r\n        showToast(`Coupon ${coupon.code} applied successfully!`, 'success');\r\n        updateDiscountSummary();\r\n    }\r\n\r\n    // Update discount summary\r\n    function updateDiscountSummary() {\r\n        const subtotal = getCurrentSubtotal();\r\n        const discountSummary = document.getElementById('discountSummary');\r\n        const summarySubtotal = document.getElementById('summarySubtotal');\r\n        const discountRow = document.getElementById('discountRow');\r\n        const summaryDiscount = document.getElementById('summaryDiscount');\r\n        const couponRow = document.getElementById('couponRow');\r\n        const summaryCoupon = document.getElementById('summaryCoupon');\r\n        const summaryFinalTotal = document.getElementById('summaryFinalTotal');\r\n\r\n        if (!discountSummary) return;\r\n\r\n        summarySubtotal.textContent = `KES ${subtotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}`;\r\n\r\n        let finalTotal = subtotal;\r\n        let discountAmount = 0;\r\n        let couponAmount = 0;\r\n\r\n        // Calculate discount\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        if (discountSelect && discountSelect.value) {\r\n            const discount = availableDiscounts.find(d => d.id === discountSelect.value);\r\n            if (discount && subtotal >= discount.minOrder) {\r\n                if (discount.type === 'percentage') {\r\n                    discountAmount = (subtotal * discount.value / 100);\r\n                    if (discount.maxDiscount) {\r\n                        discountAmount = Math.min(discountAmount, discount.maxDiscount);\r\n                    }\r\n                } else {\r\n                    discountAmount = discount.value;\r\n                }\r\n                finalTotal -= discountAmount;\r\n                appliedDiscount = discount;\r\n            }\r\n        }\r\n\r\n        // Calculate coupon\r\n        if (appliedCoupon) {\r\n            if (appliedCoupon.type === 'percentage') {\r\n                couponAmount = (subtotal * appliedCoupon.value / 100);\r\n                if (appliedCoupon.maxDiscount) {\r\n                    couponAmount = Math.min(couponAmount, appliedCoupon.maxDiscount);\r\n                }\r\n            } else {\r\n                couponAmount = appliedCoupon.value;\r\n            }\r\n            finalTotal -= couponAmount;\r\n        }\r\n\r\n        // Show/hide discount row\r\n        if (discountAmount > 0) {\r\n            discountRow.style.display = 'flex';\r\n            summaryDiscount.textContent = `-KES ${discountAmount.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            })}`;\r\n        } else {\r\n            discountRow.style.display = 'none';\r\n        }\r\n\r\n        // Show/hide coupon row\r\n        if (couponAmount > 0) {\r\n            couponRow.style.display = 'flex';\r\n            summaryCoupon.textContent = `-KES ${couponAmount.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            })}`;\r\n        } else {\r\n            couponRow.style.display = 'none';\r\n        }\r\n\r\n        summaryFinalTotal.textContent = `KES ${finalTotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}`;\r\n\r\n        discountSummary.style.display = 'block';\r\n    }\r\n\r\n    // Get current subtotal from modal\r\n    function getCurrentSubtotal() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n\r\n        if (productSelect && productSelect.value && quantityInput && quantityInput.value) {\r\n            const product = products.find(p => p.id === productSelect.value);\r\n            const quantity = parseFloat(quantityInput.value) || 0;\r\n            return product.price * quantity;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // Add item to order\r\n    function addItemToOrder() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n\r\n        if (!productSelect.value || !quantityInput.value) {\r\n            showToast('Please select a product and enter quantity', 'error');\r\n            return;\r\n        }\r\n\r\n        const product = products.find(p => p.id === productSelect.value);\r\n        const quantity = parseFloat(quantityInput.value);\r\n        const subtotal = getCurrentSubtotal();\r\n\r\n        const item = {\r\n            id: nextItemId++,\r\n            productId: product.id,\r\n            product: product,\r\n            quantity: quantity,\r\n            unitPrice: product.price,\r\n            subtotal: subtotal,\r\n            discount: appliedDiscount,\r\n            coupon: appliedCoupon,\r\n            finalTotal: subtotal - (appliedDiscount ? calculateDiscountAmount(subtotal, appliedDiscount) : 0) - (appliedCoupon ? calculateCouponAmount(subtotal, appliedCoupon) : 0)\r\n        };\r\n\r\n        orderItems.push(item);\r\n        closeAddItemModal();\r\n        updateUI();\r\n        showToast('Item added to order', 'success');\r\n\r\n        // Update cart count\r\n        if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n            window.BrokerDashboard.updateCartCount();\r\n        }\r\n    }\r\n\r\n    // Calculate discount amount\r\n    function calculateDiscountAmount(subtotal, discount) {\r\n        if (discount.type === 'percentage') {\r\n            let amount = (subtotal * discount.value / 100);\r\n            if (discount.maxDiscount) {\r\n                amount = Math.min(amount, discount.maxDiscount);\r\n            }\r\n            return amount;\r\n        }\r\n        return discount.value;\r\n    }\r\n\r\n    // Calculate coupon amount\r\n    function calculateCouponAmount(subtotal, coupon) {\r\n        if (coupon.type === 'percentage') {\r\n            let amount = (subtotal * coupon.value / 100);\r\n            if (coupon.maxDiscount) {\r\n                amount = Math.min(amount, coupon.maxDiscount);\r\n            }\r\n            return amount;\r\n        }\r\n        return coupon.value;\r\n    }\r\n\r\n    // Close add item modal\r\n    function closeAddItemModal() {\r\n        const modal = document.getElementById('addItemModal');\r\n        if (modal) {\r\n            modal.remove();\r\n        }\r\n        // Reset applied discounts\r\n        appliedDiscount = null;\r\n        appliedCoupon = null;\r\n    }\r\n\r\n    // Remove an item from the order\r\n    function removeItem(itemId) {\r\n        orderItems = orderItems.filter(item => item.id !== itemId);\r\n        updateUI();\r\n        showToast('Item removed from order', 'success');\r\n\r\n        // Update cart count\r\n        if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n            window.BrokerDashboard.updateCartCount();\r\n        }\r\n    }\r\n\r\n    // Calculate order total\r\n    function calculateTotal() {\r\n        return orderItems.reduce((sum, item) => sum + item.finalTotal, 0);\r\n    }\r\n\r\n    // Update the UI\r\n    function updateUI() {\r\n        const tableBody = document.getElementById('orderTableBody');\r\n        const emptyState = document.getElementById('emptyOrderState');\r\n        const orderTotal = document.getElementById('orderTotal');\r\n        const submitBtn = document.getElementById('submitOrderBtn');\r\n\r\n        if (!tableBody || !emptyState || !orderTotal || !submitBtn) return;\r\n\r\n        // Show/hide empty state\r\n        if (orderItems.length === 0) {\r\n            tableBody.innerHTML = '';\r\n            emptyState.style.display = 'block';\r\n            submitBtn.disabled = true;\r\n        } else {\r\n            emptyState.style.display = 'none';\r\n            submitBtn.disabled = false;\r\n            // Render table rows\r\n            tableBody.innerHTML = orderItems.map(item => createOrderRow(item)).join('');\r\n            // Add event listeners to new elements\r\n            orderItems.forEach(item => {\r\n                const deleteBtn = document.getElementById(`delete-${item.id}`);\r\n                if (deleteBtn) {\r\n                    deleteBtn.addEventListener('click', () => {\r\n                        removeItem(item.id);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // Update total\r\n        const total = calculateTotal();\r\n        orderTotal.textContent = total.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        });\r\n\r\n        // Update credit balance when order total changes\r\n        if (window.paymentSummaryHandler && window.paymentSummaryHandler.updateCreditBalance) {\r\n            window.paymentSummaryHandler.updateCreditBalance();\r\n        }\r\n    }\r\n\r\n    // Create order row HTML\r\n    function createOrderRow(item) {\r\n        const discountText = item.discount ? `${item.discount.name} (-${item.discount.value}%)` : '';\r\n        const couponText = item.coupon ? `${item.coupon.code} (-${item.coupon.value}${item.coupon.type === 'percentage' ? '%' : ' KES'})` : '';\r\n\r\n        return `\r\n            <tr>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Product Name</label>\r\n                        <strong>${item.product.name} (${item.product.thickness})</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Quantity (m²)</label>\r\n                        <strong>${item.quantity}</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Unit Price (KES)</label>\r\n                        <strong>${item.unitPrice.toLocaleString('en-US')}</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Subtotal (KES)</label>\r\n                        <strong>${item.subtotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Final Total (KES)</label>\r\n                        <strong>${item.finalTotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}</strong>\r\n                        ${discountText || couponText ? `<br><small class=\"discount-info\">${discountText}${discountText && couponText ? ', ' : ''}${couponText}</small>` : ''}\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Action</label>\r\n                        <button class=\"delete-btn\" id=\"delete-${item.id}\">\r\n                            <i class=\"fas fa-trash\"></i> Delete\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        `;\r\n    }\r\n\r\n    // Submit order\r\n    function submitOrder() {\r\n        if (orderItems.length === 0) {\r\n            showToast('No items in order', 'error');\r\n            return;\r\n        }\r\n\r\n        const orderData = {\r\n            brokerId: currentBroker.id,\r\n            brokerName: currentBroker.name,\r\n            brokerEmail: currentBroker.email,\r\n            brokerPhone: currentBroker.phone,\r\n            items: orderItems,\r\n            total: calculateTotal(),\r\n            subtotal: orderItems.reduce((sum, item) => sum + item.subtotal, 0),\r\n            totalDiscount: orderItems.reduce((sum, item) => {\r\n                let itemDiscount = 0;\r\n                if (item.discount) {\r\n                    itemDiscount += calculateDiscountAmount(item.subtotal, item.discount);\r\n                }\r\n                if (item.coupon) {\r\n                    itemDiscount += calculateCouponAmount(item.subtotal, item.coupon);\r\n                }\r\n                return sum + itemDiscount;\r\n            }, 0),\r\n            orderDate: new Date().toISOString()\r\n        };\r\n\r\n        // Send to WhatsApp\r\n        sendOrderToWhatsApp(orderData);\r\n    }\r\n\r\n    // Send order to WhatsApp\r\n    function sendOrderToWhatsApp(orderData) {\r\n        const message = generateOrderMessage(orderData);\r\n\r\n        if (window.WhatsAppService && window.WhatsAppService.sendToWhatsApp) {\r\n            const success = window.WhatsAppService.sendToWhatsApp(message, 'broker-order');\r\n            if (success) {\r\n                showToast('Order sent to WhatsApp successfully!', 'success');\r\n                // Clear order after successful submission\r\n                orderItems = [];\r\n                updateUI();\r\n            } else {\r\n                showToast('Failed to send order to WhatsApp', 'error');\r\n            }\r\n        } else {\r\n            // Fallback: open WhatsApp manually\r\n            const whatsappNumber = '254743375997';\r\n            const encodedMessage = encodeURIComponent(message);\r\n            const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodedMessage}`;\r\n            window.open(whatsappUrl, '_blank');\r\n            showToast('Order opened in WhatsApp!', 'success');\r\n            // Clear order after successful submission\r\n            orderItems = [];\r\n            updateUI();\r\n        }\r\n    }\r\n\r\n    // Generate order message for WhatsApp\r\n    function generateOrderMessage(orderData) {\r\n        const itemsList = orderData.items.map(item => {\r\n            let itemText = `• ${item.product.name} (${item.product.thickness})\\n`;\r\n            itemText += `  Quantity: ${item.quantity} m²\\n`;\r\n            itemText += `  Unit Price: KES ${item.unitPrice.toLocaleString()}\\n`;\r\n            itemText += `  Subtotal: KES ${item.subtotal.toLocaleString()}`;\r\n\r\n            if (item.discount || item.coupon) {\r\n                itemText += `\\n  Final Total: KES ${item.finalTotal.toLocaleString()}`;\r\n                if (item.discount) {\r\n                    itemText += ` (${item.discount.name} applied)`;\r\n                }\r\n                if (item.coupon) {\r\n                    itemText += ` (${item.coupon.code} applied)`;\r\n                }\r\n            }\r\n            return itemText;\r\n        }).join('\\n\\n');\r\n\r\n        return `*BROKER ORDER SUBMISSION - Eastleigh Turf Grass*\r\n\r\n*Broker Details:*\r\n• ID: ${orderData.brokerId}\r\n• Name: ${orderData.brokerName}\r\n• Email: ${orderData.brokerEmail}\r\n• Phone: ${orderData.brokerPhone}\r\n\r\n*Order Items:*\r\n${itemsList}\r\n\r\n*Order Summary:*\r\n• Total Items: ${orderData.items.length}\r\n• Subtotal: KES ${orderData.subtotal.toLocaleString()}\r\n• Total Discount: KES ${orderData.totalDiscount.toLocaleString()}\r\n• Final Total: KES ${orderData.total.toLocaleString()}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    // Show toast notification\r\n    function showToast(message, type = 'success') {\r\n        const toast = document.getElementById('toast');\r\n        const toastMessage = toast.querySelector('.toast-message');\r\n\r\n        if (toast && toastMessage) {\r\n            toast.className = `toast ${type}`;\r\n            toastMessage.textContent = message;\r\n            toast.classList.remove('hidden');\r\n\r\n            setTimeout(() => {\r\n                toast.classList.add('hidden');\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    // Get item count for cart\r\n    function getItemCount() {\r\n        return orderItems.length;\r\n    }\r\n\r\n    // Initialize the module when DOM is loaded\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', async () => {\r\n            await init();\r\n        });\r\n    } else {\r\n        (async () => {\r\n            await init();\r\n        })();\r\n    }\r\n\r\n    // Expose module to window object\r\n    window.OrdersModule = {\r\n        addItem: showAddItemModal,\r\n        removeItem,\r\n        getItemCount,\r\n        calculateTotal,\r\n        updateUI,\r\n        submitOrder\r\n    };\r\n\r\n})();","// WhatsApp Service for Broker Dashboard\r\nclass WhatsAppService {\r\n    constructor() {\r\n        this.whatsappNumber = '254743375997'; // Business WhatsApp number\r\n        this.businessName = 'Eastleigh Turf Grass';\r\n        this.baseUrl = 'https://wa.me';\r\n    }\r\n\r\n    /**\r\n     * Send order to WhatsApp\r\n     * @param {Object} orderData - Order data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendOrder(orderData) {\r\n        try {\r\n            const message = this.generateOrderMessage(orderData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send preorder to WhatsApp\r\n     * @param {Object} preorderData - Preorder data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendPreorder(preorderData) {\r\n        try {\r\n            const message = this.generatePreorderMessage(preorderData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send inquiry to WhatsApp\r\n     * @param {Object} inquiryData - Inquiry data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendInquiry(inquiryData) {\r\n        try {\r\n            const message = this.generateInquiryMessage(inquiryData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send contact form to WhatsApp\r\n     * @param {Object} contactData - Contact data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendContact(contactData) {\r\n        try {\r\n            const message = this.generateContactMessage(contactData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate WhatsApp URL\r\n     * @param {string} message - Message to send\r\n     * @returns {string} - WhatsApp URL\r\n     */\r\n    generateWhatsAppUrl(message) {\r\n        const encodedMessage = encodeURIComponent(message);\r\n        return `${this.baseUrl}/${this.whatsappNumber}?text=${encodedMessage}`;\r\n    }\r\n\r\n    /**\r\n     * Generate order message\r\n     * @param {Object} orderData - Order data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generateOrderMessage(orderData) {\r\n        const {\r\n            brokerId,\r\n            brokerName,\r\n            brokerEmail,\r\n            brokerPhone,\r\n            items,\r\n            total,\r\n            subtotal,\r\n            totalDiscount,\r\n            orderDate\r\n        } = orderData;\r\n\r\n        const itemsList = items.map(item => {\r\n            let itemText = `• ${item.product.name} (${item.product.thickness})\\n`;\r\n            itemText += `  Quantity: ${item.quantity} m²\\n`;\r\n            itemText += `  Unit Price: KES ${item.unitPrice.toLocaleString()}\\n`;\r\n            itemText += `  Subtotal: KES ${item.subtotal.toLocaleString()}`;\r\n\r\n            if (item.discount || item.coupon) {\r\n                itemText += `\\n  Final Total: KES ${item.finalTotal.toLocaleString()}`;\r\n                if (item.discount) {\r\n                    itemText += ` (${item.discount.name} applied)`;\r\n                }\r\n                if (item.coupon) {\r\n                    itemText += ` (${item.coupon.code} applied)`;\r\n                }\r\n            }\r\n            return itemText;\r\n        }).join('\\n\\n');\r\n\r\n        return `*BROKER ORDER SUBMISSION - ${this.businessName}*\r\n\r\n*Broker Details:*\r\n• ID: ${brokerId}\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n• Phone: ${brokerPhone}\r\n\r\n*Order Items:*\r\n${itemsList}\r\n\r\n*Order Summary:*\r\n• Total Items: ${items.length}\r\n• Subtotal: KES ${subtotal.toLocaleString()}\r\n• Total Discount: KES ${totalDiscount.toLocaleString()}\r\n• Final Total: KES ${total.toLocaleString()}\r\n\r\n*Submitted:* ${new Date(orderDate).toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Generate preorder message\r\n     * @param {Object} preorderData - Preorder data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generatePreorderMessage(preorderData) {\r\n        const {\r\n            brokerName,\r\n            brokerEmail,\r\n            items,\r\n            expectedDate,\r\n            specialNotes,\r\n            total\r\n        } = preorderData;\r\n\r\n        const itemsList = items.map(item => {\r\n            return `• ${item.product.name} (${item.product.thickness})\r\n  Quantity: ${item.quantity} m²\r\n  Unit Price: KES ${item.unitPrice.toLocaleString()}\r\n  Total: KES ${item.total.toLocaleString()}`;\r\n        }).join('\\n\\n');\r\n\r\n        return `*BROKER PREORDER SUBMISSION - ${this.businessName}*\r\n\r\n*Broker Details:*\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n\r\n*Preorder Items:*\r\n${itemsList}\r\n\r\n*Preorder Details:*\r\n• Expected Date: ${expectedDate || 'Not specified'}\r\n• Special Notes: ${specialNotes || 'None'}\r\n• Total Amount: KES ${total.toLocaleString()}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Generate inquiry message\r\n     * @param {Object} inquiryData - Inquiry data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generateInquiryMessage(inquiryData) {\r\n        const {\r\n            brokerName,\r\n            brokerEmail,\r\n            items,\r\n            totalOriginal,\r\n            totalBargain\r\n        } = inquiryData;\r\n\r\n        const itemsList = items.map(item => {\r\n            const difference = item.bargainPrice - item.originalPrice;\r\n            const differenceText = difference > 0 ? `+KES ${difference.toLocaleString()}` : `-KES ${Math.abs(difference).toLocaleString()}`;\r\n\r\n            return `• ${item.product.name} (${item.product.thickness})\r\n  Original Price: KES ${item.originalPrice.toLocaleString()}\r\n  Bargain Price: KES ${item.bargainPrice.toLocaleString()}\r\n  Difference: ${differenceText}`;\r\n        }).join('\\n\\n');\r\n\r\n        const totalDifference = totalBargain - totalOriginal;\r\n        const totalDifferenceText = totalDifference > 0 ? `+KES ${totalDifference.toLocaleString()}` : `-KES ${Math.abs(totalDifference).toLocaleString()}`;\r\n\r\n        return `*BROKER PRICE INQUIRY - ${this.businessName}*\r\n\r\n*Broker Details:*\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n\r\n*Price Inquiries:*\r\n${itemsList}\r\n\r\n*Inquiry Summary:*\r\n• Total Original Value: KES ${totalOriginal.toLocaleString()}\r\n• Total Bargain Value: KES ${totalBargain.toLocaleString()}\r\n• Total Difference: ${totalDifferenceText}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Generate contact message\r\n     * @param {Object} contactData - Contact data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generateContactMessage(contactData) {\r\n        const {\r\n            name,\r\n            email,\r\n            phone,\r\n            subject,\r\n            message\r\n        } = contactData;\r\n\r\n        return `*CONTACT FORM SUBMISSION - ${this.businessName}*\r\n\r\n*Customer Details:*\r\n• Name: ${name}\r\n• Email: ${email}\r\n• Phone: ${phone}\r\n\r\n*Message:*\r\nSubject: ${subject}\r\nMessage: ${message}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {string} message - Message to send\r\n     * @param {string} type - Message type\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendToWhatsApp(message, type = 'general') {\r\n        try {\r\n            const url = this.generateWhatsAppUrl(message);\r\n            window.open(url, '_blank');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} orderData - Order data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendOrderForm(orderData) {\r\n        return this.sendOrder(orderData);\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} preorderData - Preorder data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendPreorderForm(preorderData) {\r\n        return this.sendPreorder(preorderData);\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} inquiryData - Inquiry data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendInquiryForm(inquiryData) {\r\n        return this.sendInquiry(inquiryData);\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} contactData - Contact data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendContactForm(contactData) {\r\n        return this.sendContact(contactData);\r\n    }\r\n}\r\n\r\n// Create and export singleton instance\r\nconst whatsappService = new WhatsAppService();\r\n\r\n// Make it available globally\r\nwindow.WhatsAppService = whatsappService;\r\n\r\n// Export for module systems\r\nexport default whatsappService;","// Broker Dashboard Main Entry Point\r\n// This file initializes all broker dashboard functionality\r\n\r\n// Import CSS styles\r\nimport \"@/css/base.css\";\r\nimport \"@/css/header.css\";\r\nimport \"@/css/footer.css\";\r\nimport \"@/css/mobile-nav.css\";\r\nimport \"@/css/toast.css\";\r\nimport \"@/css/broker.css\";\r\n\r\n// Import core functionality\r\nimport \"@/js/components/header.js\";\r\nimport \"@/js/components/cart.js\";\r\nimport \"@/js/components/cartIconPopUp.js\";\r\nimport \"@/js/components/toast.js\";\r\n\r\n// Import broker-specific modules\r\nimport \"@/js/broker/broker.js\";\r\nimport \"@/js/broker/dashboard.js\";\r\nimport \"@/js/broker/modules/orders.js\";\r\n\r\n// Import WhatsApp service\r\nimport \"@/services/whatsappService.js\";\r\nimport \"@/services/toastService.js\";\r\n\r\n// Import other broker modules if they exist\r\ntry {\r\n    import(\"@/js/broker/modules/preorders.js\");\r\n} catch (error) {\r\n    console.warn('Preorders module not available:', error);\r\n}\r\n\r\ntry {\r\n    import(\"@/js/broker/modules/inquiry.js\");\r\n} catch (error) {\r\n    console.warn('Inquiry module not available:', error);\r\n}\r\n\r\n// Initialize broker dashboard when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    console.log('Broker dashboard initialized');\r\n\r\n    // Check if user is authenticated\r\n    const authState = localStorage.getItem('authState');\r\n    if (!authState) {\r\n        // Redirect to login if not authenticated\r\n        const basePath = getBasePath();\r\n        window.location.href = basePath + '/index.html';\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const user = JSON.parse(authState);\r\n        if (!user.loggedIn || !user.user) {\r\n            // Redirect to login if not properly authenticated\r\n            const basePath = getBasePath();\r\n            window.location.href = basePath + '/index.html';\r\n            return;\r\n        }\r\n\r\n        // Set broker info in localStorage for the orders module\r\n        const brokerInfo = {\r\n            id: 'BROKER001',\r\n            name: user.user.username || 'Broker User',\r\n            email: user.user.email || 'broker@eastleighturf.com',\r\n            phone: user.user.phone || '+254700000000'\r\n        };\r\n        localStorage.setItem('brokerInfo', JSON.stringify(brokerInfo));\r\n\r\n    } catch (error) {\r\n        console.error('Error parsing auth state:', error);\r\n        const basePath = getBasePath();\r\n        window.location.href = basePath + '/index.html';\r\n        return;\r\n    }\r\n\r\n    // Initialize broker dashboard\r\n    if (window.BrokerDashboard) {\r\n        console.log('Broker dashboard modules loaded successfully');\r\n    } else {\r\n        console.error('Broker dashboard modules failed to load');\r\n    }\r\n});\r\n\r\n// Get the base path for GitHub Pages deployment\r\nfunction getBasePath() {\r\n    // Check if we're on GitHub Pages (has base path)\r\n    const pathname = window.location.pathname;\r\n    if (pathname.includes('/Eastleigh_Turf_Grass/')) {\r\n        return '/Eastleigh_Turf_Grass';\r\n    }\r\n    // For local development or root deployment\r\n    return '';\r\n}\r\n\r\n// Export for potential external use\r\nexport default {\r\n    name: 'BrokerDashboard'\r\n};"],"file":"broker.7db5dba1.js"}