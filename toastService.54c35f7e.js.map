{"version":3,"file":"toastService.54c35f7e.js","sources":["../src/services/toastService.js"],"sourcesContent":["// Unified Toast Service\r\nclass ToastService {\r\n    constructor() {\r\n        this.toastContainer = null;\r\n        this.toastQueue = [];\r\n        this.isProcessing = false;\r\n        this.defaultDuration = 3000;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // Create toast container if it doesn't exist\r\n        if (!document.getElementById('toast-container')) {\r\n            this.createToastContainer();\r\n        }\r\n        this.toastContainer = document.getElementById('toast-container');\r\n    }\r\n\r\n    createToastContainer() {\r\n        const container = document.createElement('div');\r\n        container.id = 'toast-container';\r\n        container.className = 'toast-container';\r\n        document.body.appendChild(container);\r\n    }\r\n\r\n    show(message, type = 'info', duration = this.defaultDuration) {\r\n        const toast = this.createToast(message, type);\r\n        this.toastQueue.push({\r\n            toast,\r\n            duration\r\n        });\r\n\r\n        if (!this.isProcessing) {\r\n            this.processQueue();\r\n        }\r\n    }\r\n\r\n    createToast(message, type) {\r\n        const toast = document.createElement('div');\r\n        toast.className = `toast-notification ${type}`;\r\n\r\n        const icon = this.getIconForType(type);\r\n\r\n        toast.innerHTML = `\r\n            <div class=\"toast-header\">\r\n                <i class=\"${icon}\"></i>\r\n                <span class=\"toast-title\">${this.getTitleForType(type)}</span>\r\n                <button class=\"toast-close\" aria-label=\"Close notification\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"toast-message\">${message}</div>\r\n        `;\r\n\r\n        // Add close button functionality\r\n        const closeBtn = toast.querySelector('.toast-close');\r\n        closeBtn.addEventListener('click', () => {\r\n            this.hideToast(toast);\r\n        });\r\n\r\n        return toast;\r\n    }\r\n\r\n    getIconForType(type) {\r\n        const icons = {\r\n            success: 'fas fa-check-circle',\r\n            error: 'fas fa-exclamation-circle',\r\n            warning: 'fas fa-exclamation-triangle',\r\n            info: 'fas fa-info-circle'\r\n        };\r\n        return icons[type] || icons.info;\r\n    }\r\n\r\n    getTitleForType(type) {\r\n        const titles = {\r\n            success: 'Success',\r\n            error: 'Error',\r\n            warning: 'Warning',\r\n            info: 'Information'\r\n        };\r\n        return titles[type] || titles.info;\r\n    }\r\n\r\n    processQueue() {\r\n        if (this.toastQueue.length === 0) {\r\n            this.isProcessing = false;\r\n            return;\r\n        }\r\n\r\n        this.isProcessing = true;\r\n        const {\r\n            toast,\r\n            duration\r\n        } = this.toastQueue.shift();\r\n\r\n        this.toastContainer.appendChild(toast);\r\n\r\n        // Trigger animation\r\n        requestAnimationFrame(() => {\r\n            toast.classList.add('show');\r\n        });\r\n\r\n        // Auto-hide after duration\r\n        setTimeout(() => {\r\n            this.hideToast(toast);\r\n        }, duration);\r\n    }\r\n\r\n    hideToast(toast) {\r\n        toast.classList.add('hiding');\r\n\r\n        setTimeout(() => {\r\n            if (toast.parentNode) {\r\n                toast.parentNode.removeChild(toast);\r\n            }\r\n            this.processQueue();\r\n        }, 300);\r\n    }\r\n\r\n    // Convenience methods\r\n    success(message, duration) {\r\n        this.show(message, 'success', duration);\r\n    }\r\n\r\n    error(message, duration) {\r\n        this.show(message, 'error', duration);\r\n    }\r\n\r\n    warning(message, duration) {\r\n        this.show(message, 'warning', duration);\r\n    }\r\n\r\n    info(message, duration) {\r\n        this.show(message, 'info', duration);\r\n    }\r\n\r\n    // Clear all toasts\r\n    clear() {\r\n        if (this.toastContainer) {\r\n            this.toastContainer.innerHTML = '';\r\n        }\r\n        this.toastQueue = [];\r\n        this.isProcessing = false;\r\n    }\r\n}\r\n\r\n// Create global instance\r\nconst toastService = new ToastService();\r\n\r\n// Expose globally for backward compatibility\r\nwindow.ToastService = toastService;\r\n\r\n// Legacy compatibility functions\r\nwindow.showToast = (title, message, type = 'info') => {\r\n    toastService.show(message || title, type);\r\n};\r\n\r\nexport default toastService;"],"names":["toastService","constructor","this","toastContainer","toastQueue","isProcessing","defaultDuration","init","document","getElementById","createToastContainer","container","createElement","id","className","body","appendChild","show","message","type","duration","toast","createToast","push","processQueue","concat","icon","getIconForType","innerHTML","getTitleForType","querySelector","addEventListener","hideToast","icons","success","error","warning","info","titles","length","shift","requestAnimationFrame","classList","add","setTimeout","parentNode","removeChild","clear","window","ToastService","showToast","title"],"mappings":"AAmJA,MAAMA,EAAe,IAlJrB,MACI,WAAAC,GACIC,KAAKC,eAAiB,KACtBD,KAAKE,WAAa,GAClBF,KAAKG,cAAe,EACpBH,KAAKI,gBAAkB,IACvBJ,KAAKK,MACR,CAED,IAAAA,GAESC,SAASC,eAAe,oBACzBP,KAAKQ,uBAEJR,KAAAC,eAAiBK,SAASC,eAAe,kBACjD,CAED,oBAAAC,GACU,MAAAC,EAAYH,SAASI,cAAc,OACzCD,EAAUE,GAAK,kBACfF,EAAUG,UAAY,kBACbN,SAAAO,KAAKC,YAAYL,EAC7B,CAED,IAAAM,CAAKC,EAASC,EAAO,OAAQC,EAAWlB,KAAKI,iBACzC,MAAMe,EAAQnB,KAAKoB,YAAYJ,EAASC,GACxCjB,KAAKE,WAAWmB,KAAK,CACjBF,QACAD,aAGClB,KAAKG,cACNH,KAAKsB,cAEZ,CAED,WAAAF,CAAYJ,EAASC,GACX,MAAAE,EAAQb,SAASI,cAAc,OACrCS,EAAMP,UAAY,sBAAsBW,OAAAN,GAElC,MAAAO,EAAOxB,KAAKyB,eAAeR,GAE3BE,EAAAO,UAAY,uEAEEH,OAAIC,EAAA,sDACYD,YAAKI,gBAAgBV,GAAK,mOAK7BM,OAAOP,EAAA,oBASjC,OALUG,EAAMS,cAAc,gBAC5BC,iBAAiB,QAAS,KAC/B7B,KAAK8B,UAAUX,KAGZA,CACV,CAED,cAAAM,CAAeR,GACX,MAAMc,EAAQ,CACVC,QAAS,sBACTC,MAAO,4BACPC,QAAS,8BACTC,KAAM,sBAEH,OAAAJ,EAAMd,IAASc,EAAMI,IAC/B,CAED,eAAAR,CAAgBV,GACZ,MAAMmB,EAAS,CACXJ,QAAS,UACTC,MAAO,QACPC,QAAS,UACTC,KAAM,eAEH,OAAAC,EAAOnB,IAASmB,EAAOD,IACjC,CAED,YAAAb,GACQ,GAA2B,IAA3BtB,KAAKE,WAAWmC,OAEhB,YADArC,KAAKG,cAAe,GAIxBH,KAAKG,cAAe,EACd,MAAAgB,MACFA,EAAAD,SACAA,GACAlB,KAAKE,WAAWoC,QAEftC,KAAAC,eAAea,YAAYK,GAGhCoB,sBAAsB,KACZpB,EAAAqB,UAAUC,IAAI,UAIxBC,WAAW,KACP1C,KAAK8B,UAAUX,IAChBD,EACN,CAED,SAAAY,CAAUX,GACAA,EAAAqB,UAAUC,IAAI,UAEpBC,WAAW,KACHvB,EAAMwB,YACAxB,EAAAwB,WAAWC,YAAYzB,GAEjCnB,KAAKsB,gBACN,IACN,CAGD,OAAAU,CAAQhB,EAASE,GACRlB,KAAAe,KAAKC,EAAS,UAAWE,EACjC,CAED,KAAAe,CAAMjB,EAASE,GACNlB,KAAAe,KAAKC,EAAS,QAASE,EAC/B,CAED,OAAAgB,CAAQlB,EAASE,GACRlB,KAAAe,KAAKC,EAAS,UAAWE,EACjC,CAED,IAAAiB,CAAKnB,EAASE,GACLlB,KAAAe,KAAKC,EAAS,OAAQE,EAC9B,CAGD,KAAA2B,GACQ7C,KAAKC,iBACLD,KAAKC,eAAeyB,UAAY,IAEpC1B,KAAKE,WAAa,GAClBF,KAAKG,cAAe,CACvB,GAOL2C,OAAOC,aAAejD,EAGtBgD,OAAOE,UAAY,CAACC,EAAOjC,EAASC,EAAO,UAC1BnB,EAAAiB,KAAKC,GAAWiC,EAAOhC"}