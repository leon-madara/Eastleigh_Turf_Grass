{"version":3,"mappings":"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","names":["cartItems","cartTotal","init","loadCartFromStorage","updateCartDisplay","bindEvents","initDiscountCouponButtons","state","updateCartSummary","error","savedCart","calculateTotal","saveCartToStorage","addItem","item","existingItemIndex","cartItem","showToast","removeItem","index","removedItem","updateItemQuantity","newQuantity","total","cartTotalElement","applyDiscountBtn","enterCouponBtn","subtotal","discountAmount","finalTotal","hasDiscount","hasCoupon","updateCartCount","updateCartPanel","cartCount","cartCountBadge","totalItems","cartItemsContainer","cartSummary","clearCart","title","description","type","toast","toastMessage","toastIcon","closeBtn","module","clearCartBtn","submitOrderBtn"],"sources":["../src/js/components/cart.js"],"sourcesContent":["// Cart Component\r\n(() => {\r\n    let cartItems = [];\r\n    let cartTotal = 0;\r\n\r\n    // Initialize cart\r\n    function init() {\r\n        try {\r\n            loadCartFromStorage();\r\n            updateCartDisplay();\r\n            bindEvents();\r\n            initDiscountCouponButtons();\r\n\r\n            // Subscribe to Cart state changes\r\n            if (window.CartState) {\r\n                window.CartState.subscribe((state) => {\r\n                    updateCartSummary();\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.warn('Cart initialization failed:', error);\r\n        }\r\n    }\r\n\r\n    // Load cart from localStorage\r\n    function loadCartFromStorage() {\r\n        const savedCart = localStorage.getItem('eastleighCart');\r\n        if (savedCart) {\r\n            try {\r\n                cartItems = JSON.parse(savedCart);\r\n                calculateTotal();\r\n            } catch (error) {\r\n                console.error('Error loading cart from storage:', error);\r\n                cartItems = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    // Save cart to localStorage\r\n    function saveCartToStorage() {\r\n        localStorage.setItem('eastleighCart', JSON.stringify(cartItems));\r\n    }\r\n\r\n    // Add item to cart\r\n    function addItem(item) {\r\n        const existingItemIndex = cartItems.findIndex(cartItem =>\r\n            cartItem.id === item.id &&\r\n            cartItem.length === item.length &&\r\n            cartItem.width === item.width\r\n        );\r\n\r\n        if (existingItemIndex !== -1) {\r\n            cartItems[existingItemIndex].quantity += item.quantity;\r\n        } else {\r\n            cartItems.push(item);\r\n        }\r\n\r\n        calculateTotal();\r\n        saveCartToStorage();\r\n        updateCartDisplay();\r\n\r\n        // Also add to Cart state for discount calculations\r\n        if (window.CartState) {\r\n            window.CartState.add(item);\r\n        }\r\n\r\n        showToast('Item Added', `${item.name} has been added to your cart`, 'success');\r\n    }\r\n\r\n    // Remove item from cart\r\n    function removeItem(index) {\r\n        const removedItem = cartItems[index];\r\n        cartItems.splice(index, 1);\r\n        calculateTotal();\r\n        saveCartToStorage();\r\n        updateCartDisplay();\r\n\r\n        // Also update Cart state\r\n        if (window.CartState) {\r\n            window.CartState.remove(removedItem.id);\r\n        }\r\n\r\n        showToast('Item Removed', `${removedItem.name} has been removed from your cart`, 'error');\r\n    }\r\n\r\n    // Update item quantity\r\n    function updateItemQuantity(index, newQuantity) {\r\n        if (newQuantity <= 0) {\r\n            removeItem(index);\r\n            return;\r\n        }\r\n\r\n        cartItems[index].quantity = newQuantity;\r\n        cartItems[index].total = cartItems[index].area * cartItems[index].price * newQuantity;\r\n        calculateTotal();\r\n        saveCartToStorage();\r\n        updateCartDisplay();\r\n    }\r\n\r\n    // Calculate total\r\n    function calculateTotal() {\r\n        cartTotal = cartItems.reduce((total, item) => total + item.total, 0);\r\n    }\r\n\r\n    // Update cart summary with discount information\r\n    function updateCartSummary() {\r\n        try {\r\n            const cartTotalElement = document.getElementById('cartTotal');\r\n            const applyDiscountBtn = document.getElementById('applyDiscountBtn');\r\n            const enterCouponBtn = document.getElementById('enterCouponBtn');\r\n\r\n            if (!cartTotalElement) return;\r\n\r\n            // Get discount information from Cart state\r\n            const subtotal = cartItems.reduce((total, item) => total + item.total, 0);\r\n            const discountAmount = window.CartState ? window.CartState.getDiscountAmount() : 0;\r\n            const finalTotal = subtotal - discountAmount;\r\n\r\n            // Update total display\r\n            if (discountAmount > 0) {\r\n                cartTotalElement.innerHTML = `\r\n                    <div class=\"cart-total-breakdown\">\r\n                        <div class=\"subtotal\">Subtotal: KES ${subtotal.toLocaleString()}</div>\r\n                        <div class=\"discount\">Discount: -KES ${discountAmount.toLocaleString()}</div>\r\n                        <div class=\"final-total\">Total: KES ${finalTotal.toLocaleString()}</div>\r\n                    </div>\r\n                `;\r\n            } else {\r\n                cartTotalElement.textContent = `KES ${subtotal.toLocaleString()}`;\r\n            }\r\n\r\n            // Update button states\r\n            if (applyDiscountBtn) {\r\n                const hasDiscount = window.CartState && window.CartState.getDiscountAmount() > 0;\r\n                applyDiscountBtn.innerHTML = hasDiscount ?\r\n                    '<i class=\"fas fa-check\"></i> Discount Applied' :\r\n                    '<i class=\"fas fa-tag\"></i> Apply Discount';\r\n                applyDiscountBtn.classList.toggle('applied', hasDiscount);\r\n            }\r\n\r\n            if (enterCouponBtn) {\r\n                const hasCoupon = window.CartState && window.CartState.appliedCoupon;\r\n                enterCouponBtn.innerHTML = hasCoupon ?\r\n                    '<i class=\"fas fa-check\"></i> Coupon Applied' :\r\n                    '<i class=\"fas fa-ticket-alt\"></i> Enter Coupon';\r\n                enterCouponBtn.classList.toggle('applied', hasCoupon);\r\n            }\r\n        } catch (error) {\r\n            console.warn('Cart summary update failed:', error);\r\n        }\r\n    }\r\n\r\n    // Update cart display\r\n    function updateCartDisplay() {\r\n        try {\r\n            updateCartCount();\r\n            updateCartPanel();\r\n            // updateCartModal(); // Removed - cart modal functionality was removed\r\n        } catch (error) {\r\n            console.warn('Cart display update failed:', error);\r\n        }\r\n    }\r\n\r\n    // Update cart count in header\r\n    function updateCartCount() {\r\n        try {\r\n            const cartCount = document.getElementById('cartCount');\r\n            const cartCountBadge = document.getElementById('cartCountBadge');\r\n            const totalItems = cartItems.reduce((total, item) => total + item.quantity, 0);\r\n\r\n            if (cartCount) cartCount.textContent = totalItems;\r\n            if (cartCountBadge) cartCountBadge.textContent = totalItems;\r\n        } catch (error) {\r\n            console.warn('Cart count update failed:', error);\r\n        }\r\n    }\r\n\r\n    // Update cart panel\r\n    function updateCartPanel() {\r\n        try {\r\n            const cartItemsContainer = document.getElementById('cartItems');\r\n            const cartSummary = document.getElementById('cartSummary');\r\n            const cartTotalElement = document.getElementById('cartTotal');\r\n\r\n            if (!cartItemsContainer) return;\r\n\r\n            if (cartItems.length === 0) {\r\n                cartItemsContainer.innerHTML = `\r\n                    <div class=\"empty-cart\">\r\n                        <i class=\"fas fa-shopping-basket\"></i>\r\n                        <p>Your cart is empty</p>\r\n                        <span>Add some products to get started</span>\r\n                    </div>\r\n                `;\r\n                if (cartSummary) cartSummary.style.display = 'none';\r\n            } else {\r\n                cartItemsContainer.innerHTML = cartItems.map((item, index) => `\r\n                    <div class=\"cart-item\">\r\n                        <div class=\"cart-item-image\">\r\n                            <img src=\"${item.image}\" alt=\"${item.name}\" />\r\n                        </div>\r\n                        <div class=\"cart-item-details\">\r\n                            <div class=\"cart-item-name\">${item.name}</div>\r\n                            <div class=\"cart-item-dimensions\">${item.length}m × ${item.width}m</div>\r\n                            <div class=\"cart-item-price\">KES ${item.total.toLocaleString()}</div>\r\n                        </div>\r\n                        <div class=\"cart-item-actions\">\r\n                            <div class=\"quantity-controls\">\r\n                                <button class=\"quantity-btn\" onclick=\"window.CartComponent.updateQuantity(${index}, ${item.quantity - 1})\">-</button>\r\n                                <span class=\"quantity-display\">${item.quantity}</span>\r\n                                <button class=\"quantity-btn\" onclick=\"window.CartComponent.updateQuantity(${index}, ${item.quantity + 1})\">+</button>\r\n                            </div>\r\n                            <button class=\"remove-item-btn\" onclick=\"window.CartComponent.remove(${index})\">\r\n                                <i class=\"fas fa-trash\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                `).join('');\r\n\r\n                if (cartSummary) {\r\n                    cartSummary.style.display = 'block';\r\n                    updateCartSummary();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.warn('Cart panel update failed:', error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Clear cart\r\n    function clearCart() {\r\n        cartItems = [];\r\n        cartTotal = 0;\r\n        saveCartToStorage();\r\n        updateCartDisplay();\r\n\r\n        // Also clear Cart state\r\n        if (window.CartState) {\r\n            window.CartState.clear();\r\n        }\r\n\r\n        showToast('Cart Cleared', 'All items have been removed from your cart', 'error');\r\n    }\r\n\r\n    // Checkout via WhatsApp\r\n    function checkoutViaWhatsApp() {\r\n        if (cartItems.length === 0) {\r\n            showToast('Empty Cart', 'Please add items to your cart before checkout', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Prepare cart data for WhatsApp\r\n            const cartData = {\r\n                customerName: 'Customer', // You can make this dynamic\r\n                customerEmail: 'customer@example.com', // You can make this dynamic\r\n                items: cartItems.map(item => ({\r\n                    product: {\r\n                        name: item.name\r\n                    },\r\n                    quantity: item.quantity,\r\n                    unitPrice: item.price,\r\n                    total: item.total\r\n                })),\r\n                total: cartTotal\r\n            };\r\n\r\n            // Send to WhatsApp\r\n            const success = window.WhatsAppService.sendOrderForm(cartData);\r\n\r\n            if (success) {\r\n                showToast('Checkout', 'WhatsApp will open with your order details. Please complete your purchase there.', 'success');\r\n                // Optionally clear cart after successful checkout\r\n                // clearCart();\r\n            } else {\r\n                showToast('Checkout Failed', 'Failed to open WhatsApp. Please try again.', 'error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Checkout error:', error);\r\n            showToast('Checkout Error', 'An error occurred during checkout. Please try again.', 'error');\r\n        }\r\n    }\r\n\r\n    // Show toast notification using unified service\r\n    function showToast(title, description, type = 'success') {\r\n        // Use the unified toast service if available\r\n        if (window.ToastService) {\r\n            window.ToastService.show(description || title, type);\r\n        } else {\r\n            // Fallback to old method if service not available\r\n            const toast = document.getElementById('toast');\r\n            if (!toast) return;\r\n\r\n            const toastMessage = toast.querySelector('.toast-message');\r\n            const toastIcon = toast.querySelector('.toast-icon i');\r\n\r\n            if (toastMessage) toastMessage.textContent = description || title;\r\n\r\n            // Set icon based on type\r\n            if (toastIcon) {\r\n                switch (type) {\r\n                    case 'success':\r\n                        toastIcon.className = 'fas fa-check-circle';\r\n                        break;\r\n                    case 'error':\r\n                        toastIcon.className = 'fas fa-exclamation-circle';\r\n                        break;\r\n                    case 'warning':\r\n                        toastIcon.className = 'fas fa-exclamation-triangle';\r\n                        break;\r\n                    case 'info':\r\n                        toastIcon.className = 'fas fa-info-circle';\r\n                        break;\r\n                    default:\r\n                        toastIcon.className = 'fas fa-check-circle';\r\n                }\r\n            }\r\n\r\n            toast.className = `toast ${type}`;\r\n            toast.classList.remove('hidden');\r\n            toast.classList.add('show');\r\n\r\n            // Auto-hide after 3 seconds\r\n            setTimeout(() => {\r\n                toast.classList.remove('show');\r\n                setTimeout(() => {\r\n                    toast.classList.add('hidden');\r\n                }, 300);\r\n            }, 3000);\r\n\r\n            // Add close button functionality\r\n            const closeBtn = toast.querySelector('.toast-close');\r\n            if (closeBtn) {\r\n                closeBtn.addEventListener('click', () => {\r\n                    toast.classList.remove('show');\r\n                    setTimeout(() => {\r\n                        toast.classList.add('hidden');\r\n                    }, 300);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Initialize discount and coupon buttons\r\n    function initDiscountCouponButtons() {\r\n        // Only load modals on products page\r\n        if (window.location.pathname.includes('products.html') ||\r\n            (window.location.pathname === '/' && window.location.hash === '#cart')) {\r\n\r\n            // Import modals dynamically to avoid circular dependencies\r\n            import('../../ui/discountModal.js').then(module => {\r\n                window.discountModal = module.discountModal;\r\n            });\r\n\r\n            import('../../ui/components/couponModal.js').then(module => {\r\n                window.couponModal = module.couponModal;\r\n            });\r\n\r\n            // Initialize checkout modal\r\n            import('../../ui/checkoutModal.js').then(module => {\r\n                window.checkoutModal = module.checkoutModal;\r\n                window.checkoutModal.init();\r\n            });\r\n        }\r\n    }\r\n\r\n    // Bind events\r\n    function bindEvents() {\r\n        try {\r\n            // Clear cart buttons\r\n            const clearCartBtn = document.getElementById('clearCartBtn');\r\n\r\n            if (clearCartBtn) {\r\n                clearCartBtn.addEventListener('click', clearCart);\r\n            }\r\n\r\n            // Checkout buttons\r\n            const submitOrderBtn = document.getElementById('submitOrderBtn');\r\n\r\n            if (submitOrderBtn) {\r\n                submitOrderBtn.addEventListener('click', () => {\r\n                    if (window.checkoutModal) {\r\n                        window.checkoutModal.open();\r\n                    } else {\r\n                        // Redirect to products page if checkout modal is not available\r\n                        window.location.href = '/products.html#cart';\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Discount and coupon buttons\r\n            const applyDiscountBtn = document.getElementById('applyDiscountBtn');\r\n            const enterCouponBtn = document.getElementById('enterCouponBtn');\r\n\r\n            if (applyDiscountBtn) {\r\n                applyDiscountBtn.addEventListener('click', () => {\r\n                    if (window.discountModal) {\r\n                        window.discountModal.open();\r\n                    } else {\r\n                        // Redirect to products page if discount modal is not available\r\n                        window.location.href = '/products.html#cart';\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (enterCouponBtn) {\r\n                enterCouponBtn.addEventListener('click', () => {\r\n                    if (window.couponModal) {\r\n                        window.couponModal.open();\r\n                    } else {\r\n                        // Redirect to products page if coupon modal is not available\r\n                        window.location.href = '/products.html#cart';\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.warn('Cart events binding failed:', error);\r\n        }\r\n    }\r\n\r\n    // Public API - Keep the old cart system for backward compatibility\r\n    window.CartComponent = {\r\n        init,\r\n        add: addItem,\r\n        remove: removeItem,\r\n        updateQuantity: updateItemQuantity,\r\n        clear: clearCart,\r\n        getItems: () => cartItems,\r\n        getTotal: () => cartTotal,\r\n        getCount: () => cartItems.reduce((total, item) => total + item.quantity, 0)\r\n    };\r\n\r\n\r\n\r\n    // Initialize when DOM is ready\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', init);\r\n    } else {\r\n        init();\r\n    }\r\n})();"],"file":"cart.437f89c5.js"}