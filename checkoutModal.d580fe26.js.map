{"version":3,"file":"checkoutModal.d580fe26.js","sources":["../src/ui/checkoutModal.js"],"sourcesContent":["// Checkout Modal Component\r\nexport const checkoutModal = {\r\n    modal: null,\r\n    isInitialized: false,\r\n\r\n    init() {\r\n        console.log('Checkout modal initialized');\r\n        this.isInitialized = true;\r\n    },\r\n\r\n    async open() {\r\n        await this.createModal();\r\n        this.showModal();\r\n        // Initialize step state\r\n        this.currentStep = 1;\r\n        this.totalSteps = 3;\r\n    },\r\n\r\n    close() {\r\n        this.hideModal();\r\n    },\r\n\r\n    async createModal() {\r\n        // Remove existing modal if any\r\n        const existingModal = document.getElementById('checkoutModal');\r\n        if (existingModal) {\r\n            existingModal.remove();\r\n        }\r\n\r\n        try {\r\n            // Use embedded HTML instead of fetching partial\r\n            const modalHTML = this.getModalHTML();\r\n            document.body.insertAdjacentHTML('beforeend', modalHTML);\r\n\r\n            // Initialize the modal\r\n            this.initializeModal();\r\n            this.bindEvents();\r\n            this.updateStepIndicator();\r\n            this.updateOrderSummary();\r\n\r\n        } catch (error) {\r\n            console.error('Error loading checkout modal:', error);\r\n            // Fallback to basic modal if partial fails to load\r\n            this.createFallbackModal();\r\n        }\r\n    },\r\n\r\n    createFallbackModal() {\r\n        const modalHTML = `\r\n            <div id=\"checkoutModal\" class=\"checkout-modal active\">\r\n                <div class=\"modal-overlay\"></div>\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">                        \r\n                        <button class=\"modal-close\" id=\"closeCheckoutModal\" aria-label=\"Close modal\">\r\n                            <i class=\"fas fa-times\"></i>\r\n                        <h2>Checkout</h2>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <p>Error loading checkout form. Please try again.</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn-secondary\" id=\"closeCheckoutModal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        document.body.insertAdjacentHTML('beforeend', modalHTML);\r\n        this.bindEvents();\r\n    },\r\n\r\n    initializeModal() {\r\n        // Initialize step state\r\n        this.currentStep = 1;\r\n        this.totalSteps = 3;\r\n\r\n        console.log('Modal initialized, currentStep:', this.currentStep);\r\n\r\n        // Show first step\r\n        this.showStep(1);\r\n\r\n        // Update button states\r\n        this.updateButtonStates();\r\n\r\n        // Populate order summary with cart data\r\n        this.populateOrderSummary();\r\n\r\n        // Debug: Check if back button exists\r\n        const backBtn = document.getElementById('backBtn');\r\n        console.log('Back button in initializeModal:', backBtn);\r\n        if (backBtn) {\r\n            console.log('Back button styles:', backBtn.style.cssText);\r\n            console.log('Back button computed styles:', window.getComputedStyle(backBtn));\r\n        }\r\n    },\r\n\r\n    showModal() {\r\n        const modal = document.getElementById('checkoutModal');\r\n        if (modal) {\r\n            modal.classList.add('active');\r\n            modal.removeAttribute('hidden');\r\n\r\n            // Initialize floating labels after modal is shown\r\n            setTimeout(() => {\r\n                this.initFloatingLabels();\r\n            }, 100);\r\n\r\n            // Focus on the first input\r\n            const nameInput = document.getElementById('customerName');\r\n            if (nameInput) {\r\n                nameInput.focus();\r\n            }\r\n        }\r\n    },\r\n\r\n    hideModal() {\r\n        const modal = document.getElementById('checkoutModal');\r\n        if (modal) {\r\n            modal.remove();\r\n        }\r\n    },\r\n\r\n    bindEvents() {\r\n        // Close button\r\n        const closeBtn = document.getElementById('closeCheckoutModal');\r\n        if (closeBtn) {\r\n            closeBtn.addEventListener('click', () => this.close());\r\n        }\r\n\r\n        // Back button\r\n        const backBtn = document.getElementById('backBtn');\r\n        if (backBtn) {\r\n            backBtn.addEventListener('click', () => this.previousStep());\r\n        }\r\n\r\n        // Next button\r\n        const nextBtn = document.getElementById('nextBtn');\r\n        if (nextBtn) {\r\n            nextBtn.addEventListener('click', () => this.nextStep());\r\n        }\r\n\r\n        // Send button\r\n        const sendBtn = document.getElementById('sendBtn');\r\n        if (sendBtn) {\r\n            sendBtn.addEventListener('click', () => this.sendOrder());\r\n        }\r\n\r\n        // Step indicator clicks\r\n        const stepButtons = document.querySelectorAll('.md3-stepper .step');\r\n        stepButtons.forEach((step, index) => {\r\n            step.addEventListener('click', () => {\r\n                const stepNumber = index + 1;\r\n                if (stepNumber <= this.currentStep) {\r\n                    this.showStep(stepNumber);\r\n                }\r\n            });\r\n        });\r\n\r\n        // Close on overlay click\r\n        const modal = document.getElementById('checkoutModal');\r\n        const backdrop = document.querySelector('.md3-modal__backdrop');\r\n        if (modal) {\r\n            modal.addEventListener('click', (e) => {\r\n                if (e.target === modal || e.target === backdrop) {\r\n                    this.close();\r\n                }\r\n            });\r\n        }\r\n        if (backdrop) {\r\n            backdrop.addEventListener('click', () => this.close());\r\n        }\r\n\r\n        // Form submission\r\n        const form = document.getElementById('customerDetailsForm');\r\n        if (form) {\r\n            form.addEventListener('submit', (e) => {\r\n                e.preventDefault();\r\n                this.nextStep();\r\n            });\r\n        }\r\n\r\n        // Phone detection button\r\n        const detectPhoneBtn = document.getElementById('detectPhoneBtn');\r\n        if (detectPhoneBtn) {\r\n            detectPhoneBtn.addEventListener('click', () => this.detectPhoneFromContacts());\r\n        }\r\n\r\n        // Location detection button\r\n        const detectLocationBtn = document.getElementById('detectLocationBtn');\r\n        if (detectLocationBtn) {\r\n            detectLocationBtn.addEventListener('click', () => this.detectLocationFromGPS());\r\n        }\r\n\r\n        // Load saved details if available\r\n        this.loadSavedDetails();\r\n\r\n        // Initialize floating labels\r\n        this.initFloatingLabels();\r\n    },\r\n\r\n    populateOrderSummary() {\r\n        // Get cart data\r\n        const cartItems = window.CartComponent ? window.CartComponent.getItems() : [];\r\n        const subtotal = window.CartComponent ? window.CartComponent.getTotal() : 0;\r\n        const delivery = 500; // Fixed delivery cost\r\n        const total = subtotal + delivery;\r\n\r\n        // Update summary elements\r\n        const summaryName = document.getElementById('summaryName');\r\n        const summaryPhone = document.getElementById('summaryPhone');\r\n        const summaryLocation = document.getElementById('summaryLocation');\r\n        const totalArea = document.getElementById('totalArea');\r\n        const summarySubtotal = document.getElementById('summarySubtotal');\r\n        const summaryDiscount = document.getElementById('summaryDiscount');\r\n        const summaryTotal = document.getElementById('summaryTotal');\r\n\r\n        // Update contact summary (will be populated when user fills form)\r\n        if (summaryName) summaryName.textContent = '';\r\n        if (summaryPhone) summaryPhone.textContent = '';\r\n        if (summaryLocation) summaryLocation.textContent = '';\r\n\r\n        // Update order summary\r\n        if (totalArea) totalArea.textContent = '0 mÂ²'; // Calculate from cart items\r\n        if (summarySubtotal) summarySubtotal.textContent = `KES ${subtotal.toLocaleString()}`;\r\n        if (summaryDiscount) summaryDiscount.textContent = '-KES 0';\r\n        if (summaryTotal) summaryTotal.textContent = `KES ${total.toLocaleString()}`;\r\n\r\n        // Populate order items list\r\n        const orderItemsList = document.getElementById('orderItemsList');\r\n        if (orderItemsList && cartItems.length > 0) {\r\n            orderItemsList.innerHTML = cartItems.map(item => `\r\n                <div class=\"order-item\">\r\n                    <span class=\"item-name\">${item.name}</span>\r\n                    <span class=\"item-quantity\">${item.quantity} units</span>\r\n                    <span class=\"item-price\">KES ${item.price.toLocaleString()}</span>\r\n                </div>\r\n            `).join('');\r\n        }\r\n    },\r\n\r\n    updateOrderSummary() {\r\n        // Get cart total from the global cart state\r\n        let subtotal = 0;\r\n        if (window.CartComponent) {\r\n            subtotal = window.CartComponent.getTotal();\r\n        }\r\n\r\n        const delivery = 500; // Fixed delivery cost\r\n        const total = subtotal + delivery;\r\n\r\n        // Update the summary display\r\n        const subtotalEl = document.getElementById('summarySubtotal');\r\n        const deliveryEl = document.getElementById('summaryDelivery');\r\n        const totalEl = document.getElementById('summaryTotal');\r\n\r\n        if (subtotalEl) subtotalEl.textContent = `KES ${subtotal.toLocaleString()}`;\r\n        if (deliveryEl) deliveryEl.textContent = `KES ${delivery.toLocaleString()}`;\r\n        if (totalEl) totalEl.textContent = `KES ${total.toLocaleString()}`;\r\n    },\r\n\r\n    sendOrder() {\r\n        // Get customer details from step 1\r\n        const name = document.getElementById('customerName') ? document.getElementById('customerName').value : '';\r\n        const phone = document.getElementById('customerPhone') ? document.getElementById('customerPhone').value : '';\r\n        const location = document.getElementById('customerLocation') ? document.getElementById('customerLocation').value : '';\r\n\r\n        // Validate required fields\r\n        if (!name || !phone || !location) {\r\n            this.showError('Please fill in all required fields in step 1');\r\n            this.showStep(1);\r\n            return;\r\n        }\r\n\r\n        // Generate WhatsApp message\r\n        const message = this.generateWhatsAppMessage(name, phone, location);\r\n\r\n        // Open WhatsApp with the message\r\n        const whatsappUrl = `https://wa.me/254743375997?text=${encodeURIComponent(message)}`;\r\n        window.open(whatsappUrl, '_blank');\r\n\r\n        // Show success message\r\n        this.showSuccess('Order sent to WhatsApp! Please complete your order there.');\r\n\r\n        // Close modal after delay\r\n        setTimeout(() => {\r\n            this.close();\r\n        }, 3000);\r\n    },\r\n\r\n    generateWhatsAppMessage(name, phone, location) {\r\n        const cartItems = window.CartComponent ? window.CartComponent.getItems() : [];\r\n        const total = window.CartComponent ? window.CartComponent.getTotal() : 0;\r\n\r\n        let message = `ð  *TURF GRASS ORDER*\\n\\n`;\r\n        message += `*Customer Details:*\\n`;\r\n        message += `Name: ${name}\\n`;\r\n        message += `Phone: +254${phone}\\n`;\r\n        message += `Location: ${location}\\n\\n`;\r\n\r\n        message += `*Order Items:*\\n`;\r\n        cartItems.forEach(item => {\r\n            message += `â¢ ${item.name} - ${item.quantity} units - KES ${item.price.toLocaleString()}\\n`;\r\n        });\r\n\r\n        message += `\\n*Total: KES ${total.toLocaleString()}*\\n\\n`;\r\n        message += `Please confirm this order and provide delivery details.`;\r\n\r\n        return message;\r\n    },\r\n\r\n    placeOrder() {\r\n        const form = document.getElementById('checkoutForm');\r\n        if (!form) return;\r\n\r\n        const orderData = {\r\n            name: document.getElementById('checkoutName') ? document.getElementById('checkoutName').value : '',\r\n            email: document.getElementById('checkoutEmail') ? document.getElementById('checkoutEmail').value : '',\r\n            phone: document.getElementById('checkoutPhone') ? document.getElementById('checkoutPhone').value : '',\r\n            location: document.getElementById('checkoutLocation') ? document.getElementById('checkoutLocation').value : '',\r\n            address: document.getElementById('checkoutAddress') ? document.getElementById('checkoutAddress').value : '',\r\n            city: document.getElementById('checkoutCity') ? document.getElementById('checkoutCity').value : '',\r\n            saveDetails: document.getElementById('saveDetails') ? document.getElementById('saveDetails').checked : false,\r\n            allowPhoneContact: document.getElementById('allowPhoneContact') ? document.getElementById('allowPhoneContact').checked : false,\r\n            items: window.CartComponent ? window.CartComponent.getItems() : [],\r\n            total: window.CartComponent ? window.CartComponent.getTotal() : 0\r\n        };\r\n\r\n        // Validate required fields\r\n        if (!orderData.name || !orderData.email || !orderData.phone || !orderData.location || !orderData.address || !orderData.city) {\r\n            this.showError('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        // Save details if checkbox is checked\r\n        if (orderData.saveDetails) {\r\n            this.saveDetails();\r\n        }\r\n\r\n        // Here you would typically send the order to your backend\r\n        // For now, we'll just show a success message\r\n        const contactMethod = orderData.allowPhoneContact ? 'phone call' : 'email';\r\n        this.showSuccess(`Order placed successfully! We will contact you via ${contactMethod} soon.`);\r\n\r\n        // Clear cart\r\n        if (window.CartComponent) {\r\n            window.CartComponent.clear();\r\n        }\r\n\r\n        // Close the modal after a short delay\r\n        setTimeout(() => {\r\n            this.close();\r\n        }, 2000);\r\n    },\r\n\r\n    showError(message) {\r\n        // You can implement a toast notification here\r\n        console.error('Checkout Error:', message);\r\n        alert(message);\r\n    },\r\n\r\n    showSuccess(message) {\r\n        // You can implement a toast notification here\r\n        console.log('Checkout Success:', message);\r\n        alert(message);\r\n    },\r\n\r\n    async detectPhoneFromContacts() {\r\n        const detectBtn = document.getElementById('detectPhoneBtn');\r\n        const phoneInput = document.getElementById('customerPhone');\r\n\r\n        if (!detectBtn || !phoneInput) return;\r\n\r\n        // Set loading state\r\n        detectBtn.classList.add('loading');\r\n        detectBtn.innerHTML = '<i class=\"fas fa-spinner\"></i><span>Detecting...</span>';\r\n        detectBtn.disabled = true;\r\n\r\n        try {\r\n            // Check if the Contacts API is available\r\n            if ('contacts' in navigator && 'select' in navigator.contacts) {\r\n                const contacts = await navigator.contacts.select(['name', 'tel'], {\r\n                    multiple: false\r\n                });\r\n\r\n                if (contacts && contacts.length > 0) {\r\n                    const contact = contacts[0];\r\n                    const phoneNumber = contact.tel && contact.tel.length > 0 ? contact.tel[0] : null;\r\n\r\n                    if (phoneNumber) {\r\n                        // Extract just the number part (remove country code if it's +254)\r\n                        let cleanNumber = phoneNumber.replace(/\\D/g, '');\r\n                        if (cleanNumber.startsWith('254')) {\r\n                            cleanNumber = cleanNumber.substring(3);\r\n                        }\r\n\r\n                        phoneInput.value = cleanNumber;\r\n\r\n                        // Set success state\r\n                        detectBtn.classList.remove('loading');\r\n                        detectBtn.classList.add('success');\r\n                        detectBtn.innerHTML = '<i class=\"fas fa-check\"></i><span>Detected</span>';\r\n\r\n                        setTimeout(() => {\r\n                            detectBtn.classList.remove('success');\r\n                            detectBtn.innerHTML = '<i class=\"fas fa-address-book\"></i><span>Detect from Contacts</span>';\r\n                            detectBtn.disabled = false;\r\n                        }, 2000);\r\n\r\n                        this.showSuccess('Phone number detected from contacts!');\r\n                    } else {\r\n                        throw new Error('No phone number found in selected contact');\r\n                    }\r\n                } else {\r\n                    throw new Error('No contact selected');\r\n                }\r\n            } else {\r\n                // Fallback: Show a prompt to manually enter or copy from contacts\r\n                const manualNumber = prompt('Please enter your phone number or copy it from your contacts:');\r\n                if (manualNumber) {\r\n                    phoneInput.value = manualNumber.replace(/\\D/g, '');\r\n                    detectBtn.classList.remove('loading');\r\n                    detectBtn.classList.add('success');\r\n                    detectBtn.innerHTML = '<i class=\"fas fa-check\"></i><span>Entered</span>';\r\n\r\n                    setTimeout(() => {\r\n                        detectBtn.classList.remove('success');\r\n                        detectBtn.innerHTML = '<i class=\"fas fa-address-book\"></i><span>Detect from Contacts</span>';\r\n                        detectBtn.disabled = false;\r\n                    }, 2000);\r\n                } else {\r\n                    throw new Error('No phone number entered');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error detecting phone:', error);\r\n\r\n            // Set error state\r\n            detectBtn.classList.remove('loading');\r\n            detectBtn.classList.add('error');\r\n            detectBtn.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i><span>Failed</span>';\r\n\r\n            setTimeout(() => {\r\n                detectBtn.classList.remove('error');\r\n                detectBtn.innerHTML = '<i class=\"fas fa-address-book\"></i><span>Detect from Contacts</span>';\r\n                detectBtn.disabled = false;\r\n            }, 2000);\r\n\r\n            this.showError('Could not detect phone number. Please enter it manually.');\r\n        }\r\n    },\r\n\r\n    async detectLocationFromGPS() {\r\n        const detectBtn = document.getElementById('detectLocationBtn');\r\n        const locationInput = document.getElementById('customerLocation');\r\n\r\n        if (!detectBtn || !locationInput) return;\r\n\r\n        // Set loading state\r\n        detectBtn.classList.add('loading');\r\n        detectBtn.innerHTML = '<i class=\"fas fa-spinner\"></i><span>Detecting...</span>';\r\n        detectBtn.disabled = true;\r\n\r\n        try {\r\n            // Check if geolocation is available\r\n            if ('geolocation' in navigator) {\r\n                const position = await new Promise((resolve, reject) => {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n                        enableHighAccuracy: true,\r\n                        timeout: 10000,\r\n                        maximumAge: 60000\r\n                    });\r\n                });\r\n\r\n                const {\r\n                    latitude,\r\n                    longitude\r\n                } = position.coords;\r\n\r\n                // Use reverse geocoding to get address\r\n                try {\r\n                    const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1`);\r\n                    const data = await response.json();\r\n\r\n                    if (data.display_name) {\r\n                        locationInput.value = data.display_name;\r\n\r\n                        // Set success state\r\n                        detectBtn.classList.remove('loading');\r\n                        detectBtn.classList.add('success');\r\n                        detectBtn.innerHTML = '<i class=\"fas fa-check\"></i><span>Detected</span>';\r\n\r\n                        setTimeout(() => {\r\n                            detectBtn.classList.remove('success');\r\n                            detectBtn.innerHTML = '<i class=\"fas fa-map-marker-alt\"></i><span>Use GPS</span>';\r\n                            detectBtn.disabled = false;\r\n                        }, 2000);\r\n\r\n                        this.showSuccess('Location detected from GPS!');\r\n                    } else {\r\n                        // Fallback: Use coordinates\r\n                        locationInput.value = `${latitude.toFixed(6)}, ${longitude.toFixed(6)}`;\r\n                        detectBtn.classList.remove('loading');\r\n                        detectBtn.classList.add('success');\r\n                        detectBtn.innerHTML = '<i class=\"fas fa-check\"></i><span>Detected</span>';\r\n\r\n                        setTimeout(() => {\r\n                            detectBtn.classList.remove('success');\r\n                            detectBtn.innerHTML = '<i class=\"fas fa-map-marker-alt\"></i><span>Use GPS</span>';\r\n                            detectBtn.disabled = false;\r\n                        }, 2000);\r\n                    }\r\n                } catch (geocodingError) {\r\n                    // Fallback: Use coordinates if geocoding fails\r\n                    locationInput.value = `${latitude.toFixed(6)}, ${longitude.toFixed(6)}`;\r\n                    detectBtn.classList.remove('loading');\r\n                    detectBtn.classList.add('success');\r\n                    detectBtn.innerHTML = '<i class=\"fas fa-check\"></i><span>Detected</span>';\r\n\r\n                    setTimeout(() => {\r\n                        detectBtn.classList.remove('success');\r\n                        detectBtn.innerHTML = '<i class=\"fas fa-map-marker-alt\"></i><span>Use GPS</span>';\r\n                        detectBtn.disabled = false;\r\n                    }, 2000);\r\n                }\r\n            } else {\r\n                throw new Error('Geolocation not supported');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error detecting location:', error);\r\n\r\n            // Set error state\r\n            detectBtn.classList.remove('loading');\r\n            detectBtn.classList.add('error');\r\n            detectBtn.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i><span>Failed</span>';\r\n\r\n            setTimeout(() => {\r\n                detectBtn.classList.remove('error');\r\n                detectBtn.innerHTML = '<i class=\"fas fa-map-marker-alt\"></i><span>Use GPS</span>';\r\n                detectBtn.disabled = false;\r\n            }, 2000);\r\n\r\n            this.showError('Could not detect location. Please enter it manually.');\r\n        }\r\n    },\r\n\r\n    loadSavedDetails() {\r\n        try {\r\n            const savedDetails = localStorage.getItem('checkoutDetails');\r\n            if (savedDetails) {\r\n                const details = JSON.parse(savedDetails);\r\n\r\n                if (details.name) {\r\n                    const nameInput = document.getElementById('customerName');\r\n                    if (nameInput) nameInput.value = details.name;\r\n                }\r\n                if (details.phone) {\r\n                    const phoneInput = document.getElementById('customerPhone');\r\n                    if (phoneInput) phoneInput.value = details.phone;\r\n                }\r\n                if (details.email) {\r\n                    const emailInput = document.getElementById('customerEmail');\r\n                    if (emailInput) emailInput.value = details.email;\r\n                }\r\n                if (details.location) {\r\n                    const locationInput = document.getElementById('customerLocation');\r\n                    if (locationInput) locationInput.value = details.location;\r\n                }\r\n\r\n                // Check the remember details checkbox if we loaded saved data\r\n                const rememberDetailsCheckbox = document.getElementById('rememberDetails');\r\n                if (rememberDetailsCheckbox) {\r\n                    rememberDetailsCheckbox.checked = true;\r\n                }\r\n\r\n                // Update floating labels for loaded values\r\n                setTimeout(() => {\r\n                    this.initFloatingLabels();\r\n                }, 50);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading saved details:', error);\r\n        }\r\n    },\r\n\r\n    saveDetails() {\r\n        const rememberDetailsCheckbox = document.getElementById('rememberDetails');\r\n        if (rememberDetailsCheckbox && rememberDetailsCheckbox.checked) {\r\n            try {\r\n                const details = {\r\n                    name: document.getElementById('customerName') ? document.getElementById('customerName').value : '',\r\n                    phone: document.getElementById('customerPhone') ? document.getElementById('customerPhone').value : '',\r\n                    email: document.getElementById('customerEmail') ? document.getElementById('customerEmail').value : '',\r\n                    location: document.getElementById('customerLocation') ? document.getElementById('customerLocation').value : ''\r\n                };\r\n\r\n                localStorage.setItem('checkoutDetails', JSON.stringify(details));\r\n                console.log('Details saved to localStorage');\r\n            } catch (error) {\r\n                console.error('Error saving details:', error);\r\n            }\r\n        }\r\n    },\r\n\r\n    // Step navigation methods\r\n    showStep(stepNumber) {\r\n        console.log('showStep called with stepNumber:', stepNumber);\r\n\r\n        // Hide all steps\r\n        const steps = document.querySelectorAll('.checkout-step');\r\n        steps.forEach(step => step.classList.remove('active'));\r\n\r\n        // Show current step\r\n        const currentStep = document.getElementById(`step${stepNumber}`);\r\n        if (currentStep) {\r\n            currentStep.classList.add('active');\r\n        }\r\n\r\n        this.currentStep = stepNumber;\r\n        console.log('Current step updated to:', this.currentStep);\r\n\r\n        this.updateStepIndicator();\r\n        this.updateButtonStates();\r\n\r\n        // Populate summary data when moving to step 2\r\n        if (stepNumber === 2) {\r\n            this.populateSummaryData();\r\n        }\r\n\r\n        // Populate message preview when moving to step 3\r\n        if (stepNumber === 3) {\r\n            this.populateMessagePreview();\r\n        }\r\n    },\r\n\r\n    populateSummaryData() {\r\n        // Get form data\r\n        const name = document.getElementById('customerName') ? document.getElementById('customerName').value : '';\r\n        const phone = document.getElementById('customerPhone') ? document.getElementById('customerPhone').value : '';\r\n        const location = document.getElementById('customerLocation') ? document.getElementById('customerLocation').value : '';\r\n\r\n        // Update summary elements\r\n        const summaryName = document.getElementById('summaryName');\r\n        const summaryPhone = document.getElementById('summaryPhone');\r\n        const summaryLocation = document.getElementById('summaryLocation');\r\n\r\n        if (summaryName) summaryName.textContent = name || 'Not provided';\r\n        if (summaryPhone) summaryPhone.textContent = phone ? `+254${phone}` : 'Not provided';\r\n        if (summaryLocation) summaryLocation.textContent = location || 'Not provided';\r\n    },\r\n\r\n    populateMessagePreview() {\r\n        // Get customer details\r\n        const name = document.getElementById('customerName') ? document.getElementById('customerName').value : '';\r\n        const phone = document.getElementById('customerPhone') ? document.getElementById('customerPhone').value : '';\r\n        const location = document.getElementById('customerLocation') ? document.getElementById('customerLocation').value : '';\r\n\r\n        // Generate message\r\n        const message = this.generateWhatsAppMessage(name, phone, location);\r\n\r\n        // Update message preview\r\n        const messagePreview = document.getElementById('messagePreview');\r\n        if (messagePreview) {\r\n            messagePreview.textContent = message;\r\n        }\r\n    },\r\n\r\n    nextStep() {\r\n        if (this.currentStep < this.totalSteps) {\r\n            this.showStep(this.currentStep + 1);\r\n        }\r\n    },\r\n\r\n    previousStep() {\r\n        if (this.currentStep > 1) {\r\n            this.showStep(this.currentStep - 1);\r\n        }\r\n    },\r\n\r\n    updateStepIndicator() {\r\n        const steps = document.querySelectorAll('.md3-stepper .step');\r\n        const rails = document.querySelectorAll('.md3-stepper .rail');\r\n\r\n        console.log('Updating step indicator. Current step:', this.currentStep);\r\n        console.log('Found steps:', steps.length, 'Found rails:', rails.length);\r\n\r\n        steps.forEach((step, index) => {\r\n            const stepNumber = index + 1;\r\n            step.classList.remove('is-active', 'completed');\r\n\r\n            if (stepNumber === this.currentStep) {\r\n                step.classList.add('is-active');\r\n                console.log(`Step ${stepNumber} is now active`);\r\n            } else if (stepNumber < this.currentStep) {\r\n                step.classList.add('completed');\r\n                console.log(`Step ${stepNumber} is now completed`);\r\n            }\r\n        });\r\n\r\n        // Update rail filling\r\n        rails.forEach((rail, index) => {\r\n            rail.classList.remove('completed', 'active');\r\n            console.log(`Rail ${index + 1} classes removed`);\r\n\r\n            if (index < this.currentStep - 1) {\r\n                // Rail is fully completed\r\n                rail.classList.add('completed');\r\n                console.log(`Rail ${index + 1} is now completed`);\r\n            } else if (index === this.currentStep - 1) {\r\n                // Rail is partially filled (current step)\r\n                rail.classList.add('active');\r\n                console.log(`Rail ${index + 1} is now active (50% filled)`);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateButtonStates() {\r\n        const backBtn = document.getElementById('backBtn');\r\n        const nextBtn = document.getElementById('nextBtn');\r\n        const sendBtn = document.getElementById('sendBtn');\r\n\r\n        // Debug logging\r\n        console.log('updateButtonStates called, currentStep:', this.currentStep);\r\n        console.log('backBtn found:', !!backBtn);\r\n\r\n        // Show/hide back button (now in header)\r\n        if (backBtn) {\r\n            // Always show back button - it can close the modal\r\n            backBtn.style.display = 'grid';\r\n            console.log('Back button should be visible');\r\n        } else {\r\n            console.log('Back button not found in DOM');\r\n        }\r\n\r\n        // Update next button text\r\n        if (nextBtn) {\r\n            if (this.currentStep === 1) {\r\n                nextBtn.innerHTML = 'Review Order <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M5 12h14M13 5l7 7-7 7\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"/></svg>';\r\n            } else if (this.currentStep === 2) {\r\n                nextBtn.innerHTML = 'Send Order <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M5 12h14M13 5l7 7-7 7\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"/></svg>';\r\n            }\r\n        }\r\n\r\n        // Show/hide send button\r\n        if (sendBtn) {\r\n            if (this.currentStep === 3) {\r\n                sendBtn.style.display = 'inline-flex';\r\n                if (nextBtn) nextBtn.style.display = 'none';\r\n            } else {\r\n                sendBtn.style.display = 'none';\r\n                if (nextBtn) nextBtn.style.display = 'inline-flex';\r\n            }\r\n        }\r\n    },\r\n\r\n    initFloatingLabels() {\r\n        // Get all Material Design 3 input fields\r\n        const inputs = document.querySelectorAll('.md3-field input');\r\n\r\n        console.log('Initializing floating labels for', inputs.length, 'inputs');\r\n\r\n        inputs.forEach((input, index) => {\r\n            // Ensure placeholder is set to a single space for proper floating label behavior\r\n            if (!input.placeholder || input.placeholder === '') {\r\n                input.placeholder = ' ';\r\n            }\r\n\r\n            // Remove existing event listeners to prevent duplicates\r\n            input.removeEventListener('input', this.updateFloatingLabel.bind(this, input));\r\n            input.removeEventListener('focus', this.updateFloatingLabel.bind(this, input));\r\n            input.removeEventListener('blur', this.updateFloatingLabel.bind(this, input));\r\n\r\n            // Add event listeners for proper floating label behavior\r\n            input.addEventListener('input', () => {\r\n                this.updateFloatingLabel(input);\r\n            });\r\n\r\n            input.addEventListener('focus', () => {\r\n                this.updateFloatingLabel(input);\r\n            });\r\n\r\n            input.addEventListener('blur', () => {\r\n                this.updateFloatingLabel(input);\r\n            });\r\n\r\n            // Initialize floating label state\r\n            this.updateFloatingLabel(input);\r\n\r\n            console.log(`Input ${index + 1}:`, input.id || input.name, 'initialized');\r\n        });\r\n    },\r\n\r\n    updateFloatingLabel(input) {\r\n        const label = input.parentElement.querySelector('.md3-label');\r\n        if (!label) {\r\n            console.warn('No label found for input:', input.id || input.name);\r\n            return;\r\n        }\r\n\r\n        const hasValue = input.value.trim().length > 0;\r\n        const isFocused = document.activeElement === input;\r\n\r\n        // Update input classes\r\n        if (hasValue) {\r\n            input.classList.add('has-value');\r\n        } else {\r\n            input.classList.remove('has-value');\r\n        }\r\n\r\n        // Update label classes\r\n        if (hasValue || isFocused) {\r\n            label.classList.add('floating');\r\n        } else {\r\n            label.classList.remove('floating');\r\n        }\r\n\r\n        // Hide placeholder when input has value or is focused\r\n        if (hasValue || isFocused) {\r\n            input.style.setProperty('--placeholder-opacity', '0');\r\n        } else {\r\n            input.style.removeProperty('--placeholder-opacity');\r\n        }\r\n\r\n        console.log(`Updated floating label for ${input.id || input.name}:`, {\r\n            hasValue,\r\n            isFocused,\r\n            hasValueClass: input.classList.contains('has-value'),\r\n            hasFloatingClass: label.classList.contains('floating')\r\n        });\r\n    },\r\n\r\n    getModalHTML() {\r\n        return `\r\n<!-- Checkout modal partial -->\r\n<div id=\"checkoutModal\" class=\"md3-modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"checkout-title\" aria-describedby=\"checkout-desc\" hidden>\r\n    <!-- Backdrop -->\r\n    <div class=\"md3-modal__backdrop\" data-close-checkout></div>\r\n\r\n    <!-- Dialog -->\r\n    <div class=\"md3-modal__dialog\" role=\"document\">\r\n        <!-- Top app-bar / Surface container high (MD3) -->\r\n        <header class=\"md3-modal__header\">\r\n            <button class=\"icon-btn\" id=\"backBtn\" aria-label=\"Back\" data-close-checkout>\r\n                <!-- MD3 back arrow -->\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M15 18l-6-6 6-6\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\r\n                </svg>\r\n            </button>\r\n            <div class=\"md3-modal__header-text\">\r\n                <h2 id=\"checkout-title\" class=\"headline\">Checkout</h2>\r\n                <p id=\"checkout-desc\" class=\"subtitle\">Complete your details and confirm order</p>\r\n            </div>\r\n            <button class=\"icon-btn danger\" id=\"closeCheckoutModal\" aria-label=\"Close\" data-close-checkout>\r\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M18 6L6 18M6 6l12 12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\r\n                </svg>\r\n            </button>\r\n        </header>\r\n\r\n        <!-- Stepper (MD3 Segmented progress) -->\r\n        <div class=\"md3-stepper\" aria-label=\"Checkout steps\">\r\n            <div class=\"step is-active\" data-step=\"1\">\r\n                <span class=\"dot\">1</span>\r\n                <span class=\"label\">Details</span>\r\n            </div>\r\n            <div class=\"rail\"></div>\r\n            <div class=\"step\" data-step=\"2\">\r\n                <span class=\"dot\">2</span>\r\n                <span class=\"label\">Review</span>\r\n            </div>\r\n            <div class=\"rail\"></div>\r\n            <div class=\"step\" data-step=\"3\">\r\n                <span class=\"dot\">3</span>\r\n                <span class=\"label\">Send</span>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Content: Glass surface container + form -->\r\n        <div class=\"md3-modal__body\">\r\n            <!-- Step 1: Customer Details -->\r\n            <section id=\"step1\" class=\"section checkout-step active\">\r\n                <h3 class=\"section-title\">Your Details</h3>\r\n\r\n                <!-- Name (MD3 filled text field) -->\r\n                <label class=\"md3-field filled\">\r\n                    <span class=\"md3-label\">Name</span>\r\n                    <input type=\"text\" inputmode=\"text\" placeholder=\" \" id=\"customerName\" autocomplete=\"name\" />\r\n                    <span class=\"md3-support\"></span>\r\n                </label>\r\n\r\n                <!-- Phone (prefix + input) -->\r\n                <div class=\"md3-field-group\">\r\n                    <label class=\"md3-prefix\">\r\n                        <span class=\"flag\">ð°ðª</span>\r\n                        <span class=\"code\">+254</span>\r\n                    </label>\r\n                    <label class=\"md3-field filled flex-1\">\r\n                        <span class=\"md3-label\">Phone</span>\r\n                        <input type=\"tel\" inputmode=\"tel\" placeholder=\" \" id=\"customerPhone\" autocomplete=\"tel\" />\r\n                    </label>\r\n                </div>\r\n\r\n                <button class=\"btn btn-elevated detect\" id=\"detectPhoneBtn\">Detect</button>\r\n\r\n                <!-- Location -->\r\n                <label class=\"md3-field filled\">\r\n                    <span class=\"md3-label\">Location</span>\r\n                    <input type=\"text\" inputmode=\"text\" placeholder=\" \" id=\"customerLocation\" autocomplete=\"address-line1 country-name\" />\r\n                    <span class=\"md3-support\"></span>\r\n                </label>\r\n\r\n                <button class=\"btn btn-elevated detect\" id=\"detectLocationBtn\">Detect</button>\r\n\r\n                <label class=\"md3-checkbox\">\r\n                    <input type=\"checkbox\" id=\"rememberDetails\" checked />\r\n                    <span class=\"box\"></span>\r\n                    <span class=\"label\">Remember my details</span>\r\n                </label>\r\n            </section>\r\n\r\n            <!-- Step 2: Order Summary -->\r\n            <section id=\"step2\" class=\"section checkout-step\">\r\n                <h3 class=\"section-title\">Review Order</h3>\r\n\r\n                <div class=\"contact-summary\">\r\n                    <h4>Contact Information</h4>\r\n                    <div class=\"contact-details\">\r\n                        <div class=\"contact-item\">\r\n                            <span class=\"label\">Name:</span>\r\n                            <span id=\"summaryName\" class=\"value\"></span>\r\n                        </div>\r\n                        <div class=\"contact-item\">\r\n                            <span class=\"label\">Phone:</span>\r\n                            <span id=\"summaryPhone\" class=\"value\"></span>\r\n                        </div>\r\n                        <div class=\"contact-item\">\r\n                            <span class=\"label\">Location:</span>\r\n                            <span id=\"summaryLocation\" class=\"value\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"order-summary\">\r\n                    <h4>Order Items</h4>\r\n                    <div id=\"orderItems\" class=\"order-items\">\r\n                        <!-- Order items will be populated here -->\r\n                    </div>\r\n                    <div class=\"order-total\">\r\n                        <span class=\"label\">Total:</span>\r\n                        <span id=\"orderTotal\" class=\"value\"></span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <!-- Step 3: Confirmation -->\r\n            <section id=\"step3\" class=\"section checkout-step\">\r\n                <h3 class=\"section-title\">Confirm Order</h3>\r\n                <p>Your order is ready to be sent via WhatsApp. Click the button below to proceed.</p>\r\n            </section>\r\n        </div>\r\n\r\n        <!-- Footer -->\r\n        <footer class=\"md3-modal__footer\">\r\n            <button class=\"btn btn-secondary\" id=\"backBtn\" style=\"display: none;\">Back</button>\r\n            <button class=\"btn btn-cta\" id=\"nextBtn\">\r\n                Review Order <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M5 12h14M13 5l7 7-7 7\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                </svg>\r\n            </button>\r\n            <button class=\"btn btn-cta\" id=\"sendBtn\" style=\"display: none;\">\r\n                Send Order <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path d=\"M5 12h14M13 5l7 7-7 7\" fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\"/>\r\n                </svg>\r\n            </button>\r\n        </footer>\r\n    </div>\r\n</div>`;\r\n    },\r\n\r\n    // Get the base path for GitHub Pages deployment\r\n    getBasePath() {\r\n        // Check if we're on GitHub Pages (has base path)\r\n        const pathname = window.location.pathname;\r\n        if (pathname.includes('/Eastleigh_Turf_Grass/')) {\r\n            return '/Eastleigh_Turf_Grass';\r\n        }\r\n        // For local development or root deployment\r\n        return '';\r\n    }\r\n};"],"names":["checkoutModal","modal","isInitialized","init","console","log","this","open","__async","createModal","showModal","currentStep","totalSteps","close","hideModal","existingModal","document","getElementById","remove","modalHTML","getModalHTML","body","insertAdjacentHTML","initializeModal","bindEvents","updateStepIndicator","updateOrderSummary","error","createFallbackModal","showStep","updateButtonStates","populateOrderSummary","backBtn","style","cssText","window","getComputedStyle","classList","add","removeAttribute","setTimeout","initFloatingLabels","nameInput","focus","closeBtn","addEventListener","previousStep","nextBtn","nextStep","sendBtn","sendOrder","querySelectorAll","forEach","step","index","stepNumber","backdrop","querySelector","e","target","form","preventDefault","detectPhoneBtn","detectPhoneFromContacts","detectLocationBtn","detectLocationFromGPS","loadSavedDetails","cartItems","CartComponent","getItems","subtotal","getTotal","total","summaryName","summaryPhone","summaryLocation","totalArea","summarySubtotal","summaryDiscount","summaryTotal","textContent","concat","toLocaleString","orderItemsList","length","innerHTML","map","item","name","quantity","price","join","subtotalEl","deliveryEl","totalEl","value","phone","location","showError","message","generateWhatsAppMessage","whatsappUrl","encodeURIComponent","showSuccess","placeOrder","orderData","checked","saveDetails","contactMethod","clear","alert","detectBtn","phoneInput","disabled","navigator","contacts","select","multiple","Error","contact","phoneNumber","tel","cleanNumber","replace","startsWith","substring","manualNumber","prompt","locationInput","position","Promise","resolve","reject","geolocation","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","coords","response","fetch","data","json","display_name","toFixed","geocodingError","savedDetails","localStorage","getItem","details","JSON","parse","email","emailInput","rememberDetailsCheckbox","setItem","stringify","populateSummaryData","populateMessagePreview","messagePreview","steps","rails","rail","display","inputs","input","placeholder","removeEventListener","updateFloatingLabel","bind","id","label","parentElement","warn","hasValue","trim","isFocused","activeElement","setProperty","removeProperty","hasValueClass","contains","hasFloatingClass","getBasePath","pathname","includes"],"mappings":"6MACY,MAACA,EAAgB,CACzBC,MAAO,KACPC,eAAe,EAEf,IAAAC,GACIC,QAAQC,IAAI,8BACZC,KAAKJ,eAAgB,CACxB,EAEK,IAAAK,GAAO,OAAAC,EAAAF,KAAA,KAAA,kBACHA,KAAKG,cACXH,KAAKI,YAELJ,KAAKK,YAAc,EACnBL,KAAKM,WAAa,CACrB,EAAA,EAED,KAAAC,GACIP,KAAKQ,WACR,EAEK,WAAAL,GAAc,OAAAD,EAAAF,KAAA,KAAA,YAEV,MAAAS,EAAgBC,SAASC,eAAe,iBAC1CF,GACAA,EAAcG,SAGd,IAEM,MAAAC,EAAYb,KAAKc,eACdJ,SAAAK,KAAKC,mBAAmB,YAAaH,GAG9Cb,KAAKiB,kBACLjB,KAAKkB,aACLlB,KAAKmB,sBACLnB,KAAKoB,oBAER,OAAQC,GACGvB,QAAAuB,MAAM,gCAAiCA,GAE/CrB,KAAKsB,qBACR,CACJ,EAAA,EAED,mBAAAA,GAqBaZ,SAAAK,KAAKC,mBAAmB,YApBf,k4BAqBlBhB,KAAKkB,YACR,EAED,eAAAD,GAEIjB,KAAKK,YAAc,EACnBL,KAAKM,WAAa,EAEVR,QAAAC,IAAI,kCAAmCC,KAAKK,aAGpDL,KAAKuB,SAAS,GAGdvB,KAAKwB,qBAGLxB,KAAKyB,uBAGC,MAAAC,EAAUhB,SAASC,eAAe,WAChCb,QAAAC,IAAI,kCAAmC2B,GAC3CA,IACA5B,QAAQC,IAAI,sBAAuB2B,EAAQC,MAAMC,SACjD9B,QAAQC,IAAI,+BAAgC8B,OAAOC,iBAAiBJ,IAE3E,EAED,SAAAtB,GACU,MAAAT,EAAQe,SAASC,eAAe,iBACtC,GAAIhB,EAAO,CACDA,EAAAoC,UAAUC,IAAI,UACpBrC,EAAMsC,gBAAgB,UAGtBC,WAAW,KACPlC,KAAKmC,sBACN,KAGG,MAAAC,EAAY1B,SAASC,eAAe,gBACtCyB,GACAA,EAAUC,OAEjB,CACJ,EAED,SAAA7B,GACU,MAAAb,EAAQe,SAASC,eAAe,iBAClChB,GACAA,EAAMiB,QAEb,EAED,UAAAM,GAEU,MAAAoB,EAAW5B,SAASC,eAAe,sBACrC2B,GACAA,EAASC,iBAAiB,QAAS,IAAMvC,KAAKO,SAI5C,MAAAmB,EAAUhB,SAASC,eAAe,WACpCe,GACAA,EAAQa,iBAAiB,QAAS,IAAMvC,KAAKwC,gBAI3C,MAAAC,EAAU/B,SAASC,eAAe,WACpC8B,GACAA,EAAQF,iBAAiB,QAAS,IAAMvC,KAAK0C,YAI3C,MAAAC,EAAUjC,SAASC,eAAe,WACpCgC,GACAA,EAAQJ,iBAAiB,QAAS,IAAMvC,KAAK4C,aAI7BlC,SAASmC,iBAAiB,sBAClCC,QAAQ,CAACC,EAAMC,KAClBD,EAAAR,iBAAiB,QAAS,KAC3B,MAAMU,EAAaD,EAAQ,EACvBC,GAAcjD,KAAKK,aACnBL,KAAKuB,SAAS0B,OAMpB,MAAAtD,EAAQe,SAASC,eAAe,iBAChCuC,EAAWxC,SAASyC,cAAc,wBACpCxD,GACMA,EAAA4C,iBAAiB,QAAUa,IACzBA,EAAEC,SAAW1D,GAASyD,EAAEC,SAAWH,GACnClD,KAAKO,UAIb2C,GACAA,EAASX,iBAAiB,QAAS,IAAMvC,KAAKO,SAI5C,MAAA+C,EAAO5C,SAASC,eAAe,uBACjC2C,GACKA,EAAAf,iBAAiB,SAAWa,IAC7BA,EAAEG,iBACFvD,KAAK0C,aAKP,MAAAc,EAAiB9C,SAASC,eAAe,kBAC3C6C,GACAA,EAAejB,iBAAiB,QAAS,IAAMvC,KAAKyD,2BAIlD,MAAAC,EAAoBhD,SAASC,eAAe,qBAC9C+C,GACAA,EAAkBnB,iBAAiB,QAAS,IAAMvC,KAAK2D,yBAI3D3D,KAAK4D,mBAGL5D,KAAKmC,oBACR,EAED,oBAAAV,GAEI,MAAMoC,EAAYhC,OAAOiC,cAAgBjC,OAAOiC,cAAcC,WAAa,GACrEC,EAAWnC,OAAOiC,cAAgBjC,OAAOiC,cAAcG,WAAa,EAEpEC,EAAQF,EADG,IAIXG,EAAczD,SAASC,eAAe,eACtCyD,EAAe1D,SAASC,eAAe,gBACvC0D,EAAkB3D,SAASC,eAAe,mBAC1C2D,EAAY5D,SAASC,eAAe,aACpC4D,EAAkB7D,SAASC,eAAe,mBAC1C6D,EAAkB9D,SAASC,eAAe,mBAC1C8D,EAAe/D,SAASC,eAAe,gBAGzCwD,IAAaA,EAAYO,YAAc,IACvCN,IAAcA,EAAaM,YAAc,IACzCL,IAAiBA,EAAgBK,YAAc,IAG/CJ,IAAWA,EAAUI,YAAc,QACnCH,IAAiCA,EAAAG,YAAc,OAAOC,OAAAX,EAASY,mBAC/DJ,IAAiBA,EAAgBE,YAAc,UAC/CD,IAA2BA,EAAAC,YAAc,OAAOC,OAAAT,EAAMU,mBAGpD,MAAAC,EAAiBnE,SAASC,eAAe,kBAC3CkE,GAAkBhB,EAAUiB,OAAS,IACrCD,EAAeE,UAAYlB,EAAUmB,OAAY,2FAEfL,OAAAM,EAAKC,KAAI,6DACLP,OAAAM,EAAKE,SAAQ,oEACZR,SAAKS,MAAMR,iBAAgB,kDAE/DS,KAAK,IAEf,EAED,kBAAAjE,GAEI,IAAI4C,EAAW,EACXnC,OAAOiC,gBACIE,EAAAnC,OAAOiC,cAAcG,YAGpC,MACMC,EAAQF,EADG,IAIXsB,EAAa5E,SAASC,eAAe,mBACrC4E,EAAa7E,SAASC,eAAe,mBACrC6E,EAAU9E,SAASC,eAAe,gBAEpC2E,IAAuBA,EAAAZ,YAAc,OAAOC,OAAAX,EAASY,mBACrDW,IAAuBA,EAAAb,YAAc,OAAOC,OAT/B,KASwCC,mBACrDY,IAAiBA,EAAAd,YAAc,OAAOC,OAAAT,EAAMU,kBACnD,EAED,SAAAhC,GAEU,MAAAsC,EAAOxE,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgB8E,MAAQ,GACjGC,EAAQhF,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GACpGE,EAAWjF,SAASC,eAAe,oBAAsBD,SAASC,eAAe,oBAAoB8E,MAAQ,GAGnH,IAAKP,IAASQ,IAAUC,EAGpB,OAFA3F,KAAK4F,UAAU,qDACf5F,KAAKuB,SAAS,GAKlB,MAAMsE,EAAU7F,KAAK8F,wBAAwBZ,EAAMQ,EAAOC,GAGpDI,EAAc,mCAAmCpB,OAAAqB,mBAAmBH,IACnEhE,OAAA5B,KAAK8F,EAAa,UAGzB/F,KAAKiG,YAAY,6DAGjB/D,WAAW,KACPlC,KAAKO,SACN,IACN,EAED,uBAAAuF,CAAwBZ,EAAMQ,EAAOC,GACjC,MAAM9B,EAAYhC,OAAOiC,cAAgBjC,OAAOiC,cAAcC,WAAa,GACrEG,EAAQrC,OAAOiC,cAAgBjC,OAAOiC,cAAcG,WAAa,EAEvE,IAAI4B,EAAU,4BAcP,OAbIA,GAAA,wBACXA,GAAW,SAASlB,OAAIO,EAAA,MACxBW,GAAW,cAAclB,OAAKe,EAAA,MAC9BG,GAAW,aAAalB,OAAQgB,EAAA,QAErBE,GAAA,mBACXhC,EAAUf,QAAgBmC,IACXY,GAAA,KAAKlB,OAAKM,EAAAC,KAAI,OAAMP,OAAAM,EAAKE,SAAQ,iBAAgBR,OAAAM,EAAKG,MAAMR,iBAAgB,QAGhFiB,GAAA,iBAAiBlB,OAAMT,EAAAU,iBAAgB,SACvCiB,GAAA,0DAEJA,CACV,EAED,UAAAK,GAEI,IADaxF,SAASC,eAAe,gBAC1B,OAEX,MAAMwF,EACIzF,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgB8E,MAAQ,GAD9FU,EAEKzF,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GAFjGU,EAGKzF,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GAHjGU,EAIQzF,SAASC,eAAe,oBAAsBD,SAASC,eAAe,oBAAoB8E,MAAQ,GAJ1GU,EAKOzF,SAASC,eAAe,mBAAqBD,SAASC,eAAe,mBAAmB8E,MAAQ,GALvGU,EAMIzF,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgB8E,MAAQ,GAN9FU,IAOWzF,SAASC,eAAe,gBAAiBD,SAASC,eAAe,eAAeyF,QAP3FD,IAQiBzF,SAASC,eAAe,sBAAuBD,SAASC,eAAe,qBAAqByF,QACxGvE,OAAOiC,eAAgBjC,OAAOiC,cAAcC,WAC5ClC,OAAOiC,eAAgBjC,OAAOiC,cAAcG,WAIvD,KAAKkC,GAAmBA,GAAoBA,GAAoBA,GAAuBA,GAAsBA,GAEzG,YADAnG,KAAK4F,UAAU,sCAKfO,GACAnG,KAAKqG,cAKH,MAAAC,EAAgBH,EAA8B,aAAe,QAC9DnG,KAAAiG,YAAY,sDAAsDtB,OAAA2B,EAAa,WAGhFzE,OAAOiC,eACPjC,OAAOiC,cAAcyC,QAIzBrE,WAAW,KACPlC,KAAKO,SACN,IACN,EAED,SAAAqF,CAAUC,GAEE/F,QAAAuB,MAAM,kBAAmBwE,GACjCW,MAAMX,EACT,EAED,WAAAI,CAAYJ,GAEA/F,QAAAC,IAAI,oBAAqB8F,GACjCW,MAAMX,EACT,EAEK,uBAAApC,GAA0B,OAAAvD,EAAAF,KAAA,KAAA,YACtB,MAAAyG,EAAY/F,SAASC,eAAe,kBACpC+F,EAAahG,SAASC,eAAe,iBAEvC,GAAC8F,GAAcC,EAAf,CAGMD,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,0DACtB0B,EAAUE,UAAW,EAEjB,IAEA,GAAI,aAAcC,WAAa,WAAYA,UAAUC,SAAU,CACrD,MAAAA,QAAiBD,UAAUC,SAASC,OAAO,CAAC,OAAQ,OAAQ,CAC9DC,UAAU,IAGV,KAAAF,GAAYA,EAAS/B,OAAS,GA6BxB,MAAA,IAAIkC,MAAM,uBA7BiB,CAC3B,MAAAC,EAAUJ,EAAS,GACnBK,EAAcD,EAAQE,KAAOF,EAAQE,IAAIrC,OAAS,EAAImC,EAAQE,IAAI,GAAK,KAE7E,IAAID,EAsBM,MAAA,IAAIF,MAAM,6CAtBH,CAEb,IAAII,EAAcF,EAAYG,QAAQ,MAAO,IACzCD,EAAYE,WAAW,SACTF,EAAAA,EAAYG,UAAU,IAGxCb,EAAWjB,MAAQ2B,EAGTX,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,oDAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,WAC3B6F,EAAU1B,UAAY,uEACtB0B,EAAUE,UAAW,GACtB,KAEH3G,KAAKiG,YAAY,uCACzC,CAGA,CAGA,KAAmB,CAEG,MAAAuB,EAAeC,OAAO,iEAC5B,IAAID,EAYM,MAAA,IAAIR,MAAM,2BAXhBN,EAAWjB,MAAQ+B,EAAaH,QAAQ,MAAO,IACrCZ,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,mDAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,WAC3B6F,EAAU1B,UAAY,uEACtB0B,EAAUE,UAAW,GACtB,IAIV,CACJ,OAAQtF,GACGvB,QAAAuB,MAAM,yBAA0BA,GAG9BoF,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,SACxByE,EAAU1B,UAAY,iEAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,SAC3B6F,EAAU1B,UAAY,uEACtB0B,EAAUE,UAAW,GACtB,KAEH3G,KAAK4F,UAAU,2DAClB,CA9E8B,CA+ElC,EAAA,EAEK,qBAAAjC,GAAwB,OAAAzD,EAAAF,KAAA,KAAA,YACpB,MAAAyG,EAAY/F,SAASC,eAAe,qBACpC+G,EAAgBhH,SAASC,eAAe,oBAE1C,GAAC8F,GAAciB,EAAf,CAGMjB,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,0DACtB0B,EAAUE,UAAW,EAEjB,IAEA,KAAI,gBAAiBC,WA6DX,MAAA,IAAII,MAAM,6BA7DY,CAC5B,MAAMW,QAAiB,IAAIC,QAAQ,CAACC,EAASC,KAC/BlB,UAAAmB,YAAYC,mBAAmBH,EAASC,EAAQ,CACtDG,oBAAoB,EACpBC,QAAS,IACTC,WAAY,SAIdC,SACFA,EAAAC,UACAA,GACAV,EAASW,OAGT,IACA,MAAMC,QAAiBC,MAAM,+DAA+D7D,OAAQyD,EAAA,SAAQzD,SAAS,8BAC/G8D,QAAaF,EAASG,OAExBD,EAAKE,cACLjB,EAAcjC,MAAQgD,EAAKE,aAGjBlC,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,oDAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,WAC3B6F,EAAU1B,UAAY,4DACtB0B,EAAUE,UAAW,GACtB,KAEH3G,KAAKiG,YAAY,iCAGHyB,EAAAjC,MAAQ,GAAGd,OAASyD,EAAAQ,QAAQ,GAAE,MAAKjE,OAAU0D,EAAAO,QAAQ,IACzDnC,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,oDAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,WAC3B6F,EAAU1B,UAAY,4DACtB0B,EAAUE,UAAW,GACtB,KAEV,OAAQkC,GAESnB,EAAAjC,MAAQ,GAAGd,OAASyD,EAAAQ,QAAQ,GAAE,MAAKjE,OAAU0D,EAAAO,QAAQ,IACzDnC,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,WACxByE,EAAU1B,UAAY,oDAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,WAC3B6F,EAAU1B,UAAY,4DACtB0B,EAAUE,UAAW,GACtB,IACN,CACjB,CAGS,OAAQtF,GACGvB,QAAAuB,MAAM,4BAA6BA,GAGjCoF,EAAA1E,UAAUnB,OAAO,WACjB6F,EAAA1E,UAAUC,IAAI,SACxByE,EAAU1B,UAAY,iEAEtB7C,WAAW,KACGuE,EAAA1E,UAAUnB,OAAO,SAC3B6F,EAAU1B,UAAY,4DACtB0B,EAAUE,UAAW,GACtB,KAEH3G,KAAK4F,UAAU,uDAClB,CAvFiC,CAwFrC,EAAA,EAED,gBAAAhC,GACQ,IACM,MAAAkF,EAAeC,aAAaC,QAAQ,mBAC1C,GAAIF,EAAc,CACR,MAAAG,EAAUC,KAAKC,MAAML,GAE3B,GAAIG,EAAQ/D,KAAM,CACR,MAAA9C,EAAY1B,SAASC,eAAe,gBACtCyB,IAAWA,EAAUqD,MAAQwD,EAAQ/D,KAC5C,CACD,GAAI+D,EAAQvD,MAAO,CACT,MAAAgB,EAAahG,SAASC,eAAe,iBACvC+F,IAAYA,EAAWjB,MAAQwD,EAAQvD,MAC9C,CACD,GAAIuD,EAAQG,MAAO,CACT,MAAAC,EAAa3I,SAASC,eAAe,iBACvC0I,IAAYA,EAAW5D,MAAQwD,EAAQG,MAC9C,CACD,GAAIH,EAAQtD,SAAU,CACZ,MAAA+B,EAAgBhH,SAASC,eAAe,oBAC1C+G,IAAeA,EAAcjC,MAAQwD,EAAQtD,SACpD,CAGK,MAAA2D,EAA0B5I,SAASC,eAAe,mBACpD2I,IACAA,EAAwBlD,SAAU,GAItClE,WAAW,KACPlC,KAAKmC,sBACN,GACN,CACJ,OAAQd,GACGvB,QAAAuB,MAAM,+BAAgCA,EACjD,CACJ,EAED,WAAAgF,GACU,MAAAiD,EAA0B5I,SAASC,eAAe,mBACpD,GAAA2I,GAA2BA,EAAwBlD,QAC/C,IACA,MAAM6C,EAAU,CACZ/D,KAAMxE,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgB8E,MAAQ,GAChGC,MAAOhF,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GACnG2D,MAAO1I,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GACnGE,SAAUjF,SAASC,eAAe,oBAAsBD,SAASC,eAAe,oBAAoB8E,MAAQ,IAGhHsD,aAAaQ,QAAQ,kBAAmBL,KAAKM,UAAUP,IACvDnJ,QAAQC,IAAI,gCACf,OAAQsB,GACGvB,QAAAuB,MAAM,wBAAyBA,EAC1C,CAER,EAGD,QAAAE,CAAS0B,GACGnD,QAAAC,IAAI,mCAAoCkD,GAGlCvC,SAASmC,iBAAiB,kBAClCC,QAAgBC,GAAAA,EAAKhB,UAAUnB,OAAO,WAG5C,MAAMP,EAAcK,SAASC,eAAe,OAAOgE,OAAY1B,IAC3D5C,GACYA,EAAA0B,UAAUC,IAAI,UAG9BhC,KAAKK,YAAc4C,EACXnD,QAAAC,IAAI,2BAA4BC,KAAKK,aAE7CL,KAAKmB,sBACLnB,KAAKwB,qBAGc,IAAfyB,GACAjD,KAAKyJ,sBAIU,IAAfxG,GACAjD,KAAK0J,wBAEZ,EAED,mBAAAD,GAEU,MAAAvE,EAAOxE,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgB8E,MAAQ,GACjGC,EAAQhF,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GACpGE,EAAWjF,SAASC,eAAe,oBAAsBD,SAASC,eAAe,oBAAoB8E,MAAQ,GAG7GtB,EAAczD,SAASC,eAAe,eACtCyD,EAAe1D,SAASC,eAAe,gBACvC0D,EAAkB3D,SAASC,eAAe,mBAE5CwD,IAAaA,EAAYO,YAAcQ,GAAQ,gBAC/Cd,IAA2BA,EAAAM,YAAcgB,EAAQ,OAAOf,OAAUe,GAAA,gBAClErB,IAAiBA,EAAgBK,YAAciB,GAAY,eAClE,EAED,sBAAA+D,GAEU,MAAAxE,EAAOxE,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgB8E,MAAQ,GACjGC,EAAQhF,SAASC,eAAe,iBAAmBD,SAASC,eAAe,iBAAiB8E,MAAQ,GACpGE,EAAWjF,SAASC,eAAe,oBAAsBD,SAASC,eAAe,oBAAoB8E,MAAQ,GAG7GI,EAAU7F,KAAK8F,wBAAwBZ,EAAMQ,EAAOC,GAGpDgE,EAAiBjJ,SAASC,eAAe,kBAC3CgJ,IACAA,EAAejF,YAAcmB,EAEpC,EAED,QAAAnD,GACQ1C,KAAKK,YAAcL,KAAKM,YACnBN,KAAAuB,SAASvB,KAAKK,YAAc,EAExC,EAED,YAAAmC,GACQxC,KAAKK,YAAc,GACdL,KAAAuB,SAASvB,KAAKK,YAAc,EAExC,EAED,mBAAAc,GACU,MAAAyI,EAAQlJ,SAASmC,iBAAiB,sBAClCgH,EAAQnJ,SAASmC,iBAAiB,sBAEhC/C,QAAAC,IAAI,yCAA0CC,KAAKK,aAC3DP,QAAQC,IAAI,eAAgB6J,EAAM9E,OAAQ,eAAgB+E,EAAM/E,QAE1D8E,EAAA9G,QAAQ,CAACC,EAAMC,KACjB,MAAMC,EAAaD,EAAQ,EACtBD,EAAAhB,UAAUnB,OAAO,YAAa,aAE/BqC,IAAejD,KAAKK,aACf0C,EAAAhB,UAAUC,IAAI,aACXlC,QAAAC,IAAI,QAAQ4E,OAAA1B,EAAU,oBACvBA,EAAajD,KAAKK,cACpB0C,EAAAhB,UAAUC,IAAI,aACXlC,QAAAC,IAAI,QAAQ4E,OAAA1B,EAAU,yBAKhC4G,EAAA/G,QAAQ,CAACgH,EAAM9G,KACZ8G,EAAA/H,UAAUnB,OAAO,YAAa,UACnCd,QAAQC,IAAI,QAAQ4E,OAAQ3B,EAAA,EAAC,qBAEzBA,EAAQhD,KAAKK,YAAc,GAEtByJ,EAAA/H,UAAUC,IAAI,aACnBlC,QAAQC,IAAI,QAAQ4E,OAAQ3B,EAAA,EAAC,uBACtBA,IAAUhD,KAAKK,YAAc,IAE/ByJ,EAAA/H,UAAUC,IAAI,UACnBlC,QAAQC,IAAI,QAAQ4E,OAAQ3B,EAAA,EAAC,kCAGxC,EAED,kBAAAxB,GACU,MAAAE,EAAUhB,SAASC,eAAe,WAClC8B,EAAU/B,SAASC,eAAe,WAClCgC,EAAUjC,SAASC,eAAe,WAGhCb,QAAAC,IAAI,0CAA2CC,KAAKK,aAC5DP,QAAQC,IAAI,mBAAoB2B,GAG5BA,GAEAA,EAAQC,MAAMoI,QAAU,OACxBjK,QAAQC,IAAI,kCAEZD,QAAQC,IAAI,gCAIZ0C,IACyB,IAArBzC,KAAKK,YACLoC,EAAQsC,UAAY,4LACQ,IAArB/E,KAAKK,cACZoC,EAAQsC,UAAY,4LAKxBpC,IACyB,IAArB3C,KAAKK,aACLsC,EAAQhB,MAAMoI,QAAU,cACpBtH,IAASA,EAAQd,MAAMoI,QAAU,UAErCpH,EAAQhB,MAAMoI,QAAU,OACpBtH,IAASA,EAAQd,MAAMoI,QAAU,gBAGhD,EAED,kBAAA5H,GAEU,MAAA6H,EAAStJ,SAASmC,iBAAiB,oBAEzC/C,QAAQC,IAAI,mCAAoCiK,EAAOlF,OAAQ,UAExDkF,EAAAlH,QAAQ,CAACmH,EAAOjH,KAEdiH,EAAMC,aAAqC,KAAtBD,EAAMC,cAC5BD,EAAMC,YAAc,KAIxBD,EAAME,oBAAoB,QAASnK,KAAKoK,oBAAoBC,KAAKrK,KAAMiK,IACvEA,EAAME,oBAAoB,QAASnK,KAAKoK,oBAAoBC,KAAKrK,KAAMiK,IACvEA,EAAME,oBAAoB,OAAQnK,KAAKoK,oBAAoBC,KAAKrK,KAAMiK,IAGhEA,EAAA1H,iBAAiB,QAAS,KAC5BvC,KAAKoK,oBAAoBH,KAGvBA,EAAA1H,iBAAiB,QAAS,KAC5BvC,KAAKoK,oBAAoBH,KAGvBA,EAAA1H,iBAAiB,OAAQ,KAC3BvC,KAAKoK,oBAAoBH,KAI7BjK,KAAKoK,oBAAoBH,GAEjBnK,QAAAC,IAAI,SAAS4E,OAAQ3B,EAAA,EAAC,KAAKiH,EAAMK,IAAML,EAAM/E,KAAM,gBAElE,EAED,mBAAAkF,CAAoBH,GAChB,MAAMM,EAAQN,EAAMO,cAAcrH,cAAc,cAChD,IAAKoH,EAED,YADAzK,QAAQ2K,KAAK,4BAA6BR,EAAMK,IAAML,EAAM/E,MAIhE,MAAMwF,EAAWT,EAAMxE,MAAMkF,OAAO7F,OAAS,EACvC8F,EAAYlK,SAASmK,gBAAkBZ,EAGzCS,EACMT,EAAAlI,UAAUC,IAAI,aAEdiI,EAAAlI,UAAUnB,OAAO,aAIvB8J,GAAYE,EACNL,EAAAxI,UAAUC,IAAI,YAEduI,EAAAxI,UAAUnB,OAAO,YAIvB8J,GAAYE,EACNX,EAAAtI,MAAMmJ,YAAY,wBAAyB,KAE3Cb,EAAAtI,MAAMoJ,eAAe,yBAG/BjL,QAAQC,IAAI,8BAA8B4E,OAAAsF,EAAMK,IAAML,EAAM/E,KAAI,KAAK,CACjEwF,WACAE,YACAI,cAAef,EAAMlI,UAAUkJ,SAAS,aACxCC,iBAAkBX,EAAMxI,UAAUkJ,SAAS,aAElD,EAEDnK,aAAe,IACJ,m5NAoJXqK,YAAc,IAEOtJ,OAAO8D,SAASyF,SACpBC,SAAS,0BACX,wBAGJ"}