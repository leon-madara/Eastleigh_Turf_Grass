{"version":3,"file":"discountService-775b2253.js","sources":["../../src/services/couponService.js","../../src/services/discountService.js"],"sourcesContent":["// Coupon Service - Handles coupon validation and management\r\nclass CouponService {\r\n    constructor() {\r\n        this.coupons = [];\r\n        this.loadCoupons();\r\n    }\r\n\r\n    // Load coupons from data file\r\n    async loadCoupons() {\r\n        try {\r\n            const response = await fetch('/src/data/coupons.json');\r\n            const data = await response.json();\r\n            this.coupons = data.coupons || [];\r\n        } catch (error) {\r\n            console.error('Error loading coupons:', error);\r\n            this.coupons = [];\r\n        }\r\n    }\r\n\r\n    // Validate a coupon code\r\n    validateCoupon(code, subtotal = 0) {\r\n        const coupon = this.coupons.find(c => c.code.toUpperCase() === code.toUpperCase());\r\n\r\n        if (!coupon) {\r\n            return {\r\n                valid: false,\r\n                message: 'Invalid coupon code'\r\n            };\r\n        }\r\n\r\n        // Check if coupon is expired\r\n        const now = new Date();\r\n        const validFrom = new Date(coupon.validFrom);\r\n        const validTo = new Date(coupon.validTo);\r\n\r\n        if (now < validFrom || now > validTo) {\r\n            return {\r\n                valid: false,\r\n                message: 'Coupon has expired or is not yet valid'\r\n            };\r\n        }\r\n\r\n        // Check minimum order requirement\r\n        if (subtotal < coupon.minOrder) {\r\n            return {\r\n                valid: false,\r\n                message: `Minimum order of KES ${coupon.minOrder.toLocaleString()} required`\r\n            };\r\n        }\r\n\r\n        // Check usage limit\r\n        if (coupon.usedCount >= coupon.usageLimit) {\r\n            return {\r\n                valid: false,\r\n                message: 'Coupon usage limit reached'\r\n            };\r\n        }\r\n\r\n        return {\r\n            valid: true,\r\n            coupon: coupon,\r\n            message: 'Coupon applied successfully'\r\n        };\r\n    }\r\n\r\n    // Calculate discount amount for a coupon\r\n    calculateCouponDiscount(coupon, subtotal) {\r\n        let discountAmount = 0;\r\n\r\n        if (coupon.type === 'percentage') {\r\n            discountAmount = subtotal * (coupon.value / 100);\r\n        } else if (coupon.type === 'fixed') {\r\n            discountAmount = coupon.value;\r\n        }\r\n\r\n        // Apply maximum discount cap\r\n        if (discountAmount > coupon.maxDiscount) {\r\n            discountAmount = coupon.maxDiscount;\r\n        }\r\n\r\n        return Math.min(discountAmount, subtotal); // Can't discount more than subtotal\r\n    }\r\n\r\n    // Apply coupon and return discount details\r\n    applyCoupon(code, subtotal) {\r\n        const validation = this.validateCoupon(code, subtotal);\r\n\r\n        if (!validation.valid) {\r\n            return validation;\r\n        }\r\n\r\n        const coupon = validation.coupon;\r\n        const discountAmount = this.calculateCouponDiscount(coupon, subtotal);\r\n        const finalTotal = subtotal - discountAmount;\r\n\r\n        return {\r\n            valid: true,\r\n            coupon: coupon,\r\n            discountAmount: discountAmount,\r\n            finalTotal: finalTotal,\r\n            message: `Coupon \"${coupon.code}\" applied! You saved KES ${discountAmount.toLocaleString()}`\r\n        };\r\n    }\r\n\r\n    // Get available coupons for display\r\n    getAvailableCoupons(subtotal = 0) {\r\n        return this.coupons.filter(coupon => {\r\n            const validation = this.validateCoupon(coupon.code, subtotal);\r\n            return validation.valid;\r\n        });\r\n    }\r\n\r\n    // Increment coupon usage (for tracking)\r\n    incrementCouponUsage(code) {\r\n        const coupon = this.coupons.find(c => c.code.toUpperCase() === code.toUpperCase());\r\n        if (coupon) {\r\n            coupon.usedCount++;\r\n            // In a real app, this would be saved to a database\r\n        }\r\n    }\r\n}\r\n\r\n// Export singleton instance\r\nexport const couponService = new CouponService();","// Discount Service - Handles promotional discounts and rules\r\nclass DiscountService {\r\n    constructor() {\r\n        this.promotions = [];\r\n        this.loadPromotions();\r\n    }\r\n\r\n    // Load promotions from data file\r\n    async loadPromotions() {\r\n        try {\r\n            const response = await fetch('/src/data/discounts.json');\r\n            const data = await response.json();\r\n            this.promotions = data.promotions || [];\r\n        } catch (error) {\r\n            console.error('Error loading promotions:', error);\r\n            this.promotions = [];\r\n        }\r\n    }\r\n\r\n    // Get available promotions for a given subtotal\r\n    getAvailablePromotions(subtotal = 0) {\r\n        const now = new Date();\r\n\r\n        return this.promotions.filter(promotion => {\r\n            // Check if promotion is active\r\n            if (!promotion.active) return false;\r\n\r\n            // Check date validity\r\n            const validFrom = new Date(promotion.validFrom);\r\n            const validTo = new Date(promotion.validTo);\r\n\r\n            if (now < validFrom || now > validTo) return false;\r\n\r\n            // Check minimum order requirement\r\n            if (subtotal < promotion.minOrder) return false;\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    // Get the best available promotion\r\n    getBestPromotion(subtotal = 0) {\r\n        const availablePromotions = this.getAvailablePromotions(subtotal);\r\n\r\n        if (availablePromotions.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        // Calculate potential savings for each promotion\r\n        const promotionsWithSavings = availablePromotions.map(promotion => {\r\n            const savings = this.calculatePromotionDiscount(promotion, subtotal);\r\n            return {\r\n                ...promotion,\r\n                potentialSavings: savings\r\n            };\r\n        });\r\n\r\n        // Return the promotion with the highest savings\r\n        return promotionsWithSavings.reduce((best, current) => {\r\n            return current.potentialSavings > best.potentialSavings ? current : best;\r\n        });\r\n    }\r\n\r\n    // Calculate discount amount for a promotion\r\n    calculatePromotionDiscount(promotion, subtotal) {\r\n        let discountAmount = 0;\r\n\r\n        if (promotion.type === 'percentage') {\r\n            discountAmount = subtotal * (promotion.value / 100);\r\n        } else if (promotion.type === 'fixed') {\r\n            discountAmount = promotion.value;\r\n        }\r\n\r\n        // Apply maximum discount cap\r\n        if (discountAmount > promotion.maxDiscount) {\r\n            discountAmount = promotion.maxDiscount;\r\n        }\r\n\r\n        return Math.min(discountAmount, subtotal); // Can't discount more than subtotal\r\n    }\r\n\r\n    // Apply a specific promotion\r\n    applyPromotion(promotionId, subtotal) {\r\n        const promotion = this.promotions.find(p => p.id === promotionId);\r\n\r\n        if (!promotion) {\r\n            return {\r\n                valid: false,\r\n                message: 'Promotion not found'\r\n            };\r\n        }\r\n\r\n        const availablePromotions = this.getAvailablePromotions(subtotal);\r\n        const isAvailable = availablePromotions.some(p => p.id === promotionId);\r\n\r\n        if (!isAvailable) {\r\n            return {\r\n                valid: false,\r\n                message: 'Promotion not available for this order'\r\n            };\r\n        }\r\n\r\n        const discountAmount = this.calculatePromotionDiscount(promotion, subtotal);\r\n        const finalTotal = subtotal - discountAmount;\r\n\r\n        return {\r\n            valid: true,\r\n            promotion: promotion,\r\n            discountAmount: discountAmount,\r\n            finalTotal: finalTotal,\r\n            message: `${promotion.name} applied! You saved KES ${discountAmount.toLocaleString()}`\r\n        };\r\n    }\r\n\r\n    // Get promotion details for display\r\n    getPromotionDetails(promotionId) {\r\n        return this.promotions.find(p => p.id === promotionId);\r\n    }\r\n\r\n    // Check if any promotions are available\r\n    hasAvailablePromotions(subtotal = 0) {\r\n        return this.getAvailablePromotions(subtotal).length > 0;\r\n    }\r\n\r\n    // Get promotion summary for UI display\r\n    getPromotionSummary(subtotal = 0) {\r\n        const bestPromotion = this.getBestPromotion(subtotal);\r\n\r\n        if (!bestPromotion) {\r\n            return null;\r\n        }\r\n\r\n        const savings = this.calculatePromotionDiscount(bestPromotion, subtotal);\r\n\r\n        return {\r\n            promotion: bestPromotion,\r\n            savings: savings,\r\n            finalTotal: subtotal - savings,\r\n            savingsPercentage: ((savings / subtotal) * 100).toFixed(1)\r\n        };\r\n    }\r\n}\r\n\r\n// Export singleton instance\r\nexport const discountService = new DiscountService();"],"names":["CouponService","data","error","code","subtotal","coupon","c","now","validFrom","validTo","discountAmount","validation","finalTotal","couponService","DiscountService","promotion","availablePromotions","savings","best","current","promotionId","p","bestPromotion","discountService"],"mappings":"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"}