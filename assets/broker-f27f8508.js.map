{"version":3,"mappings":"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","names":["NumberFormatter","input","options","config","event","cursorPosition","oldValue","digitsBeforeCursor","cleanValue","decimalIndex","formattedValue","newCursorPosition","blurEvent","value","position","digitCount","digitsFound","i","allowDecimals","decimalPlaces","parts","numericValue","currency","formatted","initializeDashboard","showWelcomeToast","initializeTabs","initializeButtons","loadUserData","tabs","tabContents","tab","targetTab","t","content","addItemBtn","handleAddItem","submitOrderBtn","handleSubmitOrder","addPreorderBtn","handleAddPreorder","submitPreordersBtn","handleSubmitPreorders","addInquiryBtn","handleAddInquiry","submitInquiriesBtn","handleSubmitInquiries","logoutBtn","handleLogout","authState","user","updateProfileDisplay","updateCartCount","cartCount","totalCount","nameInput","emailInput","showToast","message","type","toast","toastMessage","toastIcon","hideToast","e","PaymentSummaryHandler","orderTotalSpan","amountToPayInput","creditBalanceSpan","checkFormatter","orderTotal","amountToPay","credit","initializePaymentSummary","products","orderItems","nextItemId","currentBroker","availableDiscounts","availableCoupons","appliedDiscount","appliedCoupon","init","loadProducts","loadDiscounts","loadCoupons","loadBrokerInfo","updateUI","bindEvents","error","promo","coupon","brokerData","showAddItemModal","submitOrder","createAddItemModal","modal","disableDiscountCouponOptions","existingModal","modalHTML","product","discount","bindModalEvents","closeBtn","cancelBtn","confirmBtn","productSelect","quantityInput","applyCouponBtn","closeAddItemModal","addItemToOrder","handleProductChange","handleQuantityChange","applyCoupon","unitPriceInput","subtotalInput","p","updateSubtotal","checkEnableDiscountCoupon","quantity","subtotal","updateDiscountSummary","hasProduct","hasQuantity","enableDiscountCouponOptions","discountSelect","couponInput","couponCode","c","getCurrentSubtotal","discountSummary","summarySubtotal","discountRow","summaryDiscount","couponRow","summaryCoupon","summaryFinalTotal","finalTotal","discountAmount","couponAmount","d","item","calculateDiscountAmount","calculateCouponAmount","amount","removeItem","itemId","calculateTotal","sum","tableBody","emptyState","submitBtn","createOrderRow","deleteBtn","total","discountText","couponText","orderData","itemDiscount","sendOrderToWhatsApp","generateOrderMessage","whatsappNumber","encodedMessage","whatsappUrl","itemsList","itemText","getItemCount","WhatsAppService","url","preorderData","inquiryData","contactData","brokerId","brokerName","brokerEmail","brokerPhone","items","totalDiscount","orderDate","expectedDate","specialNotes","totalOriginal","totalBargain","difference","differenceText","totalDifference","totalDifferenceText","name","email","phone","subject","whatsappService","__vitePreload","brokerInfo"],"sources":["../../src/js/utils/numberFormatter.js","../../src/js/broker/broker.js","../../src/js/broker/dashboard.js","../../src/js/broker/modules/orders.js","../../src/services/whatsappService.js","../../src/pages/broker/main.js"],"sourcesContent":["/**\r\n * Number Formatter Utility for Broker Dashboard\r\n * Provides consistent number formatting with commas across all inputs\r\n */\r\n\r\nclass NumberFormatter {\r\n    constructor() {\r\n        this.isFormatting = false;\r\n    }\r\n\r\n    /**\r\n     * Initialize number formatting for an input field\r\n     * @param {HTMLInputElement} input - The input element to format\r\n     * @param {Object} options - Configuration options\r\n     */\r\n    initInputFormatting(input, options = {}) {\r\n        if (!input) {\r\n            console.warn('NumberFormatter: No input element provided');\r\n            return;\r\n        }\r\n\r\n        console.log('NumberFormatter: Initializing formatting for input:', input.id || input.name);\r\n\r\n        const config = {\r\n            allowDecimals: true,\r\n            decimalPlaces: 2,\r\n            currency: 'KES',\r\n            ...options\r\n        };\r\n\r\n        // Store config on input element\r\n        input._numberFormatterConfig = config;\r\n\r\n        // Add event listeners\r\n        input.addEventListener('input', (event) => {\r\n            this.handleInputFormatting(event);\r\n        });\r\n\r\n        input.addEventListener('keydown', (event) => {\r\n            this.handleKeyDown(event);\r\n        });\r\n\r\n        input.addEventListener('blur', (event) => {\r\n            this.handleInputBlur(event);\r\n        });\r\n\r\n        // Add inputmode for better mobile experience\r\n        input.setAttribute('inputmode', 'decimal');\r\n\r\n        console.log('NumberFormatter: Formatting initialized successfully for:', input.id || input.name);\r\n    }\r\n\r\n    /**\r\n     * Handle input formatting while typing\r\n     * @param {Event} event - The input event\r\n     */\r\n    handleInputFormatting(event) {\r\n        if (this.isFormatting) return;\r\n\r\n        const input = event.target;\r\n        const config = input._numberFormatterConfig || {};\r\n        const cursorPosition = input.selectionStart || 0;\r\n        const oldValue = input.value;\r\n\r\n        console.log('NumberFormatter: Input event triggered for:', input.id || input.name, 'Value:', oldValue);\r\n\r\n        // Count digits before cursor position\r\n        const digitsBeforeCursor = this.countDigitsBeforePosition(oldValue, cursorPosition);\r\n\r\n        // Clean the value (remove non-numeric except decimal)\r\n        let cleanValue = oldValue.replace(/[^\\d.]/g, '');\r\n\r\n        // Handle decimal points\r\n        if (config.allowDecimals) {\r\n            const decimalIndex = cleanValue.indexOf('.');\r\n            if (decimalIndex !== -1) {\r\n                cleanValue = cleanValue.substring(0, decimalIndex + 1) +\r\n                    cleanValue.substring(decimalIndex + 1).replace(/\\./g, '');\r\n            }\r\n        } else {\r\n            cleanValue = cleanValue.replace(/\\./g, '');\r\n        }\r\n\r\n        // Format with commas\r\n        const formattedValue = this.formatNumberWithCommas(cleanValue, config);\r\n\r\n        // Update input value\r\n        this.isFormatting = true;\r\n        input.value = formattedValue;\r\n        this.isFormatting = false;\r\n\r\n        // Calculate new cursor position\r\n        const newCursorPosition = this.getPositionAfterDigits(formattedValue, digitsBeforeCursor);\r\n\r\n        // Set cursor position\r\n        setTimeout(() => {\r\n            input.setSelectionRange(newCursorPosition, newCursorPosition);\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * Handle keydown events\r\n     * @param {KeyboardEvent} event - The keyboard event\r\n     */\r\n    handleKeyDown(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.target.blur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle input blur for final formatting\r\n     * @param {Event} event - The blur event\r\n     */\r\n    handleInputBlur(event) {\r\n        const input = event.target;\r\n        const config = input._numberFormatterConfig || {};\r\n\r\n        if (config.allowDecimals) {\r\n            this.ensureProperDecimalFormatting(input, config);\r\n        }\r\n\r\n        // Trigger a custom event for external listeners (like credit balance updates)\r\n        const blurEvent = new CustomEvent('numberFormatted', {\r\n            detail: {\r\n                input: input,\r\n                value: input.value,\r\n                numericValue: this.parseFormattedNumber(input.value)\r\n            }\r\n        });\r\n        input.dispatchEvent(blurEvent);\r\n    }\r\n\r\n    /**\r\n     * Count digits before a position in a string\r\n     * @param {string} value - The string to analyze\r\n     * @param {number} position - The position to count digits before\r\n     * @returns {number} Number of digits before the position\r\n     */\r\n    countDigitsBeforePosition(value, position) {\r\n        let digitCount = 0;\r\n        for (let i = 0; i < Math.min(position, value.length); i++) {\r\n            if (/\\d/.test(value[i])) {\r\n                digitCount++;\r\n            }\r\n        }\r\n        return digitCount;\r\n    }\r\n\r\n    /**\r\n     * Get cursor position after specific number of digits\r\n     * @param {string} formattedValue - The formatted string\r\n     * @param {number} digitCount - Number of digits after which to place cursor\r\n     * @returns {number} The cursor position\r\n     */\r\n    getPositionAfterDigits(formattedValue, digitCount) {\r\n        let digitsFound = 0;\r\n        let position = 0;\r\n\r\n        for (let i = 0; i < formattedValue.length; i++) {\r\n            if (/\\d/.test(formattedValue[i])) {\r\n                digitsFound++;\r\n                if (digitsFound === digitCount) {\r\n                    position = i + 1;\r\n                    break;\r\n                }\r\n            }\r\n            if (digitsFound < digitCount) {\r\n                position = i + 1;\r\n            }\r\n        }\r\n\r\n        return Math.min(position, formattedValue.length);\r\n    }\r\n\r\n    /**\r\n     * Format number with commas\r\n     * @param {string} value - The number string to format\r\n     * @param {Object} config - Configuration options\r\n     * @returns {string} Formatted number with commas\r\n     */\r\n    formatNumberWithCommas(value, config = {}) {\r\n        if (!value) return '';\r\n\r\n        const {\r\n            allowDecimals = true, decimalPlaces = 2\r\n        } = config;\r\n\r\n        if (allowDecimals) {\r\n            // Split by decimal point\r\n            const parts = value.split('.');\r\n\r\n            // Add commas to integer part\r\n            parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\n            // Handle decimal part\r\n            if (parts.length > 1) {\r\n                parts[1] = parts[1].substring(0, decimalPlaces);\r\n            }\r\n\r\n            return parts.join('.');\r\n        } else {\r\n            // Integer only\r\n            return value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure proper decimal formatting on blur\r\n     * @param {HTMLInputElement} input - The input element\r\n     * @param {Object} config - Configuration options\r\n     */\r\n    ensureProperDecimalFormatting(input, config = {}) {\r\n        const value = input.value;\r\n        const numericValue = this.parseFormattedNumber(value);\r\n\r\n        if (numericValue > 0) {\r\n            const formattedValue = this.formatCurrency(numericValue, config);\r\n            input.value = formattedValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse formatted number string to float\r\n     * @param {string} value - The formatted number string\r\n     * @returns {number} The parsed number\r\n     */\r\n    parseFormattedNumber(value) {\r\n        if (!value) return 0;\r\n        return parseFloat(value.replace(/,/g, '')) || 0;\r\n    }\r\n\r\n    /**\r\n     * Format number as currency\r\n     * @param {number} value - The number to format\r\n     * @param {Object} config - Configuration options\r\n     * @returns {string} Formatted currency string\r\n     */\r\n    formatCurrency(value, config = {}) {\r\n        const {\r\n            decimalPlaces = 2\r\n        } = config;\r\n\r\n        return value.toLocaleString('en-US', {\r\n            minimumFractionDigits: decimalPlaces,\r\n            maximumFractionDigits: decimalPlaces\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Format display value with currency prefix\r\n     * @param {number} value - The number to format\r\n     * @param {Object} config - Configuration options\r\n     * @returns {string} Formatted currency string with prefix\r\n     */\r\n    formatCurrencyDisplay(value, config = {}) {\r\n        const {\r\n            currency = 'KES'\r\n        } = config;\r\n        const formatted = this.formatCurrency(value, config);\r\n        return `${currency} ${formatted}`;\r\n    }\r\n}\r\n\r\n// Create global instance\r\nwindow.numberFormatter = new NumberFormatter();\r\n\r\n// Add error handling for when formatter is not available\r\nwindow.initNumberFormatting = function(input, options = {}) {\r\n    if (window.numberFormatter) {\r\n        window.numberFormatter.initInputFormatting(input, options);\r\n    } else {\r\n        console.warn('Number formatter not available');\r\n    }\r\n};\r\n\r\n// Export for module use\r\nexport default window.numberFormatter;","// Broker Dashboard JavaScript\r\n\r\n// Initialize when DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    initializeDashboard();\r\n    showWelcomeToast();\r\n});\r\n\r\n// Dashboard Initialization\r\nfunction initializeDashboard() {\r\n    initializeTabs();\r\n    initializeButtons();\r\n    loadUserData();\r\n}\r\n\r\n// Tab Management\r\nfunction initializeTabs() {\r\n    const tabs = document.querySelectorAll('.nav-tab');\r\n    const tabContents = document.querySelectorAll('.tab-content');\r\n\r\n    tabs.forEach(tab => {\r\n        tab.addEventListener('click', () => {\r\n            const targetTab = tab.getAttribute('data-tab');\r\n\r\n            // Remove active class from all tabs and contents\r\n            tabs.forEach(t => t.classList.remove('active'));\r\n            tabContents.forEach(content => content.classList.remove('active'));\r\n\r\n            // Add active class to clicked tab and corresponding content\r\n            tab.classList.add('active');\r\n            document.getElementById(`${targetTab}-content`).classList.add('active');\r\n        });\r\n    });\r\n}\r\n\r\n// Button Initialization\r\nfunction initializeButtons() {\r\n    // Add Item Button\r\n    const addItemBtn = document.getElementById('addItemBtn');\r\n    if (addItemBtn) {\r\n        addItemBtn.addEventListener('click', handleAddItem);\r\n    }\r\n\r\n    // Submit Order Button\r\n    const submitOrderBtn = document.getElementById('submitOrderBtn');\r\n    if (submitOrderBtn) {\r\n        submitOrderBtn.addEventListener('click', handleSubmitOrder);\r\n    }\r\n\r\n    // Add Preorder Button\r\n    const addPreorderBtn = document.getElementById('addPreorderBtn');\r\n    if (addPreorderBtn) {\r\n        addPreorderBtn.addEventListener('click', handleAddPreorder);\r\n    }\r\n\r\n    // Submit Preorders Button\r\n    const submitPreordersBtn = document.getElementById('submitPreordersBtn');\r\n    if (submitPreordersBtn) {\r\n        submitPreordersBtn.addEventListener('click', handleSubmitPreorders);\r\n    }\r\n\r\n    // Add Inquiry Button\r\n    const addInquiryBtn = document.getElementById('addInquiryBtn');\r\n    if (addInquiryBtn) {\r\n        addInquiryBtn.addEventListener('click', handleAddInquiry);\r\n    }\r\n\r\n    // Submit Inquiries Button\r\n    const submitInquiriesBtn = document.getElementById('submitInquiriesBtn');\r\n    if (submitInquiriesBtn) {\r\n        submitInquiriesBtn.addEventListener('click', handleSubmitInquiries);\r\n    }\r\n\r\n    // Logout Button\r\n    const logoutBtn = document.getElementById('logoutBtn');\r\n    if (logoutBtn) {\r\n        logoutBtn.addEventListener('click', handleLogout);\r\n    }\r\n}\r\n\r\n// User Data Management\r\nfunction loadUserData() {\r\n    // Check if user is authenticated\r\n    const authState = localStorage.getItem('authState');\r\n    if (authState) {\r\n        try {\r\n            const user = JSON.parse(authState);\r\n            if (user.loggedIn && user.user) {\r\n                updateProfileDisplay(user.user);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error parsing auth state:', e);\r\n        }\r\n    }\r\n\r\n    // Update cart count\r\n    updateCartCount();\r\n}\r\n\r\n// Cart Count Management\r\nfunction updateCartCount() {\r\n    const cartCount = document.getElementById('cartCount');\r\n    if (!cartCount) return;\r\n\r\n    let totalCount = 0;\r\n\r\n    // Count orders\r\n    if (window.OrdersModule) {\r\n        totalCount += window.OrdersModule.getItemCount();\r\n    }\r\n\r\n    // Count preorders\r\n    if (window.PreordersModule) {\r\n        totalCount += window.PreordersModule.getItemCount();\r\n    }\r\n\r\n    // Count inquiries\r\n    if (window.InquiryModule) {\r\n        totalCount += window.InquiryModule.getItemCount();\r\n    }\r\n\r\n    cartCount.textContent = totalCount;\r\n\r\n    // Show/hide cart count badge\r\n    if (totalCount > 0) {\r\n        cartCount.style.display = 'block';\r\n    } else {\r\n        cartCount.style.display = 'none';\r\n    }\r\n}\r\n\r\nfunction updateProfileDisplay(user) {\r\n    const nameInput = document.getElementById('broker-name');\r\n    const emailInput = document.getElementById('broker-email');\r\n\r\n    if (nameInput) {\r\n        nameInput.value = user.username || 'Broker User';\r\n    }\r\n\r\n    if (emailInput) {\r\n        emailInput.value = user.email || 'broker@eastleighturf.com';\r\n    }\r\n}\r\n\r\n// Event Handlers\r\nfunction handleAddItem() {\r\n    if (window.OrdersModule) {\r\n        window.OrdersModule.addItem();\r\n    }\r\n}\r\n\r\nfunction handleSubmitOrder() {\r\n    if (window.OrdersModule) {\r\n        window.OrdersModule.submitOrder();\r\n    }\r\n}\r\n\r\nfunction handleAddPreorder() {\r\n    if (window.PreordersModule) {\r\n        window.PreordersModule.addPreorder();\r\n    }\r\n}\r\n\r\nfunction handleSubmitPreorders() {\r\n    if (window.PreordersModule) {\r\n        window.PreordersModule.submitPreorders();\r\n    }\r\n}\r\n\r\nfunction handleAddInquiry() {\r\n    if (window.InquiryModule) {\r\n        window.InquiryModule.addInquiry();\r\n    }\r\n}\r\n\r\nfunction handleSubmitInquiries() {\r\n    if (window.InquiryModule) {\r\n        window.InquiryModule.submitInquiries();\r\n    }\r\n}\r\n\r\nfunction handleLogout() {\r\n    // Clear authentication state\r\n    localStorage.removeItem('authState');\r\n    localStorage.removeItem('brokerInfo');\r\n\r\n    // Show logout message\r\n    showToast('Logging out...', 'success');\r\n\r\n    // Redirect to home page\r\n    window.location.href = '/index.html';\r\n}\r\n\r\n// Toast Notification System\r\nfunction showToast(message, type = 'success') {\r\n    const toast = document.getElementById('toast');\r\n    const toastMessage = toast.querySelector('.toast-message');\r\n    const toastIcon = toast.querySelector('.toast-icon i');\r\n\r\n    // Set message\r\n    toastMessage.textContent = message;\r\n\r\n    // Set icon and styling based on type\r\n    if (type === 'success') {\r\n        toastIcon.className = 'fas fa-check-circle';\r\n        toast.className = 'toast success';\r\n    } else if (type === 'error') {\r\n        toastIcon.className = 'fas fa-exclamation-circle';\r\n        toast.className = 'toast error';\r\n    } else if (type === 'info') {\r\n        toastIcon.className = 'fas fa-info-circle';\r\n        toast.className = 'toast info';\r\n    }\r\n\r\n    // Show toast\r\n    toast.classList.remove('hidden');\r\n\r\n    // Auto-hide after 4 seconds\r\n    setTimeout(() => {\r\n        hideToast();\r\n    }, 4000);\r\n}\r\n\r\nfunction hideToast() {\r\n    const toast = document.getElementById('toast');\r\n    toast.classList.add('hidden');\r\n}\r\n\r\n// Welcome Toast\r\nfunction showWelcomeToast() {\r\n    setTimeout(() => {\r\n        showToast('Login Successful\\nWelcome to your broker dashboard.', 'success');\r\n    }, 500);\r\n}\r\n\r\n// Utility Functions\r\nfunction contains(text, searchText) {\r\n    return text.toLowerCase().includes(searchText.toLowerCase());\r\n}\r\n\r\n\r\n\r\n// Export functions for external use\r\nwindow.BrokerDashboard = {\r\n    showToast,\r\n    hideToast,\r\n    handleLogout,\r\n    updateCartCount\r\n};\r\n\r\n// Add click event for toast close button\r\ndocument.addEventListener('click', function(e) {\r\n    if (e.target.classList.contains('toast-close')) {\r\n        hideToast();\r\n    }\r\n});\r\n\r\n// Mobile Navigation is now handled by the unified header.js component","/**\r\n * Broker Dashboard Payment Summary Logic\r\n * Handles order total calculations and input formatting with improved user experience\r\n */\r\n\r\n/**\r\n * Payment Summary Handler Class\r\n * Manages all payment calculation and input formatting functionality\r\n */\r\nclass PaymentSummaryHandler {\r\n    constructor() {\r\n        // Store references to DOM elements\r\n        this.elements = {\r\n            orderTotalSpan: document.getElementById('orderTotal'),\r\n            amountToPayInput: document.getElementById('amount-to-pay-input'),\r\n            creditBalanceSpan: document.getElementById('credit-balance')\r\n        };\r\n\r\n\r\n\r\n        // Initialize the handler\r\n        this.initialize();\r\n    }\r\n\r\n    /**\r\n     * Initialize event listeners and setup\r\n     */\r\n    initialize() {\r\n        console.log('PaymentSummaryHandler: Initializing...');\r\n\r\n        if (!this.areElementsValid()) {\r\n            console.warn('Payment summary elements not found');\r\n            return;\r\n        }\r\n\r\n        console.log('PaymentSummaryHandler: Elements found, setting up event listeners...');\r\n        this.setupEventListeners();\r\n        this.updateCreditBalance(); // Initial calculation\r\n        console.log('PaymentSummaryHandler: Initialization complete');\r\n    }\r\n\r\n    /**\r\n     * Validate that all required elements exist\r\n     * @returns {boolean} True if all elements are present\r\n     */\r\n    areElementsValid() {\r\n        const {\r\n            orderTotalSpan,\r\n            amountToPayInput,\r\n            creditBalanceSpan\r\n        } = this.elements;\r\n        return !!(orderTotalSpan && amountToPayInput && creditBalanceSpan);\r\n    }\r\n\r\n    /**\r\n     * Setup all event listeners for the payment input\r\n     */\r\n    setupEventListeners() {\r\n        const {\r\n            amountToPayInput\r\n        } = this.elements;\r\n\r\n        if (!amountToPayInput) return;\r\n\r\n        // Initialize number formatting with proper event handling\r\n        this.initializeNumberFormatting();\r\n\r\n        // Add event listener for credit balance update when number formatting is complete\r\n        amountToPayInput.addEventListener('numberFormatted', () => {\r\n            this.updateCreditBalance();\r\n        });\r\n\r\n        // Also add blur event listener as fallback\r\n        amountToPayInput.addEventListener('blur', () => {\r\n            this.updateCreditBalance();\r\n        });\r\n\r\n        // Add keydown event listener for Enter key\r\n        amountToPayInput.addEventListener('keydown', (event) => {\r\n            if (event.key === 'Enter') {\r\n                event.preventDefault();\r\n                amountToPayInput.blur();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initialize number formatting for the payment input\r\n     */\r\n    initializeNumberFormatting() {\r\n        const {\r\n            amountToPayInput\r\n        } = this.elements;\r\n\r\n        console.log('PaymentSummaryHandler: Initializing number formatting...');\r\n        console.log('PaymentSummaryHandler: numberFormatter available?', !!window.numberFormatter);\r\n\r\n        if (window.numberFormatter) {\r\n            console.log('PaymentSummaryHandler: Using number formatter');\r\n            window.numberFormatter.initInputFormatting(amountToPayInput, {\r\n                allowDecimals: true,\r\n                decimalPlaces: 2,\r\n                currency: 'KES'\r\n            });\r\n        } else {\r\n            console.log('PaymentSummaryHandler: Waiting for number formatter...');\r\n            // Fallback: wait for formatter to be available\r\n            const checkFormatter = setInterval(() => {\r\n                if (window.numberFormatter) {\r\n                    console.log('PaymentSummaryHandler: Number formatter now available, initializing...');\r\n                    window.numberFormatter.initInputFormatting(amountToPayInput, {\r\n                        allowDecimals: true,\r\n                        decimalPlaces: 2,\r\n                        currency: 'KES'\r\n                    });\r\n                    clearInterval(checkFormatter);\r\n                }\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Update the credit balance based on order total and amount to pay\r\n     */\r\n    updateCreditBalance() {\r\n        const {\r\n            orderTotalSpan,\r\n            amountToPayInput,\r\n            creditBalanceSpan\r\n        } = this.elements;\r\n\r\n        if (!orderTotalSpan || !amountToPayInput || !creditBalanceSpan) {\r\n            console.warn('Cannot update credit balance: missing elements');\r\n            return;\r\n        }\r\n\r\n        // Get order total (remove commas, parse as float)\r\n        const orderTotal = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(orderTotalSpan.textContent || '') : 0;\r\n\r\n        // Get input value (remove commas, parse as float)\r\n        const amountToPay = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(amountToPayInput.value) : 0;\r\n\r\n        // Calculate credit (cannot be negative)\r\n        const credit = Math.max(0, orderTotal - amountToPay);\r\n\r\n        // Update credit balance display\r\n        creditBalanceSpan.textContent = window.numberFormatter ? window.numberFormatter.formatCurrency(credit) : credit.toFixed(2);\r\n    }\r\n}\r\n\r\n/**\r\n * Initialize the Payment Summary Handler when DOM is fully loaded\r\n * This ensures all elements are available before trying to access them\r\n */\r\nfunction initializePaymentSummary() {\r\n    // Create new instance of the payment handler\r\n    window.paymentSummaryHandler = new PaymentSummaryHandler();\r\n}\r\n\r\n// Multiple ways to ensure DOM is loaded before initialization\r\nif (document.readyState === 'loading') {\r\n    // DOM is still loading, wait for DOMContentLoaded event\r\n    document.addEventListener('DOMContentLoaded', initializePaymentSummary);\r\n} else {\r\n    // DOM is already loaded, initialize immediately\r\n    initializePaymentSummary();\r\n}","// Orders Module - Enhanced functionality for order management\r\n(() => {\r\n    let products = [];\r\n    let orderItems = [];\r\n    let nextItemId = 1;\r\n    let currentBroker = null;\r\n    let availableDiscounts = [];\r\n    let availableCoupons = [];\r\n    let appliedDiscount = null;\r\n    let appliedCoupon = null;\r\n\r\n    // Initialize the orders module\r\n    async function init() {\r\n        await loadProducts();\r\n        await loadDiscounts();\r\n        await loadCoupons();\r\n        loadBrokerInfo();\r\n        updateUI();\r\n        bindEvents();\r\n    }\r\n\r\n    // Load products from the main site's JSON\r\n    async function loadProducts() {\r\n        try {\r\n            const response = await fetch('/src/data/products.json');\r\n            products = await response.json();\r\n            console.log('Products loaded:', products.length, 'products');\r\n        } catch (error) {\r\n            console.error('Failed to load products:', error);\r\n            showToast('Failed to load products', 'error');\r\n        }\r\n    }\r\n\r\n    // Load available discounts\r\n    async function loadDiscounts() {\r\n        try {\r\n            const response = await fetch('/src/data/discounts.json');\r\n            const data = await response.json();\r\n            availableDiscounts = data.promotions.filter(promo => promo.active);\r\n            console.log('Discounts loaded:', availableDiscounts.length, 'active discounts');\r\n        } catch (error) {\r\n            console.error('Failed to load discounts:', error);\r\n            availableDiscounts = [];\r\n        }\r\n    }\r\n\r\n    // Load available coupons\r\n    async function loadCoupons() {\r\n        try {\r\n            const response = await fetch('/src/data/coupons.json');\r\n            const data = await response.json();\r\n            availableCoupons = data.coupons.filter(coupon =>\r\n                coupon.usedCount < coupon.usageLimit &&\r\n                new Date() >= new Date(coupon.validFrom) &&\r\n                new Date() <= new Date(coupon.validTo)\r\n            );\r\n            console.log('Coupons loaded:', availableCoupons.length, 'available coupons');\r\n        } catch (error) {\r\n            console.error('Failed to load coupons:', error);\r\n            availableCoupons = [];\r\n        }\r\n    }\r\n\r\n    // Load broker information\r\n    function loadBrokerInfo() {\r\n        // Get broker info from localStorage or use defaults\r\n        const brokerData = localStorage.getItem('brokerInfo');\r\n        if (brokerData) {\r\n            currentBroker = JSON.parse(brokerData);\r\n        } else {\r\n            currentBroker = {\r\n                id: 'BROKER001',\r\n                name: 'Broker User',\r\n                email: 'broker@eastleighturf.com',\r\n                phone: '+254700000000'\r\n            };\r\n        }\r\n    }\r\n\r\n    // Bind event listeners\r\n    function bindEvents() {\r\n        const addItemBtn = document.getElementById('addItemBtn');\r\n        const submitOrderBtn = document.getElementById('submitOrderBtn');\r\n\r\n        if (addItemBtn) {\r\n            addItemBtn.addEventListener('click', showAddItemModal);\r\n        }\r\n\r\n        if (submitOrderBtn) {\r\n            submitOrderBtn.addEventListener('click', submitOrder);\r\n        }\r\n    }\r\n\r\n    // Show add item modal\r\n    function showAddItemModal() {\r\n        createAddItemModal();\r\n        const modal = document.getElementById('addItemModal');\r\n        if (modal) {\r\n            modal.style.display = 'flex';\r\n            // Initially disable discount and coupon options\r\n            disableDiscountCouponOptions();\r\n        }\r\n    }\r\n\r\n    // Create add item modal\r\n    function createAddItemModal() {\r\n        // Remove existing modal if any\r\n        const existingModal = document.getElementById('addItemModal');\r\n        if (existingModal) {\r\n            existingModal.remove();\r\n        }\r\n\r\n        const modalHTML = `\r\n            <div id=\"addItemModal\" class=\"modal-overlay\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h2>Add Order Item</h2>\r\n                        <button class=\"modal-close\" id=\"closeAddItemModal\" aria-label=\"Close modal\">\r\n                            <i class=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form id=\"addItemForm\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"modalProduct\">Product *</label>\r\n                                <select id=\"modalProduct\" required>\r\n                                    <option value=\"\">Select a product</option>\r\n                                    ${products.map(product =>\r\n            `<option value=\"${product.id}\">${product.name} (${product.thickness})</option>`\r\n        ).join('')}\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div class=\"form-group\">\r\n                                <label for=\"modalQuantity\">Quantity (m²) *</label>\r\n                                <input type=\"number\" id=\"modalQuantity\" min=\"0.1\" step=\"0.1\" required placeholder=\"Enter quantity\">\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label>Unit Price (KES)</label>\r\n                                <input type=\"text\" id=\"modalUnitPrice\" readonly value=\"0\">\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <label>Subtotal (KES)</label>\r\n                                <input type=\"text\" id=\"modalSubtotal\" readonly value=\"0\">\r\n                            </div>\r\n\r\n                            <div class=\"discount-section\">\r\n                                <h3>Discounts & Coupons</h3>\r\n                                \r\n                                <div class=\"form-group\">\r\n                                    <label for=\"modalDiscount\">Available Discounts</label>\r\n                                    <select id=\"modalDiscount\" disabled>\r\n                                        <option value=\"\">No discount</option>\r\n                                        ${availableDiscounts.map(discount =>\r\n            `<option value=\"${discount.id}\">${discount.name} - ${discount.description}</option>`\r\n        ).join('')}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"modalCoupon\">Coupon Code</label>\r\n                                    <div class=\"coupon-input-group\">\r\n                                        <input type=\"text\" id=\"modalCoupon\" placeholder=\"Enter coupon code\" disabled>\r\n                                        <button type=\"button\" id=\"applyCouponBtn\" disabled>Apply</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"discount-summary\" id=\"discountSummary\" style=\"display: none;\">\r\n                                    <div class=\"summary-row\">\r\n                                        <span>Subtotal:</span>\r\n                                        <span id=\"summarySubtotal\">KES 0</span>\r\n                                    </div>\r\n                                    <div class=\"summary-row discount-row\" id=\"discountRow\" style=\"display: none;\">\r\n                                        <span>Discount:</span>\r\n                                        <span id=\"summaryDiscount\">-KES 0</span>\r\n                                    </div>\r\n                                    <div class=\"summary-row coupon-row\" id=\"couponRow\" style=\"display: none;\">\r\n                                        <span>Coupon:</span>\r\n                                        <span id=\"summaryCoupon\">-KES 0</span>\r\n                                    </div>\r\n                                    <div class=\"summary-row final-total\">\r\n                                        <span>Final Total:</span>\r\n                                        <span id=\"summaryFinalTotal\">KES 0</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" id=\"cancelAddItem\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-primary\" id=\"confirmAddItem\" disabled>Add to Order</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        document.body.insertAdjacentHTML('beforeend', modalHTML);\r\n        bindModalEvents();\r\n    }\r\n\r\n    // Bind modal events\r\n    function bindModalEvents() {\r\n        const modal = document.getElementById('addItemModal');\r\n        const closeBtn = document.getElementById('closeAddItemModal');\r\n        const cancelBtn = document.getElementById('cancelAddItem');\r\n        const confirmBtn = document.getElementById('confirmAddItem');\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n\r\n        if (closeBtn) {\r\n            closeBtn.addEventListener('click', closeAddItemModal);\r\n        }\r\n\r\n        if (cancelBtn) {\r\n            cancelBtn.addEventListener('click', closeAddItemModal);\r\n        }\r\n\r\n        if (confirmBtn) {\r\n            confirmBtn.addEventListener('click', addItemToOrder);\r\n        }\r\n\r\n        if (productSelect) {\r\n            productSelect.addEventListener('change', handleProductChange);\r\n        }\r\n\r\n        if (quantityInput) {\r\n            quantityInput.addEventListener('input', handleQuantityChange);\r\n\r\n            // Add number formatting for quantity input\r\n            if (window.numberFormatter) {\r\n                window.numberFormatter.initInputFormatting(quantityInput, {\r\n                    allowDecimals: true,\r\n                    decimalPlaces: 1,\r\n                    currency: 'KES'\r\n                });\r\n            } else {\r\n                // Fallback: wait for formatter to be available\r\n                const checkFormatter = setInterval(() => {\r\n                    if (window.numberFormatter) {\r\n                        window.numberFormatter.initInputFormatting(quantityInput, {\r\n                            allowDecimals: true,\r\n                            decimalPlaces: 1,\r\n                            currency: 'KES'\r\n                        });\r\n                        clearInterval(checkFormatter);\r\n                    }\r\n                }, 100);\r\n            }\r\n        }\r\n\r\n        if (applyCouponBtn) {\r\n            applyCouponBtn.addEventListener('click', applyCoupon);\r\n        }\r\n\r\n        // Close modal on overlay click\r\n        if (modal) {\r\n            modal.addEventListener('click', (e) => {\r\n                if (e.target === modal) {\r\n                    closeAddItemModal();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle product selection\r\n    function handleProductChange() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const unitPriceInput = document.getElementById('modalUnitPrice');\r\n        const subtotalInput = document.getElementById('modalSubtotal');\r\n\r\n        if (productSelect && productSelect.value) {\r\n            const product = products.find(p => p.id === productSelect.value);\r\n            if (product) {\r\n                unitPriceInput.value = product.price.toLocaleString('en-US');\r\n                updateSubtotal();\r\n                checkEnableDiscountCoupon();\r\n            }\r\n        } else {\r\n            unitPriceInput.value = '0';\r\n            subtotalInput.value = '0';\r\n            disableDiscountCouponOptions();\r\n        }\r\n    }\r\n\r\n    // Handle quantity change\r\n    function handleQuantityChange() {\r\n        updateSubtotal();\r\n        checkEnableDiscountCoupon();\r\n    }\r\n\r\n    // Update subtotal\r\n    function updateSubtotal() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const subtotalInput = document.getElementById('modalSubtotal');\r\n\r\n        if (productSelect && productSelect.value && quantityInput && quantityInput.value) {\r\n            const product = products.find(p => p.id === productSelect.value);\r\n            const quantity = window.numberFormatter ? window.numberFormatter.parseFormattedNumber(quantityInput.value) : parseFloat(quantityInput.value) || 0;\r\n            const subtotal = product.price * quantity;\r\n\r\n            subtotalInput.value = window.numberFormatter ? window.numberFormatter.formatCurrency(subtotal) : subtotal.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            });\r\n\r\n            updateDiscountSummary();\r\n        } else {\r\n            subtotalInput.value = '0';\r\n        }\r\n    }\r\n\r\n    // Check if discount and coupon options should be enabled\r\n    function checkEnableDiscountCoupon() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n        const confirmBtn = document.getElementById('confirmAddItem');\r\n\r\n        const hasProduct = productSelect && productSelect.value;\r\n        const hasQuantity = quantityInput && quantityInput.value && (window.numberFormatter ? window.numberFormatter.parseFormattedNumber(quantityInput.value) : parseFloat(quantityInput.value)) > 0;\r\n\r\n        if (hasProduct && hasQuantity) {\r\n            enableDiscountCouponOptions();\r\n            if (confirmBtn) confirmBtn.disabled = false;\r\n        } else {\r\n            disableDiscountCouponOptions();\r\n            if (confirmBtn) confirmBtn.disabled = true;\r\n        }\r\n    }\r\n\r\n    // Enable discount and coupon options\r\n    function enableDiscountCouponOptions() {\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n\r\n        if (discountSelect) discountSelect.disabled = false;\r\n        if (couponInput) couponInput.disabled = false;\r\n        if (applyCouponBtn) applyCouponBtn.disabled = false;\r\n\r\n        // Add event listeners for discount changes\r\n        if (discountSelect) {\r\n            discountSelect.addEventListener('change', updateDiscountSummary);\r\n        }\r\n    }\r\n\r\n    // Disable discount and coupon options\r\n    function disableDiscountCouponOptions() {\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const applyCouponBtn = document.getElementById('applyCouponBtn');\r\n\r\n        if (discountSelect) {\r\n            discountSelect.disabled = true;\r\n            discountSelect.value = '';\r\n        }\r\n        if (couponInput) {\r\n            couponInput.disabled = true;\r\n            couponInput.value = '';\r\n        }\r\n        if (applyCouponBtn) applyCouponBtn.disabled = true;\r\n\r\n        // Reset discount summary\r\n        appliedDiscount = null;\r\n        appliedCoupon = null;\r\n        updateDiscountSummary();\r\n    }\r\n\r\n    // Apply coupon\r\n    function applyCoupon() {\r\n        const couponInput = document.getElementById('modalCoupon');\r\n        const couponCode = couponInput.value.trim().toUpperCase();\r\n\r\n        if (!couponCode) {\r\n            showToast('Please enter a coupon code', 'error');\r\n            return;\r\n        }\r\n\r\n        const coupon = availableCoupons.find(c => c.code === couponCode);\r\n        if (!coupon) {\r\n            showToast('Invalid coupon code', 'error');\r\n            return;\r\n        }\r\n\r\n        const subtotal = getCurrentSubtotal();\r\n        if (subtotal < coupon.minOrder) {\r\n            showToast(`Minimum order amount for this coupon is KES ${coupon.minOrder.toLocaleString()}`, 'error');\r\n            return;\r\n        }\r\n\r\n        appliedCoupon = coupon;\r\n        showToast(`Coupon ${coupon.code} applied successfully!`, 'success');\r\n        updateDiscountSummary();\r\n    }\r\n\r\n    // Update discount summary\r\n    function updateDiscountSummary() {\r\n        const subtotal = getCurrentSubtotal();\r\n        const discountSummary = document.getElementById('discountSummary');\r\n        const summarySubtotal = document.getElementById('summarySubtotal');\r\n        const discountRow = document.getElementById('discountRow');\r\n        const summaryDiscount = document.getElementById('summaryDiscount');\r\n        const couponRow = document.getElementById('couponRow');\r\n        const summaryCoupon = document.getElementById('summaryCoupon');\r\n        const summaryFinalTotal = document.getElementById('summaryFinalTotal');\r\n\r\n        if (!discountSummary) return;\r\n\r\n        summarySubtotal.textContent = `KES ${subtotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}`;\r\n\r\n        let finalTotal = subtotal;\r\n        let discountAmount = 0;\r\n        let couponAmount = 0;\r\n\r\n        // Calculate discount\r\n        const discountSelect = document.getElementById('modalDiscount');\r\n        if (discountSelect && discountSelect.value) {\r\n            const discount = availableDiscounts.find(d => d.id === discountSelect.value);\r\n            if (discount && subtotal >= discount.minOrder) {\r\n                if (discount.type === 'percentage') {\r\n                    discountAmount = (subtotal * discount.value / 100);\r\n                    if (discount.maxDiscount) {\r\n                        discountAmount = Math.min(discountAmount, discount.maxDiscount);\r\n                    }\r\n                } else {\r\n                    discountAmount = discount.value;\r\n                }\r\n                finalTotal -= discountAmount;\r\n                appliedDiscount = discount;\r\n            }\r\n        }\r\n\r\n        // Calculate coupon\r\n        if (appliedCoupon) {\r\n            if (appliedCoupon.type === 'percentage') {\r\n                couponAmount = (subtotal * appliedCoupon.value / 100);\r\n                if (appliedCoupon.maxDiscount) {\r\n                    couponAmount = Math.min(couponAmount, appliedCoupon.maxDiscount);\r\n                }\r\n            } else {\r\n                couponAmount = appliedCoupon.value;\r\n            }\r\n            finalTotal -= couponAmount;\r\n        }\r\n\r\n        // Show/hide discount row\r\n        if (discountAmount > 0) {\r\n            discountRow.style.display = 'flex';\r\n            summaryDiscount.textContent = `-KES ${discountAmount.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            })}`;\r\n        } else {\r\n            discountRow.style.display = 'none';\r\n        }\r\n\r\n        // Show/hide coupon row\r\n        if (couponAmount > 0) {\r\n            couponRow.style.display = 'flex';\r\n            summaryCoupon.textContent = `-KES ${couponAmount.toLocaleString('en-US', {\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            })}`;\r\n        } else {\r\n            couponRow.style.display = 'none';\r\n        }\r\n\r\n        summaryFinalTotal.textContent = `KES ${finalTotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}`;\r\n\r\n        discountSummary.style.display = 'block';\r\n    }\r\n\r\n    // Get current subtotal from modal\r\n    function getCurrentSubtotal() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n\r\n        if (productSelect && productSelect.value && quantityInput && quantityInput.value) {\r\n            const product = products.find(p => p.id === productSelect.value);\r\n            const quantity = parseFloat(quantityInput.value) || 0;\r\n            return product.price * quantity;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // Add item to order\r\n    function addItemToOrder() {\r\n        const productSelect = document.getElementById('modalProduct');\r\n        const quantityInput = document.getElementById('modalQuantity');\r\n\r\n        if (!productSelect.value || !quantityInput.value) {\r\n            showToast('Please select a product and enter quantity', 'error');\r\n            return;\r\n        }\r\n\r\n        const product = products.find(p => p.id === productSelect.value);\r\n        const quantity = parseFloat(quantityInput.value);\r\n        const subtotal = getCurrentSubtotal();\r\n\r\n        const item = {\r\n            id: nextItemId++,\r\n            productId: product.id,\r\n            product: product,\r\n            quantity: quantity,\r\n            unitPrice: product.price,\r\n            subtotal: subtotal,\r\n            discount: appliedDiscount,\r\n            coupon: appliedCoupon,\r\n            finalTotal: subtotal - (appliedDiscount ? calculateDiscountAmount(subtotal, appliedDiscount) : 0) - (appliedCoupon ? calculateCouponAmount(subtotal, appliedCoupon) : 0)\r\n        };\r\n\r\n        orderItems.push(item);\r\n        closeAddItemModal();\r\n        updateUI();\r\n        showToast('Item added to order', 'success');\r\n\r\n        // Update cart count\r\n        if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n            window.BrokerDashboard.updateCartCount();\r\n        }\r\n    }\r\n\r\n    // Calculate discount amount\r\n    function calculateDiscountAmount(subtotal, discount) {\r\n        if (discount.type === 'percentage') {\r\n            let amount = (subtotal * discount.value / 100);\r\n            if (discount.maxDiscount) {\r\n                amount = Math.min(amount, discount.maxDiscount);\r\n            }\r\n            return amount;\r\n        }\r\n        return discount.value;\r\n    }\r\n\r\n    // Calculate coupon amount\r\n    function calculateCouponAmount(subtotal, coupon) {\r\n        if (coupon.type === 'percentage') {\r\n            let amount = (subtotal * coupon.value / 100);\r\n            if (coupon.maxDiscount) {\r\n                amount = Math.min(amount, coupon.maxDiscount);\r\n            }\r\n            return amount;\r\n        }\r\n        return coupon.value;\r\n    }\r\n\r\n    // Close add item modal\r\n    function closeAddItemModal() {\r\n        const modal = document.getElementById('addItemModal');\r\n        if (modal) {\r\n            modal.remove();\r\n        }\r\n        // Reset applied discounts\r\n        appliedDiscount = null;\r\n        appliedCoupon = null;\r\n    }\r\n\r\n    // Remove an item from the order\r\n    function removeItem(itemId) {\r\n        orderItems = orderItems.filter(item => item.id !== itemId);\r\n        updateUI();\r\n        showToast('Item removed from order', 'success');\r\n\r\n        // Update cart count\r\n        if (window.BrokerDashboard && window.BrokerDashboard.updateCartCount) {\r\n            window.BrokerDashboard.updateCartCount();\r\n        }\r\n    }\r\n\r\n    // Calculate order total\r\n    function calculateTotal() {\r\n        return orderItems.reduce((sum, item) => sum + item.finalTotal, 0);\r\n    }\r\n\r\n    // Update the UI\r\n    function updateUI() {\r\n        const tableBody = document.getElementById('orderTableBody');\r\n        const emptyState = document.getElementById('emptyOrderState');\r\n        const orderTotal = document.getElementById('orderTotal');\r\n        const submitBtn = document.getElementById('submitOrderBtn');\r\n\r\n        if (!tableBody || !emptyState || !orderTotal || !submitBtn) return;\r\n\r\n        // Show/hide empty state\r\n        if (orderItems.length === 0) {\r\n            tableBody.innerHTML = '';\r\n            emptyState.style.display = 'block';\r\n            submitBtn.disabled = true;\r\n        } else {\r\n            emptyState.style.display = 'none';\r\n            submitBtn.disabled = false;\r\n            // Render table rows\r\n            tableBody.innerHTML = orderItems.map(item => createOrderRow(item)).join('');\r\n            // Add event listeners to new elements\r\n            orderItems.forEach(item => {\r\n                const deleteBtn = document.getElementById(`delete-${item.id}`);\r\n                if (deleteBtn) {\r\n                    deleteBtn.addEventListener('click', () => {\r\n                        removeItem(item.id);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // Update total\r\n        const total = calculateTotal();\r\n        orderTotal.textContent = total.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        });\r\n\r\n        // Update credit balance when order total changes\r\n        if (window.paymentSummaryHandler && window.paymentSummaryHandler.updateCreditBalance) {\r\n            window.paymentSummaryHandler.updateCreditBalance();\r\n        }\r\n    }\r\n\r\n    // Create order row HTML\r\n    function createOrderRow(item) {\r\n        const discountText = item.discount ? `${item.discount.name} (-${item.discount.value}%)` : '';\r\n        const couponText = item.coupon ? `${item.coupon.code} (-${item.coupon.value}${item.coupon.type === 'percentage' ? '%' : ' KES'})` : '';\r\n\r\n        return `\r\n            <tr>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Product Name</label>\r\n                        <strong>${item.product.name} (${item.product.thickness})</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Quantity (m²)</label>\r\n                        <strong>${item.quantity}</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Unit Price (KES)</label>\r\n                        <strong>${item.unitPrice.toLocaleString('en-US')}</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Subtotal (KES)</label>\r\n                        <strong>${item.subtotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}</strong>\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Final Total (KES)</label>\r\n                        <strong>${item.finalTotal.toLocaleString('en-US', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        })}</strong>\r\n                        ${discountText || couponText ? `<br><small class=\"discount-info\">${discountText}${discountText && couponText ? ', ' : ''}${couponText}</small>` : ''}\r\n                    </div>\r\n                </td>\r\n                <td>\r\n                    <div class=\"order-field\">\r\n                        <label>Action</label>\r\n                        <button class=\"delete-btn\" id=\"delete-${item.id}\">\r\n                            <i class=\"fas fa-trash\"></i> Delete\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        `;\r\n    }\r\n\r\n    // Submit order\r\n    function submitOrder() {\r\n        if (orderItems.length === 0) {\r\n            showToast('No items in order', 'error');\r\n            return;\r\n        }\r\n\r\n        const orderData = {\r\n            brokerId: currentBroker.id,\r\n            brokerName: currentBroker.name,\r\n            brokerEmail: currentBroker.email,\r\n            brokerPhone: currentBroker.phone,\r\n            items: orderItems,\r\n            total: calculateTotal(),\r\n            subtotal: orderItems.reduce((sum, item) => sum + item.subtotal, 0),\r\n            totalDiscount: orderItems.reduce((sum, item) => {\r\n                let itemDiscount = 0;\r\n                if (item.discount) {\r\n                    itemDiscount += calculateDiscountAmount(item.subtotal, item.discount);\r\n                }\r\n                if (item.coupon) {\r\n                    itemDiscount += calculateCouponAmount(item.subtotal, item.coupon);\r\n                }\r\n                return sum + itemDiscount;\r\n            }, 0),\r\n            orderDate: new Date().toISOString()\r\n        };\r\n\r\n        // Send to WhatsApp\r\n        sendOrderToWhatsApp(orderData);\r\n    }\r\n\r\n    // Send order to WhatsApp\r\n    function sendOrderToWhatsApp(orderData) {\r\n        const message = generateOrderMessage(orderData);\r\n\r\n        if (window.WhatsAppService && window.WhatsAppService.sendToWhatsApp) {\r\n            const success = window.WhatsAppService.sendToWhatsApp(message, 'broker-order');\r\n            if (success) {\r\n                showToast('Order sent to WhatsApp successfully!', 'success');\r\n                // Clear order after successful submission\r\n                orderItems = [];\r\n                updateUI();\r\n            } else {\r\n                showToast('Failed to send order to WhatsApp', 'error');\r\n            }\r\n        } else {\r\n            // Fallback: open WhatsApp manually\r\n            const whatsappNumber = '254743375997';\r\n            const encodedMessage = encodeURIComponent(message);\r\n            const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodedMessage}`;\r\n            window.open(whatsappUrl, '_blank');\r\n            showToast('Order opened in WhatsApp!', 'success');\r\n            // Clear order after successful submission\r\n            orderItems = [];\r\n            updateUI();\r\n        }\r\n    }\r\n\r\n    // Generate order message for WhatsApp\r\n    function generateOrderMessage(orderData) {\r\n        const itemsList = orderData.items.map(item => {\r\n            let itemText = `• ${item.product.name} (${item.product.thickness})\\n`;\r\n            itemText += `  Quantity: ${item.quantity} m²\\n`;\r\n            itemText += `  Unit Price: KES ${item.unitPrice.toLocaleString()}\\n`;\r\n            itemText += `  Subtotal: KES ${item.subtotal.toLocaleString()}`;\r\n\r\n            if (item.discount || item.coupon) {\r\n                itemText += `\\n  Final Total: KES ${item.finalTotal.toLocaleString()}`;\r\n                if (item.discount) {\r\n                    itemText += ` (${item.discount.name} applied)`;\r\n                }\r\n                if (item.coupon) {\r\n                    itemText += ` (${item.coupon.code} applied)`;\r\n                }\r\n            }\r\n            return itemText;\r\n        }).join('\\n\\n');\r\n\r\n        return `*BROKER ORDER SUBMISSION - Eastleigh Turf Grass*\r\n\r\n*Broker Details:*\r\n• ID: ${orderData.brokerId}\r\n• Name: ${orderData.brokerName}\r\n• Email: ${orderData.brokerEmail}\r\n• Phone: ${orderData.brokerPhone}\r\n\r\n*Order Items:*\r\n${itemsList}\r\n\r\n*Order Summary:*\r\n• Total Items: ${orderData.items.length}\r\n• Subtotal: KES ${orderData.subtotal.toLocaleString()}\r\n• Total Discount: KES ${orderData.totalDiscount.toLocaleString()}\r\n• Final Total: KES ${orderData.total.toLocaleString()}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    // Show toast notification\r\n    function showToast(message, type = 'success') {\r\n        const toast = document.getElementById('toast');\r\n        const toastMessage = toast.querySelector('.toast-message');\r\n\r\n        if (toast && toastMessage) {\r\n            toast.className = `toast ${type}`;\r\n            toastMessage.textContent = message;\r\n            toast.classList.remove('hidden');\r\n\r\n            setTimeout(() => {\r\n                toast.classList.add('hidden');\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    // Get item count for cart\r\n    function getItemCount() {\r\n        return orderItems.length;\r\n    }\r\n\r\n    // Initialize the module when DOM is loaded\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', async () => {\r\n            await init();\r\n        });\r\n    } else {\r\n        (async () => {\r\n            await init();\r\n        })();\r\n    }\r\n\r\n    // Expose module to window object\r\n    window.OrdersModule = {\r\n        addItem: showAddItemModal,\r\n        removeItem,\r\n        getItemCount,\r\n        calculateTotal,\r\n        updateUI,\r\n        submitOrder\r\n    };\r\n\r\n})();","// WhatsApp Service for Broker Dashboard\r\nclass WhatsAppService {\r\n    constructor() {\r\n        this.whatsappNumber = '254743375997'; // Business WhatsApp number\r\n        this.businessName = 'Eastleigh Turf Grass';\r\n        this.baseUrl = 'https://wa.me';\r\n    }\r\n\r\n    /**\r\n     * Send order to WhatsApp\r\n     * @param {Object} orderData - Order data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendOrder(orderData) {\r\n        try {\r\n            const message = this.generateOrderMessage(orderData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send preorder to WhatsApp\r\n     * @param {Object} preorderData - Preorder data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendPreorder(preorderData) {\r\n        try {\r\n            const message = this.generatePreorderMessage(preorderData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send inquiry to WhatsApp\r\n     * @param {Object} inquiryData - Inquiry data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendInquiry(inquiryData) {\r\n        try {\r\n            const message = this.generateInquiryMessage(inquiryData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send contact form to WhatsApp\r\n     * @param {Object} contactData - Contact data object\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendContact(contactData) {\r\n        try {\r\n            const message = this.generateContactMessage(contactData);\r\n            const url = this.generateWhatsAppUrl(message);\r\n\r\n            // Open WhatsApp in new tab\r\n            window.open(url, '_blank');\r\n\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate WhatsApp URL\r\n     * @param {string} message - Message to send\r\n     * @returns {string} - WhatsApp URL\r\n     */\r\n    generateWhatsAppUrl(message) {\r\n        const encodedMessage = encodeURIComponent(message);\r\n        return `${this.baseUrl}/${this.whatsappNumber}?text=${encodedMessage}`;\r\n    }\r\n\r\n    /**\r\n     * Generate order message\r\n     * @param {Object} orderData - Order data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generateOrderMessage(orderData) {\r\n        const {\r\n            brokerId,\r\n            brokerName,\r\n            brokerEmail,\r\n            brokerPhone,\r\n            items,\r\n            total,\r\n            subtotal,\r\n            totalDiscount,\r\n            orderDate\r\n        } = orderData;\r\n\r\n        const itemsList = items.map(item => {\r\n            let itemText = `• ${item.product.name} (${item.product.thickness})\\n`;\r\n            itemText += `  Quantity: ${item.quantity} m²\\n`;\r\n            itemText += `  Unit Price: KES ${item.unitPrice.toLocaleString()}\\n`;\r\n            itemText += `  Subtotal: KES ${item.subtotal.toLocaleString()}`;\r\n\r\n            if (item.discount || item.coupon) {\r\n                itemText += `\\n  Final Total: KES ${item.finalTotal.toLocaleString()}`;\r\n                if (item.discount) {\r\n                    itemText += ` (${item.discount.name} applied)`;\r\n                }\r\n                if (item.coupon) {\r\n                    itemText += ` (${item.coupon.code} applied)`;\r\n                }\r\n            }\r\n            return itemText;\r\n        }).join('\\n\\n');\r\n\r\n        return `*BROKER ORDER SUBMISSION - ${this.businessName}*\r\n\r\n*Broker Details:*\r\n• ID: ${brokerId}\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n• Phone: ${brokerPhone}\r\n\r\n*Order Items:*\r\n${itemsList}\r\n\r\n*Order Summary:*\r\n• Total Items: ${items.length}\r\n• Subtotal: KES ${subtotal.toLocaleString()}\r\n• Total Discount: KES ${totalDiscount.toLocaleString()}\r\n• Final Total: KES ${total.toLocaleString()}\r\n\r\n*Submitted:* ${new Date(orderDate).toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Generate preorder message\r\n     * @param {Object} preorderData - Preorder data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generatePreorderMessage(preorderData) {\r\n        const {\r\n            brokerName,\r\n            brokerEmail,\r\n            items,\r\n            expectedDate,\r\n            specialNotes,\r\n            total\r\n        } = preorderData;\r\n\r\n        const itemsList = items.map(item => {\r\n            return `• ${item.product.name} (${item.product.thickness})\r\n  Quantity: ${item.quantity} m²\r\n  Unit Price: KES ${item.unitPrice.toLocaleString()}\r\n  Total: KES ${item.total.toLocaleString()}`;\r\n        }).join('\\n\\n');\r\n\r\n        return `*BROKER PREORDER SUBMISSION - ${this.businessName}*\r\n\r\n*Broker Details:*\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n\r\n*Preorder Items:*\r\n${itemsList}\r\n\r\n*Preorder Details:*\r\n• Expected Date: ${expectedDate || 'Not specified'}\r\n• Special Notes: ${specialNotes || 'None'}\r\n• Total Amount: KES ${total.toLocaleString()}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Generate inquiry message\r\n     * @param {Object} inquiryData - Inquiry data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generateInquiryMessage(inquiryData) {\r\n        const {\r\n            brokerName,\r\n            brokerEmail,\r\n            items,\r\n            totalOriginal,\r\n            totalBargain\r\n        } = inquiryData;\r\n\r\n        const itemsList = items.map(item => {\r\n            const difference = item.bargainPrice - item.originalPrice;\r\n            const differenceText = difference > 0 ? `+KES ${difference.toLocaleString()}` : `-KES ${Math.abs(difference).toLocaleString()}`;\r\n\r\n            return `• ${item.product.name} (${item.product.thickness})\r\n  Original Price: KES ${item.originalPrice.toLocaleString()}\r\n  Bargain Price: KES ${item.bargainPrice.toLocaleString()}\r\n  Difference: ${differenceText}`;\r\n        }).join('\\n\\n');\r\n\r\n        const totalDifference = totalBargain - totalOriginal;\r\n        const totalDifferenceText = totalDifference > 0 ? `+KES ${totalDifference.toLocaleString()}` : `-KES ${Math.abs(totalDifference).toLocaleString()}`;\r\n\r\n        return `*BROKER PRICE INQUIRY - ${this.businessName}*\r\n\r\n*Broker Details:*\r\n• Name: ${brokerName}\r\n• Email: ${brokerEmail}\r\n\r\n*Price Inquiries:*\r\n${itemsList}\r\n\r\n*Inquiry Summary:*\r\n• Total Original Value: KES ${totalOriginal.toLocaleString()}\r\n• Total Bargain Value: KES ${totalBargain.toLocaleString()}\r\n• Total Difference: ${totalDifferenceText}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Generate contact message\r\n     * @param {Object} contactData - Contact data\r\n     * @returns {string} - Formatted message\r\n     */\r\n    generateContactMessage(contactData) {\r\n        const {\r\n            name,\r\n            email,\r\n            phone,\r\n            subject,\r\n            message\r\n        } = contactData;\r\n\r\n        return `*CONTACT FORM SUBMISSION - ${this.businessName}*\r\n\r\n*Customer Details:*\r\n• Name: ${name}\r\n• Email: ${email}\r\n• Phone: ${phone}\r\n\r\n*Message:*\r\nSubject: ${subject}\r\nMessage: ${message}\r\n\r\n*Submitted:* ${new Date().toLocaleString('en-KE')}`;\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {string} message - Message to send\r\n     * @param {string} type - Message type\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendToWhatsApp(message, type = 'general') {\r\n        try {\r\n            const url = this.generateWhatsAppUrl(message);\r\n            window.open(url, '_blank');\r\n            return true;\r\n        } catch (error) {\r\n            console.error('WhatsApp Service Error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} orderData - Order data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendOrderForm(orderData) {\r\n        return this.sendOrder(orderData);\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} preorderData - Preorder data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendPreorderForm(preorderData) {\r\n        return this.sendPreorder(preorderData);\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} inquiryData - Inquiry data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendInquiryForm(inquiryData) {\r\n        return this.sendInquiry(inquiryData);\r\n    }\r\n\r\n    /**\r\n     * Legacy method for backward compatibility\r\n     * @param {Object} contactData - Contact data\r\n     * @returns {boolean} - Success status\r\n     */\r\n    sendContactForm(contactData) {\r\n        return this.sendContact(contactData);\r\n    }\r\n}\r\n\r\n// Create and export singleton instance\r\nconst whatsappService = new WhatsAppService();\r\n\r\n// Make it available globally\r\nwindow.WhatsAppService = whatsappService;\r\n\r\n// Export for module systems\r\nexport default whatsappService;","// Broker Dashboard Main Entry Point\r\n// This file initializes all broker dashboard functionality\r\n\r\n// Import core functionality\r\nimport \"@/js/components/header.js\";\r\nimport \"@/js/components/cart.js\";\r\nimport \"@/js/components/cartIconPopUp.js\";\r\nimport \"@/js/components/toast.js\";\r\n\r\n// Import broker-specific modules\r\nimport \"@/js/broker/broker.js\";\r\nimport \"@/js/broker/dashboard.js\";\r\nimport \"@/js/broker/modules/orders.js\";\r\n\r\n// Import WhatsApp service\r\nimport \"@/services/whatsappService.js\";\r\nimport \"@/services/toastService.js\";\r\n\r\n// Import other broker modules if they exist\r\ntry {\r\n    import(\"@/js/broker/modules/preorders.js\");\r\n} catch (error) {\r\n    console.warn('Preorders module not available:', error);\r\n}\r\n\r\ntry {\r\n    import(\"@/js/broker/modules/inquiry.js\");\r\n} catch (error) {\r\n    console.warn('Inquiry module not available:', error);\r\n}\r\n\r\n// Initialize broker dashboard when DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    console.log('Broker dashboard initialized');\r\n\r\n    // Check if user is authenticated\r\n    const authState = localStorage.getItem('authState');\r\n    if (!authState) {\r\n        // Redirect to login if not authenticated\r\n        window.location.href = '/index.html';\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const user = JSON.parse(authState);\r\n        if (!user.loggedIn || !user.user) {\r\n            // Redirect to login if not properly authenticated\r\n            window.location.href = '/index.html';\r\n            return;\r\n        }\r\n\r\n        // Set broker info in localStorage for the orders module\r\n        const brokerInfo = {\r\n            id: 'BROKER001',\r\n            name: user.user.username || 'Broker User',\r\n            email: user.user.email || 'broker@eastleighturf.com',\r\n            phone: user.user.phone || '+254700000000'\r\n        };\r\n        localStorage.setItem('brokerInfo', JSON.stringify(brokerInfo));\r\n\r\n    } catch (error) {\r\n        console.error('Error parsing auth state:', error);\r\n        window.location.href = '/index.html';\r\n        return;\r\n    }\r\n\r\n    // Initialize broker dashboard\r\n    if (window.BrokerDashboard) {\r\n        console.log('Broker dashboard modules loaded successfully');\r\n    } else {\r\n        console.error('Broker dashboard modules failed to load');\r\n    }\r\n});\r\n\r\n// Export for potential external use\r\nexport default {\r\n    name: 'BrokerDashboard'\r\n};"],"file":"assets/broker-f27f8508.js"}