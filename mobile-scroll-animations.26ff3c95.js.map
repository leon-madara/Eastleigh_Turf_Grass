{"version":3,"file":"mobile-scroll-animations.26ff3c95.js","sources":["../src/js/effects/floating-header.js","../src/js/effects/mobile-scroll-animations.js"],"sourcesContent":["/**\r\n * Floating Navbar Controller\r\n * \r\n * Implements a floating navbar that activates when user scrolls past hero section\r\n * Works with both glassmorphism and floating states\r\n */\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Prevent duplicate initialization\r\n    const header = document.querySelector('.header');\r\n    if (header?.dataset.floatingHeaderInitialized) {\r\n        return;\r\n    }\r\n\r\n    // DOM Elements\r\n    const heroSection = document.querySelector('.contact-hero') ||\r\n        document.querySelector('.hero') ||\r\n        document.querySelector('.title-page');\r\n\r\n    // Configuration\r\n    const config = {\r\n        // Distance from top when floating should activate\r\n        offset: 100,\r\n        // Class to add when floating\r\n        floatingClass: 'floating',\r\n        // Smoothness of the transition\r\n        debounceDelay: 100, // Note: not used, see below\r\n        // Mobile breakpoint (disable floating on mobile)\r\n        mobileBreakpoint: 768\r\n    };\r\n\r\n    // State tracking\r\n    let isFloating = false;\r\n    let ticking = false;\r\n    let lastScrollY = window.scrollY;\r\n\r\n    /**\r\n     * Check if we're on mobile\r\n     */\r\n    function isMobile() {\r\n        return window.innerWidth <= config.mobileBreakpoint;\r\n    }\r\n\r\n    /**\r\n     * Check scroll position and update navbar state\r\n     */\r\n    function checkScroll() {\r\n        // Disable floating on mobile\r\n        if (isMobile()) {\r\n            if (isFloating) {\r\n                updateFloatingState(false);\r\n            }\r\n            ticking = false;\r\n            return;\r\n        }\r\n\r\n        const currentScrollY = window.scrollY;\r\n\r\n        // Determine if we should be floating\r\n        const shouldBeFloating = currentScrollY >= config.offset;\r\n\r\n        // Only update if state changed\r\n        if (shouldBeFloating !== isFloating) {\r\n            updateFloatingState(shouldBeFloating);\r\n        }\r\n\r\n        lastScrollY = currentScrollY;\r\n        ticking = false;\r\n    }\r\n\r\n    /**\r\n     * Update the floating state of the navbar\r\n     * @param {boolean} floating - Whether to activate floating state\r\n     */\r\n    function updateFloatingState(floating) {\r\n        if (floating) {\r\n            header.classList.add(config.floatingClass);\r\n            // Add data attribute for CSS targeting\r\n            header.setAttribute('data-state', 'floating');\r\n        } else {\r\n            header.classList.remove(config.floatingClass);\r\n            header.removeAttribute('data-state');\r\n        }\r\n\r\n        isFloating = floating;\r\n\r\n        // Dispatch custom event for other scripts to listen to\r\n        const event = new CustomEvent('navbarStateChange', {\r\n            detail: {\r\n                floating: isFloating\r\n            }\r\n        });\r\n        window.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Debounced scroll handler to improve performance\r\n     */\r\n    function onScroll() {\r\n        if (!ticking) {\r\n            requestAnimationFrame(() => {\r\n                checkScroll();\r\n                ticking = false;\r\n            });\r\n            ticking = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize the floating navbar\r\n     */\r\n    function init() {\r\n        // Initial state check\r\n        checkScroll();\r\n\r\n        // Add scroll event listener\r\n        window.addEventListener('scroll', onScroll, {\r\n            passive: true\r\n        });\r\n\r\n        // Handle resize events (important for mobile)\r\n        let resizeTimer;\r\n        window.addEventListener('resize', () => {\r\n            clearTimeout(resizeTimer);\r\n            resizeTimer = setTimeout(() => {\r\n                // Check if mobile state changed and update accordingly\r\n                checkScroll();\r\n            }, 250);\r\n        });\r\n\r\n        // Handle orientation change (mobile)\r\n        window.addEventListener('orientationchange', () => {\r\n            // Small delay to ensure DOM has settled\r\n            setTimeout(checkScroll, 300);\r\n        });\r\n\r\n        // Optional: Add smooth transition when page loads\r\n        setTimeout(() => {\r\n            if (header) {\r\n                header.style.transition = 'all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    // Only initialize if header exists\r\n    if (!header) {\r\n        console.warn('Floating navbar not initialized: .header element not found.');\r\n        return;\r\n    }\r\n\r\n    // Initialize when DOM is ready\r\n    init();\r\n\r\n    // Mark as initialized\r\n    header.dataset.floatingHeaderInitialized = 'true';\r\n\r\n    // Expose public methods for external use\r\n    window.Navbar = {\r\n        enableFloating: () => updateFloatingState(true),\r\n        disableFloating: () => updateFloatingState(false),\r\n        toggleFloating: () => updateFloatingState(!isFloating),\r\n        getState: () => ({\r\n            floating: isFloating\r\n        }),\r\n        refresh: () => checkScroll()\r\n    };\r\n});","// Mobile Scroll Animations\r\n// Basic mobile scroll effects for the homepage\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Mobile scroll animations\r\n    const observerOptions = {\r\n        threshold: 0.1,\r\n        rootMargin: '0px 0px -50px 0px'\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.style.opacity = '1';\r\n                entry.target.style.transform = 'translateY(0)';\r\n            }\r\n        });\r\n    }, observerOptions);\r\n\r\n    // Observe elements for scroll animations\r\n    const animatedElements = document.querySelectorAll('.product-card, .feature, .hero-content');\r\n    animatedElements.forEach(el => {\r\n        el.style.opacity = '0';\r\n        el.style.transform = 'translateY(20px)';\r\n        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\r\n        observer.observe(el);\r\n    });\r\n});"],"names":["document","addEventListener","header","querySelector","dataset","floatingHeaderInitialized","config","isFloating","ticking","checkScroll","window","innerWidth","updateFloatingState","shouldBeFloating","scrollY","floating","classList","add","setAttribute","remove","removeAttribute","event","CustomEvent","detail","dispatchEvent","onScroll","requestAnimationFrame","resizeTimer","passive","clearTimeout","setTimeout","style","transition","Navbar","enableFloating","disableFloating","toggleFloating","getState","refresh","console","warn","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","opacity","transform","threshold","rootMargin","querySelectorAll","el","observe"],"mappings":"AAMAA,SAASC,iBAAiB,mBAAoB,WAEpC,MAAAC,EAASF,SAASG,cAAc,WAClC,GAAA,MAAAD,OAAA,EAAAA,EAAQE,QAAQC,0BAChB,OAIyBL,SAAAG,cAAc,kBACvCH,SAASG,cAAc,UACvBH,SAASG,cAAc,eAG3B,MAAMG,EAEM,IAFNA,EAIa,WAJbA,EAQgB,IAItB,IAAIC,GAAa,EACbC,GAAU,EAad,SAASC,IAEL,GAROC,OAAOC,YAAcL,EAaxB,OAJIC,GACAK,GAAoB,QAEdJ,GAAA,GAId,MAGMK,EAHiBH,OAAOI,SAGaR,EAGvCO,IAAqBN,GACrBK,EAAoBC,GAIdL,GAAA,CACb,CAMD,SAASI,EAAoBG,GACrBA,GACOb,EAAAc,UAAUC,IAAIX,GAEdJ,EAAAgB,aAAa,aAAc,cAE3BhB,EAAAc,UAAUG,OAAOb,GACxBJ,EAAOkB,gBAAgB,eAGdb,EAAAQ,EAGP,MAAAM,EAAQ,IAAIC,YAAY,oBAAqB,CAC/CC,OAAQ,CACJR,SAAUR,KAGlBG,OAAOc,cAAcH,EACxB,CAKD,SAASI,IACAjB,IACDkB,sBAAsB,SAERlB,GAAA,IAEJA,GAAA,EAEjB,CAuCIN,IAlCL,WAUQ,IAAAyB,MALGjB,OAAAT,iBAAiB,SAAUwB,EAAU,CACxCG,SAAS,IAKNlB,OAAAT,iBAAiB,SAAU,KAC9B4B,aAAaF,GACbA,EAAcG,WAAW,UAGtB,OAIApB,OAAAT,iBAAiB,oBAAqB,KAEzC6B,WAAWrB,EAAa,OAI5BqB,WAAW,KACH5B,IACAA,EAAO6B,MAAMC,WAAa,kDAE/B,IACN,IAYD9B,EAAOE,QAAQC,0BAA4B,OAG3CK,OAAOuB,OAAS,CACZC,eAAgB,IAAMtB,GAAoB,GAC1CuB,gBAAiB,IAAMvB,GAAoB,GAC3CwB,eAAgB,IAAMxB,GAAqBL,GAC3C8B,SAAU,KAAO,CACbtB,SAAUR,IAEd+B,QAAS,IAAM7B,MAlBf8B,QAAQC,KAAK,8DAoBrB,GClKAxC,SAASC,iBAAiB,mBAAoB,WAE1C,MAKMwC,EAAW,IAAIC,qBAAsBC,IACvCA,EAAQC,QAAiBC,IACjBA,EAAMC,iBACAD,EAAAE,OAAOhB,MAAMiB,QAAU,IACvBH,EAAAE,OAAOhB,MAAMkB,UAAY,oBATnB,CACpBC,UAAW,GACXC,WAAY,sBAaSnD,SAASoD,iBAAiB,0CAClCR,QAAcS,IAC3BA,EAAGtB,MAAMiB,QAAU,IACnBK,EAAGtB,MAAMkB,UAAY,mBACrBI,EAAGtB,MAAMC,WAAa,yCACtBS,EAASa,QAAQD,IAEzB"}